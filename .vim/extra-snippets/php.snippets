######################################################################
#               Functions from the svn repository
# http://svn.php.net/repository/phpdoc/doc-base/trunk/funcsummary.txt
######################################################################
# php-src/ext/bcmath/bcmath.c
snippet bcadd
	${1:string }bcadd(${2:string left_operand}, ${3:string right_operand [, }${4:int scale]});${5}
snippet bccomp
	${1:int }bccomp(${2:string left_operand}, ${3:string right_operand [, }${4:int scale]});${5}
snippet bcdiv
	${1:string }bcdiv(${2:string left_operand}, ${3:string right_operand [, }${4:int scale]});${5}
snippet bcmod
	${1:string }bcmod(${2:string left_operand}, ${3:string right_operand});${4}
snippet bcmul
	${1:string }bcmul(${2:string left_operand}, ${3:string right_operand [, }${4:int scale]});${5}
snippet bcpow
	${1:string }bcpow(${2:string x}, ${3:string y [, }${4:int scale]});${5}
snippet bcpowmod
	${1:string }bcpowmod(${2:string x}, ${3:string y}, ${4:string mod [, }${5:int scale]});${6}
snippet bcscale
	${1:bool }bcscale(${2:int scale});${3}
snippet bcsqrt
	${1:string }bcsqrt(${2:string operand [, }${3:int scale]});${4}
snippet bcsub
	${1:string }bcsub(${2:string left_operand}, ${3:string right_operand [, }${4:int scale]});${5}
# php-src/ext/bz2/bz2.c
snippet bzcompress
	${1:string }bzcompress(${2:string source [, }${3:int blocksize100k [, }${4:int workfactor]]});${5}
snippet bzdecompress
	${1:string }bzdecompress(${2:string source [, }${3:int small]});${4}
snippet bzerrno
	${1:int }bzerrno(${2:resource bz});${3}
snippet bzerror
	${1:array }bzerror(${2:resource bz});${3}
snippet bzerrstr
	${1:string }bzerrstr(${2:resource bz});${3}
snippet bzopen
	${1:resource }bzopen(${2:[string|int file|fp]}, ${3:string mode});${4}
snippet bzread
	${1:string }bzread(${2:resource bz[, }${3:int length]});${4}
# php-src/ext/calendar/cal_unix.c
snippet jdtounix
	${1:int }jdtounix(${2:int jday});${3}
snippet unixtojd
	${1:int }unixtojd(${2:[int timestamp]});${3}
# php-src/ext/calendar/calendar.c
snippet cal_days_in_month
	${1:int }cal_days_in_month(${2:int calendar}, ${3:int month}, ${4:int year});${5}
snippet cal_from_jd
	${1:array }cal_from_jd(${2:int jd}, ${3:int calendar});${4}
snippet cal_info
	${1:array }cal_info(${2:[int calendar]});${3}
snippet cal_to_jd
	${1:int }cal_to_jd(${2:int calendar}, ${3:int month}, ${4:int day}, ${5:int year});${6}
snippet frenchtojd
	${1:int }frenchtojd(${2:int month}, ${3:int day}, ${4:int year});${5}
snippet gregoriantojd
	${1:int }gregoriantojd(${2:int month}, ${3:int day}, ${4:int year});${5}
snippet jddayofweek
	${1:mixed }jddayofweek(${2:int juliandaycount [, }${3:int mode]});${4}
snippet jdmonthname
	${1:string }jdmonthname(${2:int juliandaycount}, ${3:int mode});${4}
snippet jdtofrench
	${1:string }jdtofrench(${2:int juliandaycount});${3}
snippet jdtogregorian
	${1:string }jdtogregorian(${2:int juliandaycount});${3}
snippet jdtojewish
	${1:string }jdtojewish(${2:int juliandaycount [, }${3:bool hebrew [, }${4:int fl]]});${5}
snippet jdtojulian
	${1:string }jdtojulian(${2:int juliandaycount});${3}
snippet jewishtojd
	${1:int }jewishtojd(${2:int month}, ${3:int day}, ${4:int year});${5}
snippet juliantojd
	${1:int }juliantojd(${2:int month}, ${3:int day}, ${4:int year});${5}
# php-src/ext/calendar/easter.c
snippet easter_date
	${1:int }easter_date(${2:[int year]});${3}
snippet easter_days
	${1:int }easter_days(${2:[int year, }${3:[int method]]});${4}
# php-src/ext/com_dotnet/com_com.c
snippet com_create_guid
	${1:string }com_create_guid();${2}
snippet com_event_sink
	${1:bool }com_event_sink(${2:object comobject}, ${3:object sinkobject [, }${4:mixed sinkinterface]});${5}
snippet com_get_active_object
	${1:object }com_get_active_object(${2:string progid [, }${3:int code_page ]});${4}
snippet com_load_typelib
	${1:bool }com_load_typelib(${2:string typelib_name [, }${3:int case_insensitive]});${4}
snippet com_message_pump
	${1:bool }com_message_pump(${2:[int timeoutms]});${3}
snippet com_print_typeinfo
	${1:bool }com_print_typeinfo(${2:object comobject | string typelib}, ${3:string dispinterface}, ${4:bool wantsink});${5}
# php-src/ext/com_dotnet/com_persist.c
snippet COMPersistHelper::GetCurFile
	${1:string }COMPersistHelper::GetCurFile();${2}
snippet COMPersistHelper::GetMaxStreamSize
	${1:int }COMPersistHelper::GetMaxStreamSize();${2}
snippet COMPersistHelper::InitNew
	${1:int }COMPersistHelper::InitNew();${2}
snippet COMPersistHelper::LoadFromFile
	${1:bool }COMPersistHelper::LoadFromFile(${2:string filename [, }${3:int flags]});${4}
snippet COMPersistHelper::LoadFromStream
	${1:mixed }COMPersistHelper::LoadFromStream(${2:resource stream});${3}
snippet COMPersistHelper::SaveToFile
	${1:bool }COMPersistHelper::SaveToFile(${2:string filename [, }${3:bool remember]});${4}
snippet COMPersistHelper::SaveToStream
	${1:int }COMPersistHelper::SaveToStream(${2:resource stream});${3}
snippet COMPersistHelper::__construct
	${1:int }COMPersistHelper::__construct(${2:[object com_object]});${3}
# php-src/ext/com_dotnet/com_variant.c
snippet variant_abs
	${1:mixed }variant_abs(${2:mixed left});${3}
snippet variant_add
	${1:mixed }variant_add(${2:mixed left}, ${3:mixed right});${4}
snippet variant_and
	${1:mixed }variant_and(${2:mixed left}, ${3:mixed right});${4}
snippet variant_cast
	${1:object }variant_cast(${2:object variant}, ${3:int type});${4}
snippet variant_cat
	${1:mixed }variant_cat(${2:mixed left}, ${3:mixed right});${4}
snippet variant_cmp
	${1:int }variant_cmp(${2:mixed left}, ${3:mixed right [, }${4:int lcid [, }${5:int flags]]});${6}
snippet variant_date_from_timestamp
	${1:object }variant_date_from_timestamp(${2:int timestamp});${3}
snippet variant_date_to_timestamp
	${1:int }variant_date_to_timestamp(${2:object variant});${3}
snippet variant_div
	${1:mixed }variant_div(${2:mixed left}, ${3:mixed right});${4}
snippet variant_eqv
	${1:mixed }variant_eqv(${2:mixed left}, ${3:mixed right});${4}
snippet variant_fix
	${1:mixed }variant_fix(${2:mixed left});${3}
snippet variant_get_type
	${1:int }variant_get_type(${2:object variant});${3}
snippet variant_idiv
	${1:mixed }variant_idiv(${2:mixed left}, ${3:mixed right});${4}
snippet variant_imp
	${1:mixed }variant_imp(${2:mixed left}, ${3:mixed right});${4}
snippet variant_int
	${1:mixed }variant_int(${2:mixed left});${3}
snippet variant_mod
	${1:mixed }variant_mod(${2:mixed left}, ${3:mixed right});${4}
snippet variant_mul
	${1:mixed }variant_mul(${2:mixed left}, ${3:mixed right});${4}
snippet variant_neg
	${1:mixed }variant_neg(${2:mixed left});${3}
snippet variant_not
	${1:mixed }variant_not(${2:mixed left});${3}
snippet variant_or
	${1:mixed }variant_or(${2:mixed left}, ${3:mixed right});${4}
snippet variant_pow
	${1:mixed }variant_pow(${2:mixed left}, ${3:mixed right});${4}
snippet variant_round
	${1:mixed }variant_round(${2:mixed left}, ${3:int decimals});${4}
snippet variant_set
	${1:void }variant_set(${2:object variant}, ${3:mixed value});${4}
snippet variant_set_type
	${1:void }variant_set_type(${2:object variant}, ${3:int type});${4}
snippet variant_sub
	${1:mixed }variant_sub(${2:mixed left}, ${3:mixed right});${4}
snippet variant_xor
	${1:mixed }variant_xor(${2:mixed left}, ${3:mixed right});${4}
# php-src/ext/ctype/ctype.c
snippet ctype_alnum
	${1:bool }ctype_alnum(${2:mixed c});${3}
snippet ctype_alpha
	${1:bool }ctype_alpha(${2:mixed c});${3}
snippet ctype_cntrl
	${1:bool }ctype_cntrl(${2:mixed c});${3}
snippet ctype_digit
	${1:bool }ctype_digit(${2:mixed c});${3}
snippet ctype_graph
	${1:bool }ctype_graph(${2:mixed c});${3}
snippet ctype_lower
	${1:bool }ctype_lower(${2:mixed c});${3}
snippet ctype_print
	${1:bool }ctype_print(${2:mixed c});${3}
snippet ctype_punct
	${1:bool }ctype_punct(${2:mixed c});${3}
snippet ctype_space
	${1:bool }ctype_space(${2:mixed c});${3}
snippet ctype_upper
	${1:bool }ctype_upper(${2:mixed c});${3}
snippet ctype_xdigit
	${1:bool }ctype_xdigit(${2:mixed c});${3}
# php-src/ext/curl/interface.c
snippet curl_close
	${1:void }curl_close(${2:resource ch});${3}
snippet curl_copy_handle
	${1:resource }curl_copy_handle(${2:resource ch});${3}
snippet curl_errno
	${1:int }curl_errno(${2:resource ch});${3}
snippet curl_error
	${1:string }curl_error(${2:resource ch});${3}
snippet curl_exec
	${1:bool }curl_exec(${2:resource ch});${3}
snippet curl_getinfo
	${1:mixed }curl_getinfo(${2:resource ch [, }${3:int option]});${4}
snippet curl_init
	${1:resource }curl_init(${2:[string url]});${3}
snippet curl_setopt
	${1:bool }curl_setopt(${2:resource ch}, ${3:int option}, ${4:mixed value});${5}
snippet curl_setopt_array
	${1:bool }curl_setopt_array(${2:resource ch}, ${3:array options});${4}
snippet curl_version
	${1:array }curl_version(${2:[int version]});${3}
# php-src/ext/curl/multi.c
snippet curl_multi_add_handle
	${1:int }curl_multi_add_handle(${2:resource mh}, ${3:resource ch});${4}
snippet curl_multi_close
	${1:void }curl_multi_close(${2:resource mh});${3}
snippet curl_multi_exec
	${1:int }curl_multi_exec(${2:resource mh}, ${3:int &still_running});${4}
snippet curl_multi_getcontent
	${1:string }curl_multi_getcontent(${2:resource ch});${3}
snippet curl_multi_info_read
	${1:array }curl_multi_info_read(${2:resource mh [, }${3:long msgs_in_queue]});${4}
snippet curl_multi_init
	${1:resource }curl_multi_init(${2:void});${3}
snippet curl_multi_remove_handle
	${1:int }curl_multi_remove_handle(${2:resource mh}, ${3:resource ch});${4}
snippet curl_multi_select
	${1:int }curl_multi_select(${2:resource mh[, }${3:double timeout]});${4}
# php-src/ext/date/php_date.c
snippet checkdate
	${1:bool }checkdate(${2:int month}, ${3:int day}, ${4:int year});${5}
snippet date
	${1:string }date(${2:string format [, }${3:long timestamp]});${4}
snippet date_create
	${1:DateTime }date_create(${2:[string time[, }${3:DateTimeZone object]]});${4}
snippet date_date_set
	${1:void }date_date_set(${2:DateTime object}, ${3:long year}, ${4:long month}, ${5:long day});${6}
snippet date_default_timezone_get
	${1:string }date_default_timezone_get();${2}
snippet date_default_timezone_set
	${1:bool }date_default_timezone_set(${2:string timezone_identifier});${3}
snippet date_format
	${1:string }date_format(${2:DateTime object}, ${3:string format});${4}
snippet date_format_locale
	${1:string }date_format_locale(${2:DateTime object}, ${3:string format});${4}
snippet date_isodate_set
	${1:void }date_isodate_set(${2:DateTime object}, ${3:long year}, ${4:long week[, }${5:long day]});${6}
snippet date_modify
	${1:void }date_modify(${2:DateTime object}, ${3:string modify});${4}
snippet date_offset_get
	${1:long }date_offset_get(${2:DateTime object});${3}
snippet date_parse
	${1:array }date_parse(${2:string date});${3}
snippet date_sun_info
	${1:array }date_sun_info(${2:long time}, ${3:float latitude}, ${4:float longitude});${5}
snippet date_sunrise
	${1:mixed }date_sunrise(${2:mixed time [, }${3:int format [, }${4:float latitude [, }${5:float longitude [, }${6:float zenith [, }${7:float gmt_offset]]]]]});${8}
snippet date_sunset
	${1:mixed }date_sunset(${2:mixed time [, }${3:int format [, }${4:float latitude [, }${5:float longitude [, }${6:float zenith [, }${7:float gmt_offset]]]]]});${8}
snippet date_time_set
	${1:void }date_time_set(${2:DateTime object}, ${3:long hour}, ${4:long minute[, }${5:long second]});${6}
snippet date_timezone_get
	${1:DateTimeZone }date_timezone_get(${2:DateTime object});${3}
snippet date_timezone_set
	${1:void }date_timezone_set(${2:DateTime object}, ${3:DateTimeZone object});${4}
snippet getdate
	${1:array }getdate(${2:[int timestamp]});${3}
snippet gmdate
	${1:string }gmdate(${2:string format [, }${3:long timestamp]});${4}
snippet gmmktime
	${1:int }gmmktime(${2:[int hour [, }${3:int min [, }${4:int sec [, }${5:int mon [, }${6:int day [, }${7:int year]]]]]]});${8}
snippet gmstrftime
	${1:string }gmstrftime(${2:string format [, }${3:int timestamp]});${4}
snippet idate
	${1:int }idate(${2:string format [, }${3:int timestamp]});${4}
snippet localtime
	${1:array }localtime(${2:[int timestamp [, }${3:bool associative_array]]});${4}
snippet mktime
	${1:int }mktime(${2:[int hour [, }${3:int min [, }${4:int sec [, }${5:int mon [, }${6:int day [, }${7:int year]]]]]]});${8}
snippet strftime
	${1:string }strftime(${2:string format [, }${3:int timestamp]});${4}
snippet strtotime
	${1:int }strtotime(${2:string time [, }${3:int now ]});${4}
snippet time
	${1:int }time(${2:void});${3}
snippet DateTime::__construct
	${1:DateTime::__construct}(${2:[string time[, }${3:DateTimeZone object]]});${4}
snippet DateTimeZone::__construct
	${1:DateTimeZone::__construct}(${2:string timezone});${3}
snippet timezone_abbreviations_list
	${1:array }timezone_abbreviations_list();${2}
snippet timezone_identifiers_list
	${1:array }timezone_identifiers_list();${2}
snippet timezone_name_from_abbr
	${1:string }timezone_name_from_abbr(${2:string abbr[, }${3:long gmtOffset[, }${4:long isdst]]});${5}
snippet timezone_name_get
	${1:string }timezone_name_get(${2:DateTimeZone object});${3}
snippet timezone_offset_get
	${1:long }timezone_offset_get(${2:DateTimeZone object}, ${3:DateTime object});${4}
snippet timezone_open
	${1:DateTimeZone }timezone_open(${2:string timezone});${3}
snippet timezone_transitions_get
	${1:array }timezone_transitions_get(${2:DateTimeZone object});${3}
# php-src/ext/dba/dba.c
snippet dba_close
	${1:void }dba_close(${2:resource handle});${3}
snippet dba_delete
	${1:bool }dba_delete(${2:string key}, ${3:resource handle});${4}
snippet dba_exists
	${1:bool }dba_exists(${2:string key}, ${3:resource handle});${4}
snippet dba_fetch
	${1:string }dba_fetch(${2:string key}, ${3:[int skip ,] }${4:resource handle});${5}
snippet dba_firstkey
	${1:string }dba_firstkey(${2:resource handle});${3}
snippet dba_handlers
	${1:array }dba_handlers(${2:[bool full_info]});${3}
snippet dba_insert
	${1:bool }dba_insert(${2:string key}, ${3:string value}, ${4:resource handle});${5}
snippet dba_key_split
	${1:[array|false]}dba_key_split(${2:string key});${3}
snippet dba_list
	${1:array }dba_list();${2}
snippet dba_nextkey
	${1:string }dba_nextkey(${2:resource handle});${3}
snippet dba_open
	${1:resource }dba_open(${2:string path}, ${3:string mode [, }${4:string handlername, }${5:string ...]});${6}
snippet dba_optimize
	${1:bool }dba_optimize(${2:resource handle});${3}
snippet dba_popen
	${1:resource }dba_popen(${2:string path}, ${3:string mode [, }${4:string handlername, }${5:string ...]});${6}
snippet dba_replace
	${1:bool }dba_replace(${2:string key}, ${3:string value}, ${4:resource handle});${5}
snippet dba_sync
	${1:bool }dba_sync(${2:resource handle});${3}
# php-src/ext/dbase/dbase.c
snippet dbase_add_record
	${1:bool }dbase_add_record(${2:int identifier}, ${3:array data});${4}
snippet dbase_close
	${1:bool }dbase_close(${2:int identifier});${3}
snippet dbase_create
	${1:bool }dbase_create(${2:string filename}, ${3:array fields});${4}
snippet dbase_delete_record
	${1:bool }dbase_delete_record(${2:int identifier}, ${3:int record});${4}
snippet dbase_get_header_info
	${1:array }dbase_get_header_info(${2:int database_handle});${3}
snippet dbase_get_record
	${1:array }dbase_get_record(${2:int identifier}, ${3:int record});${4}
snippet dbase_get_record_with_names
	${1:array }dbase_get_record_with_names(${2:int identifier}, ${3:int record});${4}
snippet dbase_numfields
	${1:int }dbase_numfields(${2:int identifier});${3}
snippet dbase_numrecords
	${1:int }dbase_numrecords(${2:int identifier});${3}
snippet dbase_open
	${1:int }dbase_open(${2:string name}, ${3:int mode});${4}
snippet dbase_pack
	${1:bool }dbase_pack(${2:int identifier});${3}
snippet dbase_replace_record
	${1:bool }dbase_replace_record(${2:int identifier}, ${3:array data}, ${4:int recnum});${5}
# php-src/ext/dom/attr.c
snippet DOMAttr::__construct
	${1:void }DOMAttr::__construct(${2:string name}, ${3:[string value]});${4}
snippet dom_attr_is_id
	${1:boolean }dom_attr_is_id();${2}
# php-src/ext/dom/cdatasection.c
snippet DOMCdataSection::__construct
	${1:void }DOMCdataSection::__construct(${2:string value});${3}
# php-src/ext/dom/characterdata.c
snippet dom_characterdata_append_data
	${1:void }dom_characterdata_append_data(${2:string arg});${3}
snippet dom_characterdata_delete_data
	${1:void }dom_characterdata_delete_data(${2:int offset}, ${3:int count});${4}
snippet dom_characterdata_insert_data
	${1:void }dom_characterdata_insert_data(${2:int offset}, ${3:string arg});${4}
snippet dom_characterdata_replace_data
	${1:void }dom_characterdata_replace_data(${2:int offset}, ${3:int count}, ${4:string arg});${5}
snippet dom_characterdata_substring_data
	${1:string }dom_characterdata_substring_data(${2:int offset}, ${3:int count});${4}
# php-src/ext/dom/comment.c
snippet DOMComment::__construct
	${1:void }DOMComment::__construct(${2:[string value]});${3}
# php-src/ext/dom/document.c
snippet DOMDocument::__construct
	${1:void }DOMDocument::__construct(${2:[string version]}, ${3:[string encoding]});${4}
snippet DOMDocument::registerNodeClass
	${1:boolean }DOMDocument::registerNodeClass(${2:string baseclass}, ${3:string extendedclass});${4}
snippet dom_document_adopt_node
	${1:DOMNode }dom_document_adopt_node(${2:DOMNode source});${3}
snippet dom_document_create_attribute
	${1:DOMAttr }dom_document_create_attribute(${2:string name});${3}
snippet dom_document_create_attribute_ns
	${1:DOMAttr }dom_document_create_attribute_ns(${2:string namespaceURI}, ${3:string qualifiedName});${4}
snippet dom_document_create_cdatasection
	${1:DOMCdataSection }dom_document_create_cdatasection(${2:string data});${3}
snippet dom_document_create_comment
	${1:DOMComment }dom_document_create_comment(${2:string data});${3}
snippet dom_document_create_document_fragment
	${1:DOMDocumentFragment }dom_document_create_document_fragment();${2}
snippet dom_document_create_element
	${1:DOMElement }dom_document_create_element(${2:string tagName [, }${3:string value]});${4}
snippet dom_document_create_element_ns
	${1:DOMElement }dom_document_create_element_ns(${2:string namespaceURI}, ${3:string qualifiedName [,}${4:string value]});${5}
snippet dom_document_create_entity_reference
	${1:DOMEntityReference }dom_document_create_entity_reference(${2:string name});${3}
snippet dom_document_create_processing_instruction
	${1:DOMProcessingInstruction }dom_document_create_processing_instruction(${2:string target}, ${3:string data});${4}
snippet dom_document_create_text_node
	${1:DOMText }dom_document_create_text_node(${2:string data});${3}
snippet dom_document_get_element_by_id
	${1:DOMElement }dom_document_get_element_by_id(${2:string elementId});${3}
snippet dom_document_get_elements_by_tag_name
	${1:DOMNodeList }dom_document_get_elements_by_tag_name(${2:string tagname});${3}
snippet dom_document_get_elements_by_tag_name_ns
	${1:DOMNodeList }dom_document_get_elements_by_tag_name_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_document_import_node
	${1:DOMNode }dom_document_import_node(${2:DOMNode importedNode}, ${3:boolean deep});${4}
snippet dom_document_load
	${1:DOMNode }dom_document_load(${2:string source [, }${3:int options]});${4}
snippet dom_document_load_html
	${1:DOMNode }dom_document_load_html(${2:string source});${3}
snippet dom_document_load_html_file
	${1:DOMNode }dom_document_load_html_file(${2:string source});${3}
snippet dom_document_loadxml
	${1:DOMNode }dom_document_loadxml(${2:string source [, }${3:int options]});${4}
snippet dom_document_normalize_document
	${1:void }dom_document_normalize_document();${2}
snippet dom_document_relaxNG_validate_file
	${1:boolean }dom_document_relaxNG_validate_file(${2:string filename});${3}
snippet dom_document_relaxNG_validate_xml
	${1:boolean }dom_document_relaxNG_validate_xml(${2:string source});${3}
snippet dom_document_rename_node
	${1:DOMNode }dom_document_rename_node(${2:node n}, ${3:string namespaceURI}, ${4:string qualifiedName});${5}
snippet dom_document_save
	${1:int }dom_document_save(${2:string file});${3}
snippet dom_document_save_html
	${1:string }dom_document_save_html();${2}
snippet dom_document_save_html_file
	${1:int }dom_document_save_html_file(${2:string file});${3}
snippet dom_document_savexml
	${1:string }dom_document_savexml(${2:[node n]});${3}
snippet dom_document_schema_validate
	${1:boolean }dom_document_schema_validate(${2:string source});${3}
snippet dom_document_schema_validate_file
	${1:boolean }dom_document_schema_validate_file(${2:string filename});${3}
snippet dom_document_validate
	${1:boolean }dom_document_validate();${2}
snippet dom_document_xinclude
	${1:int }dom_document_xinclude(${2:[int options]});${3}
# php-src/ext/dom/documentfragment.c
snippet DOMDocumentFragment::__construct
	${1:void }DOMDocumentFragment::__construct();${2}
snippet DOMDocumentFragment::appendXML
	${1:void }DOMDocumentFragment::appendXML(${2:string data});${3}
# php-src/ext/dom/domconfiguration.c
snippet dom_domconfiguration_can_set_parameter
	${1:boolean }dom_domconfiguration_can_set_parameter(${2:string name}, ${3:domuserdata value});${4}
snippet dom_domconfiguration_get_parameter
	${1:domdomuserdata }dom_domconfiguration_get_parameter(${2:string name});${3}
snippet dom_domconfiguration_set_parameter
	${1:dom_void }dom_domconfiguration_set_parameter(${2:string name}, ${3:domuserdata value});${4}
# php-src/ext/dom/domerrorhandler.c
snippet dom_domerrorhandler_handle_error
	${1:dom_boolean }dom_domerrorhandler_handle_error(${2:domerror error});${3}
# php-src/ext/dom/domimplementation.c
snippet dom_domimplementation_create_document
	${1:DOMDocument }dom_domimplementation_create_document(${2:string namespaceURI}, ${3:string qualifiedName}, ${4:DOMDocumentType doctype});${5}
snippet dom_domimplementation_create_document_type
	${1:DOMDocumentType }dom_domimplementation_create_document_type(${2:string qualifiedName}, ${3:string publicId}, ${4:string systemId});${5}
snippet dom_domimplementation_get_feature
	${1:DOMNode }dom_domimplementation_get_feature(${2:string feature}, ${3:string version});${4}
snippet dom_domimplementation_has_feature
	${1:boolean }dom_domimplementation_has_feature(${2:string feature}, ${3:string version});${4}
# php-src/ext/dom/domimplementationlist.c
snippet dom_domimplementationlist_item
	${1:domdomimplementation }dom_domimplementationlist_item(${2:int index});${3}
# php-src/ext/dom/domimplementationsource.c
snippet dom_domimplementationsource_get_domimplementation
	${1:domdomimplementation }dom_domimplementationsource_get_domimplementation(${2:string features});${3}
snippet dom_domimplementationsource_get_domimplementations
	${1:domimplementationlist }dom_domimplementationsource_get_domimplementations(${2:string features});${3}
# php-src/ext/dom/domstringlist.c
snippet dom_domstringlist_item
	${1:domstring }dom_domstringlist_item(${2:int index});${3}
# php-src/ext/dom/element.c
snippet DOMElement::__construct
	${1:void }DOMElement::__construct(${2:string name}, ${3:[string value]}, ${4:[string uri]});${5}
snippet dom_element_get_attribute
	${1:string }dom_element_get_attribute(${2:string name});${3}
snippet dom_element_get_attribute_node
	${1:DOMAttr }dom_element_get_attribute_node(${2:string name});${3}
snippet dom_element_get_attribute_node_ns
	${1:DOMAttr }dom_element_get_attribute_node_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_element_get_attribute_ns
	${1:string }dom_element_get_attribute_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_element_get_elements_by_tag_name
	${1:DOMNodeList }dom_element_get_elements_by_tag_name(${2:string name});${3}
snippet dom_element_get_elements_by_tag_name_ns
	${1:DOMNodeList }dom_element_get_elements_by_tag_name_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_element_has_attribute
	${1:boolean }dom_element_has_attribute(${2:string name});${3}
snippet dom_element_has_attribute_ns
	${1:boolean }dom_element_has_attribute_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_element_remove_attribute
	${1:void }dom_element_remove_attribute(${2:string name});${3}
snippet dom_element_remove_attribute_node
	${1:DOMAttr }dom_element_remove_attribute_node(${2:DOMAttr oldAttr});${3}
snippet dom_element_remove_attribute_ns
	${1:void }dom_element_remove_attribute_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_element_set_attribute
	${1:void }dom_element_set_attribute(${2:string name}, ${3:string value});${4}
snippet dom_element_set_attribute_node
	${1:DOMAttr }dom_element_set_attribute_node(${2:DOMAttr newAttr});${3}
snippet dom_element_set_attribute_node_ns
	${1:DOMAttr }dom_element_set_attribute_node_ns(${2:DOMAttr newAttr});${3}
snippet dom_element_set_attribute_ns
	${1:void }dom_element_set_attribute_ns(${2:string namespaceURI}, ${3:string qualifiedName}, ${4:string value});${5}
snippet dom_element_set_id_attribute
	${1:void }dom_element_set_id_attribute(${2:string name}, ${3:boolean isId});${4}
snippet dom_element_set_id_attribute_node
	${1:void }dom_element_set_id_attribute_node(${2:attr idAttr}, ${3:boolean isId});${4}
snippet dom_element_set_id_attribute_ns
	${1:void }dom_element_set_id_attribute_ns(${2:string namespaceURI}, ${3:string localName}, ${4:boolean isId});${5}
# php-src/ext/dom/entityreference.c
snippet DOMEntityReference::__construct
	${1:void }DOMEntityReference::__construct(${2:string name});${3}
# php-src/ext/dom/namednodemap.c
snippet dom_namednodemap_get_named_item
	${1:DOMNode }dom_namednodemap_get_named_item(${2:string name});${3}
snippet dom_namednodemap_get_named_item_ns
	${1:DOMNode }dom_namednodemap_get_named_item_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_namednodemap_item
	${1:DOMNode }dom_namednodemap_item(${2:int index});${3}
snippet dom_namednodemap_remove_named_item
	${1:DOMNode }dom_namednodemap_remove_named_item(${2:string name});${3}
snippet dom_namednodemap_remove_named_item_ns
	${1:DOMNode }dom_namednodemap_remove_named_item_ns(${2:string namespaceURI}, ${3:string localName});${4}
snippet dom_namednodemap_set_named_item
	${1:DOMNode }dom_namednodemap_set_named_item(${2:DOMNode arg});${3}
snippet dom_namednodemap_set_named_item_ns
	${1:DOMNode }dom_namednodemap_set_named_item_ns(${2:DOMNode arg});${3}
# php-src/ext/dom/namelist.c
snippet dom_namelist_get_name
	${1:string }dom_namelist_get_name(${2:int index});${3}
snippet dom_namelist_get_namespace_uri
	${1:string }dom_namelist_get_namespace_uri(${2:int index});${3}
# php-src/ext/dom/node.c
snippet DOMNode::C14N
	${1:string }DOMNode::C14N(${2:[bool exclusive [, }${3:bool with_comments [, }${4:array xpath [, }${5:array ns_prefixes]]]]});${6}
snippet DOMNode::C14NFile
	${1:int }DOMNode::C14NFile(${2:string uri [, }${3:bool exclusive [, }${4:bool with_comments [, }${5:array xpath [, }${6:array ns_prefixes]]]]});${7}
snippet DOMNode::getNodePath
	${1:int }DOMNode::getNodePath();${2}
snippet dom_node_append_child
	${1:DomNode }dom_node_append_child(${2:DomNode newChild});${3}
snippet dom_node_clone_node
	${1:DomNode }dom_node_clone_node(${2:boolean deep});${3}
snippet dom_node_compare_document_position
	${1:short }dom_node_compare_document_position(${2:DomNode other});${3}
snippet dom_node_get_feature
	${1:DomNode }dom_node_get_feature(${2:string feature}, ${3:string version});${4}
snippet dom_node_get_user_data
	${1:DomUserData }dom_node_get_user_data(${2:string key});${3}
snippet dom_node_has_attributes
	${1:boolean }dom_node_has_attributes();${2}
snippet dom_node_has_child_nodes
	${1:boolean }dom_node_has_child_nodes();${2}
snippet dom_node_insert_before
	${1:domnode }dom_node_insert_before(${2:DomNode newChild}, ${3:DomNode refChild});${4}
snippet dom_node_is_default_namespace
	${1:boolean }dom_node_is_default_namespace(${2:string namespaceURI});${3}
snippet dom_node_is_equal_node
	${1:boolean }dom_node_is_equal_node(${2:DomNode arg});${3}
snippet dom_node_is_same_node
	${1:boolean }dom_node_is_same_node(${2:DomNode other});${3}
snippet dom_node_is_supported
	${1:boolean }dom_node_is_supported(${2:string feature}, ${3:string version});${4}
snippet dom_node_lookup_namespace_uri
	${1:string }dom_node_lookup_namespace_uri(${2:string prefix});${3}
snippet dom_node_lookup_prefix
	${1:string }dom_node_lookup_prefix(${2:string namespaceURI});${3}
snippet dom_node_normalize
	${1:void }dom_node_normalize();${2}
snippet dom_node_remove_child
	${1:DomNode }dom_node_remove_child(${2:DomNode oldChild});${3}
snippet dom_node_replace_child
	${1:DomNode }dom_node_replace_child(${2:DomNode newChild}, ${3:DomNode oldChild});${4}
snippet dom_node_set_user_data
	${1:DomUserData }dom_node_set_user_data(${2:string key}, ${3:DomUserData data}, ${4:userdatahandler handler});${5}
# php-src/ext/dom/nodelist.c
snippet dom_nodelist_item
	${1:DOMNode }dom_nodelist_item(${2:int index});${3}
# php-src/ext/dom/php_dom.c
snippet dom_import_simplexml
	${1:somNode }dom_import_simplexml(${2:sxeobject node});${3}
# php-src/ext/dom/processinginstruction.c
snippet DOMProcessingInstruction::__construct
	${1:void }DOMProcessingInstruction::__construct(${2:string name}, ${3:[string value]});${4}
# php-src/ext/dom/string_extend.c
snippet dom_string_extend_find_offset16
	${1:int }dom_string_extend_find_offset16(${2:int offset32});${3}
snippet dom_string_extend_find_offset32
	${1:int }dom_string_extend_find_offset32(${2:int offset16});${3}
# php-src/ext/dom/text.c
snippet DOMText::__construct
	${1:void }DOMText::__construct(${2:[string value]});${3}
snippet dom_text_is_whitespace_in_element_content
	${1:boolean }dom_text_is_whitespace_in_element_content();${2}
snippet dom_text_replace_whole_text
	${1:DOMText }dom_text_replace_whole_text(${2:string content});${3}
snippet dom_text_split_text
	${1:DOMText }dom_text_split_text(${2:int offset});${3}
# php-src/ext/dom/userdatahandler.c
snippet dom_userdatahandler_handle
	${1:dom_void }dom_userdatahandler_handle(${2:short operation}, ${3:string key}, ${4:domobject data}, ${5:node src}, ${6:node dst});${7}
# php-src/ext/dom/xpath.c
snippet DOMXPath::__construct
	${1:void }DOMXPath::__construct(${2:DOMDocument doc});${3}
snippet dom_xpath_evaluate
	${1:mixed }dom_xpath_evaluate(${2:string expr [,}${3:DOMNode context]});${4}
snippet dom_xpath_query
	${1:DOMNodeList }dom_xpath_query(${2:string expr [,}${3:DOMNode context]});${4}
snippet dom_xpath_register_ns
	${1:boolean }dom_xpath_register_ns(${2:string prefix}, ${3:string uri});${4}
snippet dom_xpath_register_php_functions
	${1:void }dom_xpath_register_php_functions();${2}
# php-src/ext/exif/exif.c
snippet exif_imagetype
	${1:int }exif_imagetype(${2:string imagefile});${3}
snippet exif_read_data
	${1:array }exif_read_data(${2:string filename [, }${3:sections_needed [, }${4:sub_arrays[, }${5:read_thumbnail]]]});${6}
snippet exif_tagname
	${1:string }exif_tagname(${2:index});${3}
snippet exif_thumbnail
	${1:string }exif_thumbnail(${2:string filename [, }${3:&width, }${4:&height [, }${5:&imagetype]]});${6}
# php-src/ext/fbsql/php_fbsql.c
snippet fbsql_affected_rows
	${1:int }fbsql_affected_rows(${2:[resource link_identifier]});${3}
snippet fbsql_autocommit
	${1:bool }fbsql_autocommit(${2:resource link_identifier [, }${3:bool OnOff]});${4}
snippet fbsql_blob_size
	${1:int }fbsql_blob_size(${2:string blob_handle [, }${3:resource link_identifier]});${4}
snippet fbsql_change_user
	${1:int }fbsql_change_user(${2:string user}, ${3:string password [, }${4:string database [, }${5:resource link_identifier]]});${6}
snippet fbsql_clob_size
	${1:int }fbsql_clob_size(${2:string clob_handle [, }${3:resource link_identifier]});${4}
snippet fbsql_close
	${1:bool }fbsql_close(${2:[resource link_identifier]});${3}
snippet fbsql_commit
	${1:bool }fbsql_commit(${2:[resource link_identifier]});${3}
snippet fbsql_connect
	${1:resource }fbsql_connect(${2:[string hostname [, }${3:string username [, }${4:string password]]]});${5}
snippet fbsql_create_blob
	${1:string }fbsql_create_blob(${2:string blob_data [, }${3:resource link_identifier]});${4}
snippet fbsql_create_clob
	${1:string }fbsql_create_clob(${2:string clob_data [, }${3:resource link_identifier]});${4}
snippet fbsql_create_db
	${1:bool }fbsql_create_db(${2:string database_name [, }${3:resource link_identifier [, }${4:string database_options]]});${5}
snippet fbsql_data_seek
	${1:bool }fbsql_data_seek(${2:int result}, ${3:int row_number});${4}
snippet fbsql_database
	${1:string }fbsql_database(${2:resource link_identifier [, }${3:string database]});${4}
snippet fbsql_database_password
	${1:string }fbsql_database_password(${2:resource link_identifier [, }${3:string database_password]});${4}
snippet fbsql_db_query
	${1:resource }fbsql_db_query(${2:string database_name}, ${3:string query [, }${4:resource link_identifier]});${5}
snippet fbsql_db_status
	${1:int }fbsql_db_status(${2:string database_name [, }${3:resource link_identifier]});${4}
snippet fbsql_drop_db
	${1:int }fbsql_drop_db(${2:string database_name [, }${3:resource link_identifier]});${4}
snippet fbsql_errno
	${1:int }fbsql_errno(${2:[resource link_identifier]});${3}
snippet fbsql_error
	${1:string }fbsql_error(${2:[resource link_identifier]});${3}
snippet fbsql_fetch_array
	${1:array }fbsql_fetch_array(${2:resource result [, }${3:int result_type]});${4}
snippet fbsql_fetch_assoc
	${1:object }fbsql_fetch_assoc(${2:resource result});${3}
snippet fbsql_fetch_field
	${1:object }fbsql_fetch_field(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_fetch_lengths
	${1:array }fbsql_fetch_lengths(${2:int result});${3}
snippet fbsql_fetch_object
	${1:object }fbsql_fetch_object(${2:resource result [, }${3:int result_type]});${4}
snippet fbsql_fetch_row
	${1:array }fbsql_fetch_row(${2:resource result});${3}
snippet fbsql_field_flags
	${1:string }fbsql_field_flags(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_field_len
	${1:mixed }fbsql_field_len(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_field_name
	${1:string }fbsql_field_name(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_field_seek
	${1:bool }fbsql_field_seek(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_field_table
	${1:string }fbsql_field_table(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_field_type
	${1:string }fbsql_field_type(${2:int result [, }${3:int field_index]});${4}
snippet fbsql_free_result
	${1:bool }fbsql_free_result(${2:resource result});${3}
snippet fbsql_get_autostart_info
	${1:array }fbsql_get_autostart_info(${2:[resource link_identifier]});${3}
snippet fbsql_hostname
	${1:string }fbsql_hostname(${2:resource link_identifier [, }${3:string host_name]});${4}
snippet fbsql_insert_id
	${1:int }fbsql_insert_id(${2:[resource link_identifier]});${3}
snippet fbsql_list_dbs
	${1:resource }fbsql_list_dbs(${2:[resource link_identifier]});${3}
snippet fbsql_list_fields
	${1:resource }fbsql_list_fields(${2:string database_name}, ${3:string table_name [, }${4:resource link_identifier]});${5}
snippet fbsql_list_tables
	${1:resource }fbsql_list_tables(${2:string database [, }${3:int link_identifier]});${4}
snippet fbsql_next_result
	${1:bool }fbsql_next_result(${2:int result});${3}
snippet fbsql_num_fields
	${1:int }fbsql_num_fields(${2:int result});${3}
snippet fbsql_num_rows
	${1:int }fbsql_num_rows(${2:int result});${3}
snippet fbsql_password
	${1:string }fbsql_password(${2:resource link_identifier [, }${3:string password]});${4}
snippet fbsql_pconnect
	${1:resource }fbsql_pconnect(${2:[string hostname [, }${3:string username [, }${4:string password]]]});${5}
snippet fbsql_query
	${1:resource }fbsql_query(${2:string query [, }${3:resource link_identifier [, }${4:long batch_size]]});${5}
snippet fbsql_read_blob
	${1:string }fbsql_read_blob(${2:string blob_handle [, }${3:resource link_identifier]});${4}
snippet fbsql_read_clob
	${1:string }fbsql_read_clob(${2:string clob_handle [, }${3:resource link_identifier]});${4}
snippet fbsql_result
	${1:mixed }fbsql_result(${2:int result [, }${3:int row [, }${4:mixed field]]});${5}
snippet fbsql_rollback
	${1:bool }fbsql_rollback(${2:[resource link_identifier]});${3}
snippet fbsql_rows_fetched
	${1:int }fbsql_rows_fetched(${2:resource result});${3}
snippet fbsql_select_db
	${1:bool }fbsql_select_db(${2:[string database_name [, }${3:resource link_identifier]]});${4}
snippet fbsql_set_characterset
	${1:void }fbsql_set_characterset(${2:resource link_identifier}, ${3:long charcterset [, }${4:long in_out_both]]});${5}
snippet fbsql_set_lob_mode
	${1:bool }fbsql_set_lob_mode(${2:resource result}, ${3:int lob_mode});${4}
snippet fbsql_set_password
	${1:bool }fbsql_set_password(${2:resource link_identifier}, ${3:string user}, ${4:string password}, ${5:string old_password});${6}
snippet fbsql_set_transaction
	${1:void }fbsql_set_transaction(${2:resource link_identifier}, ${3:int locking}, ${4:int isolation});${5}
snippet fbsql_start_db
	${1:bool }fbsql_start_db(${2:string database_name [, }${3:resource link_identifier [, }${4:string database_options]]});${5}
snippet fbsql_stop_db
	${1:bool }fbsql_stop_db(${2:string database_name [, }${3:resource link_identifier]});${4}
snippet fbsql_table_name
	${1:string }fbsql_table_name(${2:resource result}, ${3:int index});${4}
snippet fbsql_username
	${1:string }fbsql_username(${2:resource link_identifier [, }${3:string username]});${4}
snippet fbsql_warnings
	${1:bool }fbsql_warnings(${2:[int flag]});${3}
# php-src/ext/fdf/fdf.c
snippet fdf_add_doc_javascript
	${1:bool }fdf_add_doc_javascript(${2:resource fdfdoc}, ${3:string scriptname}, ${4:string script});${5}
snippet fdf_add_template
	${1:bool }fdf_add_template(${2:resource fdfdoc}, ${3:int newpage}, ${4:string filename}, ${5:string template}, ${6:int rename});${7}
snippet fdf_close
	${1:void }fdf_close(${2:resource fdfdoc});${3}
snippet fdf_create
	${1:resource }fdf_create(${2:void});${3}
snippet fdf_enum_values
	${1:bool }fdf_enum_values(${2:resource fdfdoc}, ${3:callback function [, }${4:mixed userdata]});${5}
snippet fdf_errno
	${1:int }fdf_errno(${2:void});${3}
snippet fdf_error
	${1:string }fdf_error(${2:[int errno]});${3}
snippet fdf_get_ap
	${1:bool }fdf_get_ap(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int face}, ${5:string filename});${6}
snippet fdf_get_attachment
	${1:array }fdf_get_attachment(${2:resource fdfdoc}, ${3:string fieldname}, ${4:string savepath});${5}
snippet fdf_get_encoding
	${1:string }fdf_get_encoding(${2:resource fdf});${3}
snippet fdf_get_file
	${1:string }fdf_get_file(${2:resource fdfdoc});${3}
snippet fdf_get_flags
	${1:int }fdf_get_flags(${2:resorce fdfdoc}, ${3:string fieldname}, ${4:int whichflags});${5}
snippet fdf_get_opt
	${1:mixed }fdf_get_opt(${2:resource fdfdof}, ${3:string fieldname [, }${4:int element]});${5}
snippet fdf_get_status
	${1:string }fdf_get_status(${2:resource fdfdoc});${3}
snippet fdf_get_value
	${1:string }fdf_get_value(${2:resource fdfdoc}, ${3:string fieldname [, }${4:int which]});${5}
snippet fdf_get_version
	${1:string }fdf_get_version(${2:[resource fdfdoc]});${3}
snippet fdf_header
	${1:void }fdf_header(${2:void});${3}
snippet fdf_next_field_name
	${1:string }fdf_next_field_name(${2:resource fdfdoc [, }${3:string fieldname]});${4}
snippet fdf_open
	${1:resource }fdf_open(${2:string filename});${3}
snippet fdf_open_string
	${1:resource }fdf_open_string(${2:string fdf_data});${3}
snippet fdf_remove_item
	${1:bool }fdf_remove_item(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int item});${5}
snippet fdf_save
	${1:bool }fdf_save(${2:resource fdfdoc [, }${3:string filename]});${4}
snippet fdf_save_string
	${1:string }fdf_save_string(${2:resource fdfdoc});${3}
snippet fdf_set_ap
	${1:bool }fdf_set_ap(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int face}, ${5:string filename}, ${6:int pagenr});${7}
snippet fdf_set_encoding
	${1:bool }fdf_set_encoding(${2:resource fdf_document}, ${3:string encoding});${4}
snippet fdf_set_file
	${1:bool }fdf_set_file(${2:resource fdfdoc}, ${3:string filename [, }${4:string target_frame]});${5}
snippet fdf_set_flags
	${1:bool }fdf_set_flags(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int whichflags}, ${5:int newflags});${6}
snippet fdf_set_javascript_action
	${1:bool }fdf_set_javascript_action(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int whichtrigger}, ${5:string script});${6}
snippet fdf_set_on_import_javascript
	${1:bool }fdf_set_on_import_javascript(${2:resource fdfdoc}, ${3:string script}, ${4:bool before_data_import});${5}
snippet fdf_set_opt
	${1:bool }fdf_set_opt(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int element}, ${5:string value}, ${6:string name});${7}
snippet fdf_set_status
	${1:bool }fdf_set_status(${2:resource fdfdoc}, ${3:string status});${4}
snippet fdf_set_submit_form_action
	${1:bool }fdf_set_submit_form_action(${2:resource fdfdoc}, ${3:string fieldname}, ${4:int whichtrigger}, ${5:string url}, ${6:int flags});${7}
snippet fdf_set_target_frame
	${1:bool }fdf_set_target_frame(${2:resource fdfdoc}, ${3:string target});${4}
snippet fdf_set_value
	${1:bool }fdf_set_value(${2:resource fdfdoc}, ${3:string fieldname}, ${4:mixed value [, }${5:int isname]});${6}
snippet fdf_set_version
	${1:bool }fdf_set_version(${2:resourece fdfdoc}, ${3:string version});${4}
# php-src/ext/filter/filter.c
snippet filter_list
	filter_list();${2}
snippet filter_has_var
	${1:mixed }filter_has_var(${2:constant type}, ${3:string variable_name});${4}
snippet filter_input
	${1:mixed }filter_input(${2:constant type}, ${3:string variable_name [, }${4:long filter [, }${5:mixed options]]});${6}
snippet filter_input_array
	${1:mixed }filter_input_array(${2:constant type}, ${3:[, mixed options]]});${4}
snippet filter_var
	${1:mixed }filter_var(${2:mixed variable [, }${3:long filter [, }${4:mixed options]]});${5}
snippet filter_var_array
	${1:mixed }filter_var_array(${2:array data}, ${3:[, mixed options]]});${4}
snippet filter_id
	filter_id(${1:string filtername});${2}
# php-src/ext/ftp/php_ftp.c
snippet ftp_alloc
	${1:bool }ftp_alloc(${2:resource stream}, ${3:int size[, }${4:&response]});${5}
snippet ftp_cdup
	${1:bool }ftp_cdup(${2:resource stream});${3}
snippet ftp_chdir
	${1:bool }ftp_chdir(${2:resource stream}, ${3:string directory});${4}
snippet ftp_chmod
	${1:int }ftp_chmod(${2:resource stream}, ${3:int mode}, ${4:string filename});${5}
snippet ftp_close
	${1:bool }ftp_close(${2:resource stream});${3}
snippet ftp_connect
	${1:resource }ftp_connect(${2:string host [, }${3:int port [, }${4:int timeout]]});${5}
snippet ftp_delete
	${1:bool }ftp_delete(${2:resource stream}, ${3:string file});${4}
snippet ftp_exec
	${1:bool }ftp_exec(${2:resource stream}, ${3:string command});${4}
snippet ftp_fget
	${1:bool }ftp_fget(${2:resource stream}, ${3:resource fp}, ${4:string remote_file}, ${5:int mode[, }${6:int resumepos]});${7}
snippet ftp_fput
	${1:bool }ftp_fput(${2:resource stream}, ${3:string remote_file}, ${4:resource fp}, ${5:int mode[, }${6:int startpos]});${7}
snippet ftp_get
	${1:bool }ftp_get(${2:resource stream}, ${3:string local_file}, ${4:string remote_file}, ${5:int mode[, }${6:int resume_pos]});${7}
snippet ftp_get_option
	${1:mixed }ftp_get_option(${2:resource stream}, ${3:int option});${4}
snippet ftp_login
	${1:bool }ftp_login(${2:resource stream}, ${3:string username}, ${4:string password});${5}
snippet ftp_mdtm
	${1:int }ftp_mdtm(${2:resource stream}, ${3:string filename});${4}
snippet ftp_mkdir
	${1:string }ftp_mkdir(${2:resource stream}, ${3:string directory});${4}
snippet ftp_nb_continue
	${1:int }ftp_nb_continue(${2:resource stream});${3}
snippet ftp_nb_fget
	${1:int }ftp_nb_fget(${2:resource stream}, ${3:resource fp}, ${4:string remote_file}, ${5:int mode[, }${6:int resumepos]});${7}
snippet ftp_nb_fput
	${1:int }ftp_nb_fput(${2:resource stream}, ${3:string remote_file}, ${4:resource fp}, ${5:int mode[, }${6:int startpos]});${7}
snippet ftp_nb_get
	${1:int }ftp_nb_get(${2:resource stream}, ${3:string local_file}, ${4:string remote_file}, ${5:int mode[, }${6:int resume_pos]});${7}
snippet ftp_nb_put
	${1:int }ftp_nb_put(${2:resource stream}, ${3:string remote_file}, ${4:string local_file}, ${5:int mode[, }${6:int startpos]});${7}
snippet ftp_nlist
	${1:array }ftp_nlist(${2:resource stream}, ${3:string directory});${4}
snippet ftp_pasv
	${1:bool }ftp_pasv(${2:resource stream}, ${3:bool pasv});${4}
snippet ftp_put
	${1:bool }ftp_put(${2:resource stream}, ${3:string remote_file}, ${4:string local_file}, ${5:int mode[, }${6:int startpos]});${7}
snippet ftp_pwd
	${1:string }ftp_pwd(${2:resource stream});${3}
snippet ftp_raw
	${1:array }ftp_raw(${2:resource stream}, ${3:string command});${4}
snippet ftp_rawlist
	${1:array }ftp_rawlist(${2:resource stream}, ${3:string directory [, }${4:bool recursive]});${5}
snippet ftp_rename
	${1:bool }ftp_rename(${2:resource stream}, ${3:string src}, ${4:string dest});${5}
snippet ftp_rmdir
	${1:bool }ftp_rmdir(${2:resource stream}, ${3:string directory});${4}
snippet ftp_set_option
	${1:bool }ftp_set_option(${2:resource stream}, ${3:int option}, ${4:mixed value});${5}
snippet ftp_site
	${1:bool }ftp_site(${2:resource stream}, ${3:string cmd});${4}
snippet ftp_size
	${1:int }ftp_size(${2:resource stream}, ${3:string filename});${4}
snippet ftp_ssl_connect
	${1:resource }ftp_ssl_connect(${2:string host [, }${3:int port [, }${4:int timeout]]});${5}
snippet ftp_systype
	${1:string }ftp_systype(${2:resource stream});${3}
# php-src/ext/gd/gd.c
snippet gd_info
	${1:array }gd_info();${2}
snippet image2wbmp
	${1:bool }image2wbmp(${2:resource im [, }${3:string filename [, }${4:int threshold]]});${5}
snippet imagealphablending
	${1:bool }imagealphablending(${2:resource im}, ${3:bool on});${4}
snippet imageantialias
	${1:bool }imageantialias(${2:resource im}, ${3:bool on});${4}
snippet imagearc
	${1:bool }imagearc(${2:resource im}, ${3:int cx}, ${4:int cy}, ${5:int w}, ${6:int h}, ${7:int s}, ${8:int e}, ${9:int col});${10}
snippet imagechar
	${1:bool }imagechar(${2:resource im}, ${3:int font}, ${4:int x}, ${5:int y}, ${6:string c}, ${7:int col});${8}
snippet imagecharup
	${1:bool }imagecharup(${2:resource im}, ${3:int font}, ${4:int x}, ${5:int y}, ${6:string c}, ${7:int col});${8}
snippet imagecolorallocate
	${1:int }imagecolorallocate(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue});${6}
snippet imagecolorallocatealpha
	${1:int }imagecolorallocatealpha(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue}, ${6:int alpha});${7}
snippet imagecolorat
	${1:int }imagecolorat(${2:resource im}, ${3:int x}, ${4:int y});${5}
snippet imagecolorclosest
	${1:int }imagecolorclosest(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue});${6}
snippet imagecolorclosestalpha
	${1:int }imagecolorclosestalpha(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue}, ${6:int alpha});${7}
snippet imagecolorclosesthwb
	${1:int }imagecolorclosesthwb(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue});${6}
snippet imagecolordeallocate
	${1:bool }imagecolordeallocate(${2:resource im}, ${3:int index});${4}
snippet imagecolorexact
	${1:int }imagecolorexact(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue});${6}
snippet imagecolorexactalpha
	${1:int }imagecolorexactalpha(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue}, ${6:int alpha});${7}
snippet imagecolormatch
	${1:bool }imagecolormatch(${2:resource im1}, ${3:resource im2});${4}
snippet imagecolorresolve
	${1:int }imagecolorresolve(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue});${6}
snippet imagecolorresolvealpha
	${1:int }imagecolorresolvealpha(${2:resource im}, ${3:int red}, ${4:int green}, ${5:int blue}, ${6:int alpha});${7}
snippet imagecolorset
	${1:void }imagecolorset(${2:resource im}, ${3:int col}, ${4:int red}, ${5:int green}, ${6:int blue});${7}
snippet imagecolorsforindex
	${1:array }imagecolorsforindex(${2:resource im}, ${3:int col});${4}
snippet imagecolorstotal
	${1:int }imagecolorstotal(${2:resource im});${3}
snippet imagecolortransparent
	${1:int }imagecolortransparent(${2:resource im [, }${3:int col]});${4}
snippet imageconvolution
	${1:resource }imageconvolution(${2:resource src_im}, ${3:array matrix3x3}, ${4:double div}, ${5:double offset});${6}
snippet imagecopy
	${1:bool }imagecopy(${2:resource dst_im}, ${3:resource src_im}, ${4:int dst_x}, ${5:int dst_y}, ${6:int src_x}, ${7:int src_y}, ${8:int src_w}, ${9:int src_h});${10}
snippet imagecopymerge
	${1:bool }imagecopymerge(${2:resource src_im}, ${3:resource dst_im}, ${4:int dst_x}, ${5:int dst_y}, ${6:int src_x}, ${7:int src_y}, ${8:int src_w}, ${9:int src_h}, ${10:int pct});${11}
snippet imagecopymergegray
	${1:bool }imagecopymergegray(${2:resource src_im}, ${3:resource dst_im}, ${4:int dst_x}, ${5:int dst_y}, ${6:int src_x}, ${7:int src_y}, ${8:int src_w}, ${9:int src_h}, ${10:int pct});${11}
snippet imagecopyresampled
	${1:bool }imagecopyresampled(${2:resource dst_im}, ${3:resource src_im}, ${4:int dst_x}, ${5:int dst_y}, ${6:int src_x}, ${7:int src_y}, ${8:int dst_w}, ${9:int dst_h}, ${10:int src_w}, ${11:int src_h});${12}
snippet imagecopyresized
	${1:bool }imagecopyresized(${2:resource dst_im}, ${3:resource src_im}, ${4:int dst_x}, ${5:int dst_y}, ${6:int src_x}, ${7:int src_y}, ${8:int dst_w}, ${9:int dst_h}, ${10:int src_w}, ${11:int src_h});${12}
snippet imagecreate
	${1:resource }imagecreate(${2:int x_size}, ${3:int y_size});${4}
snippet imagecreatefromgd
	${1:resource }imagecreatefromgd(${2:string filename});${3}
snippet imagecreatefromgd2
	${1:resource }imagecreatefromgd2(${2:string filename});${3}
snippet imagecreatefromgd2part
	${1:resource }imagecreatefromgd2part(${2:string filename}, ${3:int srcX}, ${4:int srcY}, ${5:int width}, ${6:int height});${7}
snippet imagecreatefromgif
	${1:resource }imagecreatefromgif(${2:string filename});${3}
snippet imagecreatefromjpeg
	${1:resource }imagecreatefromjpeg(${2:string filename});${3}
snippet imagecreatefrompng
	${1:resource }imagecreatefrompng(${2:string filename});${3}
snippet imagecreatefromstring
	${1:resource }imagecreatefromstring(${2:string image});${3}
snippet imagecreatefromwbmp
	${1:resource }imagecreatefromwbmp(${2:string filename});${3}
snippet imagecreatefromxbm
	${1:resource }imagecreatefromxbm(${2:string filename});${3}
snippet imagecreatefromxpm
	${1:resource }imagecreatefromxpm(${2:string filename});${3}
snippet imagecreatetruecolor
	${1:resource }imagecreatetruecolor(${2:int x_size}, ${3:int y_size});${4}
snippet imagedashedline
	${1:bool }imagedashedline(${2:resource im}, ${3:int x1}, ${4:int y1}, ${5:int x2}, ${6:int y2}, ${7:int col});${8}
snippet imagedestroy
	${1:bool }imagedestroy(${2:resource im});${3}
snippet imageellipse
	${1:bool }imageellipse(${2:resource im}, ${3:int cx}, ${4:int cy}, ${5:int w}, ${6:int h}, ${7:int color});${8}
snippet imagefill
	${1:bool }imagefill(${2:resource im}, ${3:int x}, ${4:int y}, ${5:int col});${6}
snippet imagefilledarc
	${1:bool }imagefilledarc(${2:resource im}, ${3:int cx}, ${4:int cy}, ${5:int w}, ${6:int h}, ${7:int s}, ${8:int e}, ${9:int col}, ${10:int style});${11}
snippet imagefilledellipse
	${1:bool }imagefilledellipse(${2:resource im}, ${3:int cx}, ${4:int cy}, ${5:int w}, ${6:int h}, ${7:int color});${8}
snippet imagefilledpolygon
	${1:bool }imagefilledpolygon(${2:resource im}, ${3:array point}, ${4:int num_points}, ${5:int col});${6}
snippet imagefilledrectangle
	${1:bool }imagefilledrectangle(${2:resource im}, ${3:int x1}, ${4:int y1}, ${5:int x2}, ${6:int y2}, ${7:int col});${8}
snippet imagefilltoborder
	${1:bool }imagefilltoborder(${2:resource im}, ${3:int x}, ${4:int y}, ${5:int border}, ${6:int col});${7}
snippet imagefilter
	${1:bool }imagefilter(${2:resource src_im}, ${3:int filtertype}, ${4:[args] });${5}
snippet imagefontheight
	${1:int }imagefontheight(${2:int font});${3}
snippet imagefontwidth
	${1:int }imagefontwidth(${2:int font});${3}
snippet imageftbbox
	${1:array }imageftbbox(${2:float size}, ${3:float angle}, ${4:string font_file}, ${5:string text [, }${6:array extrainfo]});${7}
snippet imagefttext
	${1:array }imagefttext(${2:resource im}, ${3:float size}, ${4:float angle}, ${5:int x}, ${6:int y}, ${7:int col}, ${8:string font_file}, ${9:string text [, }${10:array extrainfo]});${11}
snippet imagegammacorrect
	${1:bool }imagegammacorrect(${2:resource im}, ${3:float inputgamma}, ${4:float outputgamma});${5}
snippet imagegd
	${1:bool }imagegd(${2:resource im [, }${3:string filename]});${4}
snippet imagegd2
	${1:bool }imagegd2(${2:resource im [,} ${3:string filename [, }${4:int chunk_size [, }${5:int type]]]});${6}
snippet imagegif
	${1:bool }imagegif(${2:resource im [, }${3:string filename]});${4}
snippet imagegrabscreen
	${1:resource }imagegrabscreen();${2}
snippet imagegrabwindow
	${1:resource }imagegrabwindow(${2:int window_handle [, }${3:int client_area]});${4}
snippet imageinterlace
	${1:int }imageinterlace(${2:resource im [, }${3:int interlace]});${4}
snippet imageistruecolor
	${1:bool }imageistruecolor(${2:resource im});${3}
snippet imagejpeg
	${1:bool }imagejpeg(${2:resource im [, }${3:string filename [, }${4:int quality]]});${5}
snippet imagelayereffect
	${1:bool }imagelayereffect(${2:resource im}, ${3:int effect});${4}
snippet imageline
	${1:bool }imageline(${2:resource im}, ${3:int x1}, ${4:int y1}, ${5:int x2}, ${6:int y2}, ${7:int col});${8}
snippet imageloadfont
	${1:int }imageloadfont(${2:string filename});${3}
snippet imagepalettecopy
	${1:void }imagepalettecopy(${2:resource dst}, ${3:resource src});${4}
snippet imagepng
	${1:bool }imagepng(${2:resource im [, }${3:string filename [, }${4:int quality]]});${5}
snippet imagepolygon
	${1:bool }imagepolygon(${2:resource im}, ${3:array point}, ${4:int num_points}, ${5:int col});${6}
snippet imagepsbbox
	${1:array }imagepsbbox(${2:string text}, ${3:resource font}, ${4:int size [, }${5:int space, }${6:int tightness, }${7:int angle]});${8}
snippet imagepscopyfont
	${1:int }imagepscopyfont(${2:int font_index});${3}
snippet imagepsencodefont
	${1:bool }imagepsencodefont(${2:resource font_index}, ${3:string filename});${4}
snippet imagepsextendfont
	${1:bool }imagepsextendfont(${2:resource font_index}, ${3:float extend});${4}
snippet imagepsfreefont
	${1:bool }imagepsfreefont(${2:resource font_index});${3}
snippet imagepsloadfont
	${1:resource }imagepsloadfont(${2:string pathname});${3}
snippet imagepsslantfont
	${1:bool }imagepsslantfont(${2:resource font_index}, ${3:float slant});${4}
snippet imagepstext
	${1:array }imagepstext(${2:resource image}, ${3:string text}, ${4:resource font}, ${5:int size}, ${6:int foreground}, ${7:int background}, ${8:int xcoord}, ${9:int ycoord [, }${10:int space, }${11:int tightness, }${12:float angle, }${13:int antialias]});${14}
snippet imagerectangle
	${1:bool }imagerectangle(${2:resource im}, ${3:int x1}, ${4:int y1}, ${5:int x2}, ${6:int y2}, ${7:int col});${8}
snippet imagerotate
	${1:resource }imagerotate(${2:resource src_im}, ${3:float angle}, ${4:int bgdcolor [, }${5:int ignoretransparent]});${6}
snippet imagesavealpha
	${1:bool }imagesavealpha(${2:resource im}, ${3:bool on});${4}
snippet imagesetbrush
	${1:bool }imagesetbrush(${2:resource image}, ${3:resource brush});${4}
snippet imagesetpixel
	${1:bool }imagesetpixel(${2:resource im}, ${3:int x}, ${4:int y}, ${5:int col});${6}
snippet imagesetstyle
	${1:bool }imagesetstyle(${2:resource im}, ${3:array styles});${4}
snippet imagesetthickness
	${1:bool }imagesetthickness(${2:resource im}, ${3:int thickness});${4}
snippet imagesettile
	${1:bool }imagesettile(${2:resource image}, ${3:resource tile});${4}
snippet imagestring
	${1:bool }imagestring(${2:resource im}, ${3:int font}, ${4:int x}, ${5:int y}, ${6:string str}, ${7:int col});${8}
snippet imagestringup
	${1:bool }imagestringup(${2:resource im}, ${3:int font}, ${4:int x}, ${5:int y}, ${6:string str}, ${7:int col});${8}
snippet imagesx
	${1:int }imagesx(${2:resource im});${3}
snippet imagesy
	${1:int }imagesy(${2:resource im});${3}
snippet imagetruecolortopalette
	${1:void }imagetruecolortopalette(${2:resource im}, ${3:bool ditherFlag}, ${4:int colorsWanted});${5}
snippet imagettfbbox
	${1:array }imagettfbbox(${2:float size}, ${3:float angle}, ${4:string font_file}, ${5:string text});${6}
snippet imagettftext
	${1:array }imagettftext(${2:resource im}, ${3:float size}, ${4:float angle}, ${5:int x}, ${6:int y}, ${7:int col}, ${8:string font_file}, ${9:string text});${10}
snippet imagetypes
	${1:int }imagetypes(${2:void});${3}
snippet imagewbmp
	${1:bool }imagewbmp(${2:resource im [, }${3:string filename, }${4:[, int foreground]]});${5}
snippet imagexbm
	${1:int }imagexbm(${2:int im}, ${3:string filename [, }${4:int foreground]});${5}
snippet jpeg2wbmp
	${1:bool }jpeg2wbmp(${2:string f_org}, ${3:string f_dest}, ${4:int d_height}, ${5:int d_width}, ${6:int threshold});${7}
snippet png2wbmp
	${1:bool }png2wbmp(${2:string f_org}, ${3:string f_dest}, ${4:int d_height}, ${5:int d_width}, ${6:int threshold});${7}
# php-src/ext/gettext/gettext.c
snippet bind_textdomain_codeset
	${1:string }bind_textdomain_codeset(${2:string domain}, ${3:string codeset});${4}
snippet bindtextdomain
	${1:string }bindtextdomain(${2:string domain_name}, ${3:string dir});${4}
snippet dcgettext
	${1:binary }dcgettext(${2:string domain_name}, ${3:string msgid}, ${4:int category});${5}
snippet dcngettext
	${1:binary }dcngettext (${2:string domain}, ${3:string msgid1}, ${4:string msgid2}, ${5:int count}, ${6:int category});${7}
snippet dgettext
	${1:binary }dgettext(${2:string domain_name}, ${3:string msgid});${4}
snippet dngettext
	${1:binary }dngettext (${2:string domain}, ${3:string msgid1}, ${4:string msgid2}, ${5:int count});${6}
snippet gettext
	${1:binary }gettext(${2:string msgid});${3}
snippet ngettext
	${1:binary }ngettext(${2:string msgid1}, ${3:string msgid2}, ${4:int count});${5}
snippet textdomain
	${1:string }textdomain(${2:string domain});${3}
# php-src/ext/gmp/gmp.c
snippet gmp_abs
	${1:resource }gmp_abs(${2:resource a});${3}
snippet gmp_add
	${1:resource }gmp_add(${2:resource a}, ${3:resource b});${4}
snippet gmp_and
	${1:resource }gmp_and(${2:resource a}, ${3:resource b});${4}
snippet gmp_clrbit
	${1:void }gmp_clrbit(${2:resource &a}, ${3:int index});${4}
snippet gmp_cmp
	${1:int }gmp_cmp(${2:resource a}, ${3:resource b});${4}
snippet gmp_com
	${1:resource }gmp_com(${2:resource a});${3}
snippet gmp_div_q
	${1:resource }gmp_div_q(${2:resource a}, ${3:resource b [, }${4:int round]});${5}
snippet gmp_div_qr
	${1:array }gmp_div_qr(${2:resource a}, ${3:resource b [, }${4:int round]});${5}
snippet gmp_div_r
	${1:resource }gmp_div_r(${2:resource a}, ${3:resource b [, }${4:int round]});${5}
snippet gmp_divexact
	${1:resource }gmp_divexact(${2:resource a}, ${3:resource b});${4}
snippet gmp_fact
	${1:resource }gmp_fact(${2:int a});${3}
snippet gmp_gcd
	${1:resource }gmp_gcd(${2:resource a}, ${3:resource b});${4}
snippet gmp_gcdext
	${1:array }gmp_gcdext(${2:resource a}, ${3:resource b});${4}
snippet gmp_hamdist
	${1:int }gmp_hamdist(${2:resource a}, ${3:resource b});${4}
snippet gmp_init
	${1:resource }gmp_init(${2:mixed number [, }${3:int base]});${4}
snippet gmp_intval
	${1:int }gmp_intval(${2:resource gmpnumber});${3}
snippet gmp_invert
	${1:resource }gmp_invert(${2:resource a}, ${3:resource b});${4}
snippet gmp_jacobi
	${1:int }gmp_jacobi(${2:resource a}, ${3:resource b});${4}
snippet gmp_legendre
	${1:int }gmp_legendre(${2:resource a}, ${3:resource b});${4}
snippet gmp_mod
	${1:resource }gmp_mod(${2:resource a}, ${3:resource b});${4}
snippet gmp_mul
	${1:resource }gmp_mul(${2:resource a}, ${3:resource b});${4}
snippet gmp_neg
	${1:resource }gmp_neg(${2:resource a});${3}
snippet gmp_nextprime
	${1:resource }gmp_nextprime(${2:resource a});${3}
snippet gmp_or
	${1:resource }gmp_or(${2:resource a}, ${3:resource b});${4}
snippet gmp_perfect_square
	${1:bool }gmp_perfect_square(${2:resource a});${3}
snippet gmp_popcount
	${1:int }gmp_popcount(${2:resource a});${3}
snippet gmp_pow
	${1:resource }gmp_pow(${2:resource base}, ${3:int exp});${4}
snippet gmp_powm
	${1:resource }gmp_powm(${2:resource base}, ${3:resource exp}, ${4:resource mod});${5}
snippet gmp_prob_prime
	${1:int }gmp_prob_prime(${2:resource a[, }${3:int reps]});${4}
snippet gmp_random
	${1:resource }gmp_random(${2:[int limiter]});${3}
snippet gmp_scan0
	${1:int }gmp_scan0(${2:resource a}, ${3:int start});${4}
snippet gmp_scan1
	${1:int }gmp_scan1(${2:resource a}, ${3:int start});${4}
snippet gmp_setbit
	${1:void }gmp_setbit(${2:resource &a}, ${3:int index[, }${4:bool set_clear]});${5}
snippet gmp_sign
	${1:int }gmp_sign(${2:resource a});${3}
snippet gmp_sqrt
	${1:resource }gmp_sqrt(${2:resource a});${3}
snippet gmp_sqrtrem
	${1:array }gmp_sqrtrem(${2:resource a});${3}
snippet gmp_strval
	${1:string }gmp_strval(${2:resource gmpnumber [, }${3:int base]});${4}
snippet gmp_sub
	${1:resource }gmp_sub(${2:resource a}, ${3:resource b});${4}
snippet gmp_testbit
	${1:bool }gmp_testbit(${2:resource a}, ${3:int index});${4}
snippet gmp_xor
	${1:resource }gmp_xor(${2:resource a}, ${3:resource b});${4}
# php-src/ext/hash/hash.c
snippet hash
	${1:string }hash(${2:string algo}, ${3:string data[, }${4:bool raw_output = false]});${5}
snippet hash_algos
	${1:array }hash_algos(${2:void});${3}
snippet hash_file
	${1:string }hash_file(${2:string algo}, ${3:string filename[, }${4:bool raw_output = false]});${5}
snippet hash_final
	${1:string }hash_final(${2:resource context[, }${3:bool raw_output=false]});${4}
snippet hash_hmac
	${1:string }hash_hmac(${2:string algo}, ${3:string data}, ${4:string key[, }${5:bool raw_output = false]});${6}
snippet hash_hmac_file
	${1:string }hash_hmac_file(${2:string algo}, ${3:string filename}, ${4:string key[, }${5:bool raw_output = false]});${6}
snippet hash_init
	${1:resource }hash_init(${2:string algo[, }${3:int options, }${4:string key]});${5}
snippet hash_update
	${1:bool }hash_update(${2:resource context}, ${3:string data});${4}
snippet hash_update_file
	${1:bool }hash_update_file(${2:resource context}, ${3:string filename[, }${4:resource context]});${5}
snippet hash_update_stream
	${1:int }hash_update_stream(${2:resource context}, ${3:resource handle[, }${4:integer length]});${5}
# php-src/ext/iconv/iconv.c
snippet iconv
	${1:string }iconv(${2:string in_charset}, ${3:string out_charset}, ${4:string str});${5}
snippet iconv_get_encoding
	${1:mixed }iconv_get_encoding(${2:[string type]});${3}
snippet iconv_mime_decode
	${1:string }iconv_mime_decode(${2:string encoded_string [, }${3:int mode, }${4:string charset]});${5}
snippet iconv_mime_decode_headers
	${1:array }iconv_mime_decode_headers(${2:string headers [, }${3:int mode, }${4:string charset]});${5}
snippet iconv_mime_encode
	${1:string }iconv_mime_encode(${2:string field_name}, ${3:string field_value [, }${4:array preference]});${5}
snippet iconv_set_encoding
	${1:bool }iconv_set_encoding(${2:string type}, ${3:string charset});${4}
snippet iconv_strlen
	${1:int }iconv_strlen(${2:string str [, }${3:string charset]});${4}
snippet iconv_strpos
	${1:int }iconv_strpos(${2:string haystack}, ${3:string needle [, }${4:int offset [, }${5:string charset]]});${6}
snippet iconv_strrpos
	${1:int }iconv_strrpos(${2:string haystack}, ${3:string needle [, }${4:string charset]});${5}
snippet iconv_substr
	${1:string }iconv_substr(${2:string str}, ${3:int offset}, ${4:[int length, }${5:string charset]});${6}
# php-src/ext/imap/php_imap.c
snippet imap_8bit
	${1:string }imap_8bit(${2:string text});${3}
snippet imap_alerts
	${1:array }imap_alerts(${2:void});${3}
snippet imap_append
	${1:bool }imap_append(${2:resource stream_id}, ${3:string folder}, ${4:string message [, }${5:string options]});${6}
snippet imap_base64
	${1:string }imap_base64(${2:string text});${3}
snippet imap_binary
	${1:string }imap_binary(${2:string text});${3}
snippet imap_body
	${1:string }imap_body(${2:resource stream_id}, ${3:int msg_no [, }${4:int options]});${5}
snippet imap_bodystruct
	${1:object }imap_bodystruct(${2:resource stream_id}, ${3:int msg_no}, ${4:string section});${5}
snippet imap_check
	${1:object }imap_check(${2:resource stream_id});${3}
snippet imap_clearflag_full
	${1:bool }imap_clearflag_full(${2:resource stream_id}, ${3:string sequence}, ${4:string flag [, }${5:int options]});${6}
snippet imap_close
	${1:bool }imap_close(${2:resource stream_id [, }${3:int options]});${4}
snippet imap_createmailbox
	${1:bool }imap_createmailbox(${2:resource stream_id}, ${3:string mailbox});${4}
snippet imap_delete
	${1:bool }imap_delete(${2:resource stream_id}, ${3:int msg_no [, }${4:int options]});${5}
snippet imap_deletemailbox
	${1:bool }imap_deletemailbox(${2:resource stream_id}, ${3:string mailbox});${4}
snippet imap_errors
	${1:array }imap_errors(${2:void});${3}
snippet imap_expunge
	${1:bool }imap_expunge(${2:resource stream_id});${3}
snippet imap_fetch_overview
	${1:array }imap_fetch_overview(${2:resource stream_id}, ${3:int msg_no [, }${4:int options]});${5}
snippet imap_fetchbody
	${1:string }imap_fetchbody(${2:resource stream_id}, ${3:int msg_no}, ${4:string section [, }${5:int options]});${6}
snippet imap_fetchheader
	${1:string }imap_fetchheader(${2:resource stream_id}, ${3:int msg_no [, }${4:int options]});${5}
snippet imap_fetchstructure
	${1:object }imap_fetchstructure(${2:resource stream_id}, ${3:int msg_no [, }${4:int options]});${5}
snippet imap_get_quota
	${1:array }imap_get_quota(${2:resource stream_id}, ${3:string qroot});${4}
snippet imap_get_quotaroot
	${1:array }imap_get_quotaroot(${2:resource stream_id}, ${3:string mbox});${4}
snippet imap_getacl
	${1:array }imap_getacl(${2:resource stream_id}, ${3:string mailbox});${4}
snippet imap_getmailboxes
	${1:array }imap_getmailboxes(${2:resource stream_id}, ${3:string ref}, ${4:string pattern});${5}
snippet imap_getsubscribed
	${1:array }imap_getsubscribed(${2:resource stream_id}, ${3:string ref}, ${4:string pattern});${5}
snippet imap_headerinfo
	${1:object }imap_headerinfo(${2:resource stream_id}, ${3:int msg_no [, }${4:int from_length [, }${5:int subject_length [, }${6:string default_host]]]});${7}
snippet imap_headers
	${1:array }imap_headers(${2:resource stream_id});${3}
snippet imap_last_error
	${1:string }imap_last_error(${2:void});${3}
snippet imap_list
	${1:array }imap_list(${2:resource stream_id}, ${3:string ref}, ${4:string pattern});${5}
snippet imap_lsub
	${1:array }imap_lsub(${2:resource stream_id}, ${3:string ref}, ${4:string pattern});${5}
snippet imap_mail
	${1:bool }imap_mail(${2:string to}, ${3:string subject}, ${4:string message [, }${5:string additional_headers [, }${6:string cc [, }${7:string bcc [, }${8:string rpath]]]]});${9}
snippet imap_mail_compose
	${1:string }imap_mail_compose(${2:array envelope}, ${3:array body});${4}
snippet imap_mail_copy
	${1:bool }imap_mail_copy(${2:resource stream_id}, ${3:int msg_no}, ${4:string mailbox [, }${5:int options]});${6}
snippet imap_mail_move
	${1:bool }imap_mail_move(${2:resource stream_id}, ${3:int msg_no}, ${4:string mailbox [, }${5:int options]});${6}
snippet imap_mailboxmsginfo
	${1:object }imap_mailboxmsginfo(${2:resource stream_id});${3}
snippet imap_mime_header_decode
	${1:array }imap_mime_header_decode(${2:string str});${3}
snippet imap_msgno
	${1:int }imap_msgno(${2:resource stream_id}, ${3:int unique_msg_id});${4}
snippet imap_num_msg
	${1:int }imap_num_msg(${2:resource stream_id});${3}
snippet imap_num_recent
	${1:int }imap_num_recent(${2:resource stream_id});${3}
snippet imap_open
	${1:resource }imap_open(${2:string mailbox}, ${3:string user}, ${4:string password [, }${5:int options [, }${6:int n_retries]]});${7}
snippet imap_ping
	${1:bool }imap_ping(${2:resource stream_id});${3}
snippet imap_qprint
	${1:string }imap_qprint(${2:string text});${3}
snippet imap_renamemailbox
	${1:bool }imap_renamemailbox(${2:resource stream_id}, ${3:string old_name}, ${4:string new_name});${5}
snippet imap_reopen
	${1:bool }imap_reopen(${2:resource stream_id}, ${3:string mailbox [, }${4:int options [, }${5:int n_retries]]});${6}
snippet imap_rfc822_parse_adrlist
	${1:array }imap_rfc822_parse_adrlist(${2:string address_string}, ${3:string default_host});${4}
snippet imap_rfc822_parse_headers
	${1:object }imap_rfc822_parse_headers(${2:string headers [, }${3:string default_host]});${4}
snippet imap_rfc822_write_address
	${1:string }imap_rfc822_write_address(${2:string mailbox}, ${3:string host}, ${4:string personal});${5}
snippet imap_savebody
	${1:bool }imap_savebody(${2:resource stream_id}, ${3:string|resource file}, ${4:int msg_no[, }${5:string section = ""[, }${6:int options = 0]]});${7}
snippet imap_scan
	${1:array }imap_scan(${2:resource stream_id}, ${3:string ref}, ${4:string pattern}, ${5:string content});${6}
snippet imap_search
	${1:array }imap_search(${2:resource stream_id}, ${3:string criteria [, }${4:int options [, }${5:string charset]]});${6}
snippet imap_set_quota
	${1:bool }imap_set_quota(${2:resource stream_id}, ${3:string qroot}, ${4:int mailbox_size});${5}
snippet imap_setacl
	${1:bool }imap_setacl(${2:resource stream_id}, ${3:string mailbox}, ${4:string id}, ${5:string rights});${6}
snippet imap_setflag_full
	${1:bool }imap_setflag_full(${2:resource stream_id}, ${3:string sequence}, ${4:string flag [, }${5:int options]});${6}
snippet imap_sort
	${1:array }imap_sort(${2:resource stream_id}, ${3:int criteria}, ${4:int reverse [, }${5:int options [, }${6:string search_criteria [, }${7:string charset]]]});${8}
snippet imap_status
	${1:object }imap_status(${2:resource stream_id}, ${3:string mailbox}, ${4:int options});${5}
snippet imap_subscribe
	${1:bool }imap_subscribe(${2:resource stream_id}, ${3:string mailbox});${4}
snippet imap_thread
	${1:array }imap_thread(${2:resource stream_id [, }${3:int options]});${4}
snippet imap_timeout
	${1:mixed }imap_timeout(${2:int timeout_type [, }${3:int timeout]});${4}
snippet imap_uid
	${1:int }imap_uid(${2:resource stream_id}, ${3:int msg_no});${4}
snippet imap_undelete
	${1:bool }imap_undelete(${2:resource stream_id}, ${3:int msg_no});${4}
snippet imap_unsubscribe
	${1:bool }imap_unsubscribe(${2:resource stream_id}, ${3:string mailbox});${4}
snippet imap_utf7_decode
	${1:string }imap_utf7_decode(${2:string buf});${3}
snippet imap_utf7_encode
	${1:string }imap_utf7_encode(${2:string buf});${3}
snippet imap_utf8
	${1:string }imap_utf8(${2:string mime_encoded_text});${3}
# php-src/ext/interbase/ibase_blobs.c
snippet ibase_blob_add
	${1:bool }ibase_blob_add(${2:resource blob_handle}, ${3:string data});${4}
snippet ibase_blob_cancel
	${1:bool }ibase_blob_cancel(${2:resource blob_handle});${3}
snippet ibase_blob_close
	${1:string }ibase_blob_close(${2:resource blob_handle});${3}
snippet ibase_blob_create
	${1:resource }ibase_blob_create(${2:[resource link_identifier]});${3}
snippet ibase_blob_echo
	${1:bool }ibase_blob_echo(${2:[ resource link_identifier, ] }${3:string blob_id});${4}
snippet ibase_blob_get
	${1:string }ibase_blob_get(${2:resource blob_handle}, ${3:int len});${4}
snippet ibase_blob_import
	${1:string }ibase_blob_import(${2:[ resource link_identifier, ] }${3:resource file});${4}
snippet ibase_blob_info
	${1:array }ibase_blob_info(${2:[ resource link_identifier, ] }${3:string blob_id});${4}
snippet ibase_blob_open
	${1:resource }ibase_blob_open(${2:[ resource link_identifier, ] }${3:string blob_id});${4}
# php-src/ext/interbase/ibase_events.c
snippet ibase_free_event_handler
	${1:bool }ibase_free_event_handler(${2:resource event});${3}
snippet ibase_set_event_handler
	${1:resource }ibase_set_event_handler(${2:[resource link_identifier,] }${3:callback handler, }${4:string event [, }${5:string event [, ...]]});${6}
snippet ibase_wait_event
	${1:string }ibase_wait_event(${2:[resource link_identifier,] }${3:string event [, }${4:string event [, ...]]});${5}
# php-src/ext/interbase/ibase_query.c
snippet ibase_affected_rows
	${1:int }ibase_affected_rows(${2: [ resource link_identifier ] });${3}
snippet ibase_execute
	${1:mixed }ibase_execute(${2:resource query [, }${3:mixed bind_arg [, }${4:mixed bind_arg [, ...]]]});${5}
snippet ibase_fetch_assoc
	${1:array }ibase_fetch_assoc(${2:resource result [, }${3:int fetch_flags]});${4}
snippet ibase_fetch_object
	${1:object }ibase_fetch_object(${2:resource result [, }${3:int fetch_flags]});${4}
snippet ibase_fetch_row
	${1:array }ibase_fetch_row(${2:resource result [, }${3:int fetch_flags]});${4}
snippet ibase_field_info
	${1:array }ibase_field_info(${2:resource query_result}, ${3:int field_number});${4}
snippet ibase_free_query
	${1:bool }ibase_free_query(${2:resource query});${3}
snippet ibase_free_result
	${1:bool }ibase_free_result(${2:resource result});${3}
snippet ibase_name_result
	${1:bool }ibase_name_result(${2:resource result}, ${3:string name});${4}
snippet ibase_num_fields
	${1:int }ibase_num_fields(${2:resource query_result});${3}
snippet ibase_num_params
	${1:int }ibase_num_params(${2:resource query});${3}
snippet ibase_num_rows
	${1:int }ibase_num_rows(${2: resource result_identifier });${3}
snippet ibase_param_info
	${1:array }ibase_param_info(${2:resource query}, ${3:int field_number});${4}
snippet ibase_prepare
	${1:resource }ibase_prepare(${2:[resource link_identifier, ] }${3:string query});${4}
snippet ibase_query
	${1:mixed }ibase_query(${2:[resource link_identifier, [ }${3:resource link_identifier, ]] }${4:string query [, }${5:mixed bind_arg [, }${6:mixed bind_arg [, ...]]]});${7}
# php-src/ext/interbase/ibase_service.c
snippet ibase_add_user
	${1:bool }ibase_add_user(${2:resource service_handle}, ${3:string user_name}, ${4:string password [, }${5:string first_name [, }${6:string middle_name [, }${7:string last_name]]]});${8}
snippet ibase_backup
	${1:mixed }ibase_backup(${2:resource service_handle}, ${3:string source_db}, ${4:string dest_file [, }${5:int options [, }${6:bool verbose]]});${7}
snippet ibase_db_info
	${1:string }ibase_db_info(${2:resource service_handle}, ${3:string db}, ${4:int action [, }${5:int argument]});${6}
snippet ibase_delete_user
	${1:bool }ibase_delete_user(${2:resource service_handle}, ${3:string user_name}, ${4:string password [, }${5:string first_name [, }${6:string middle_name [, }${7:string last_name]]]});${8}
snippet ibase_maintain_db
	${1:bool }ibase_maintain_db(${2:resource service_handle}, ${3:string db}, ${4:int action [, }${5:int argument]});${6}
snippet ibase_modify_user
	${1:bool }ibase_modify_user(${2:resource service_handle}, ${3:string user_name}, ${4:string password [, }${5:string first_name [, }${6:string middle_name [, }${7:string last_name]]]});${8}
snippet ibase_restore
	${1:mixed }ibase_restore(${2:resource service_handle}, ${3:string source_file}, ${4:string dest_db [, }${5:int options [, }${6:bool verbose]]});${7}
snippet ibase_server_info
	${1:string }ibase_server_info(${2:resource service_handle}, ${3:int action});${4}
snippet ibase_service_attach
	${1:resource }ibase_service_attach(${2:string host}, ${3:string dba_username}, ${4:string dba_password});${5}
snippet ibase_service_detach
	${1:bool }ibase_service_detach(${2:resource service_handle});${3}
# php-src/ext/interbase/interbase.c
snippet ibase_close
	${1:bool }ibase_close(${2:[resource link_identifier]});${3}
snippet ibase_commit
	${1:bool }ibase_commit(${2: resource link_identifier });${3}
snippet ibase_commit_ret
	${1:bool }ibase_commit_ret(${2: resource link_identifier });${3}
snippet ibase_connect
	${1:resource }ibase_connect(${2:string database [, }${3:string username [, }${4:string password [, string charset [, int buffers [, int dialect [, string role]]]]]]});${5}
snippet ibase_drop_db
	${1:bool }ibase_drop_db(${2:[resource link_identifier]});${3}
snippet ibase_errcode
	${1:int }ibase_errcode(${2:void});${3}
snippet ibase_errmsg
	${1:string }ibase_errmsg(${2:void});${3}
snippet ibase_gen_id
	${1:int }ibase_gen_id(${2:string generator [, }${3:int increment [, }${4:resource link_identifier ]]});${5}
snippet ibase_pconnect
	${1:resource }ibase_pconnect(${2:string database [, }${3:string username [, }${4:string password [, string charset [, int buffers [, int dialect [, string role]]]]]]});${5}
snippet ibase_rollback
	${1:bool }ibase_rollback(${2: resource link_identifier });${3}
snippet ibase_rollback_ret
	${1:bool }ibase_rollback_ret(${2: resource link_identifier });${3}
snippet ibase_trans
	${1:resource }ibase_trans(${2:[int trans_args [, }${3:resource link_identifier [, ... ], }${4:int trans_args [, }${5:resource link_identifier [, ... ]] }${6:[, ...]]]});${7}
# php-src/ext/json/json.c
snippet json_decode
	${1:mixed }json_decode(${2:string json [, }${3:bool assoc]});${4}
snippet json_encode
	${1:string }json_encode(${2:mixed data});${3}
# php-src/ext/ldap/ldap.c
snippet ldap_8859_to_t61
	${1:string }ldap_8859_to_t61(${2:string value});${3}
snippet ldap_add
	${1:bool }ldap_add(${2:resource link}, ${3:string dn}, ${4:array entry});${5}
snippet ldap_bind
	${1:bool }ldap_bind(${2:resource link [, }${3:string dn, }${4:string password]});${5}
snippet ldap_compare
	${1:bool }ldap_compare(${2:resource link}, ${3:string dn}, ${4:string attr}, ${5:string value});${6}
snippet ldap_connect
	${1:resource }ldap_connect(${2:[string host [, }${3:int port]]});${4}
snippet ldap_count_entries
	${1:int }ldap_count_entries(${2:resource link}, ${3:resource result});${4}
snippet ldap_delete
	${1:bool }ldap_delete(${2:resource link}, ${3:string dn});${4}
snippet ldap_dn2ufn
	${1:string }ldap_dn2ufn(${2:string dn});${3}
snippet ldap_err2str
	${1:string }ldap_err2str(${2:int errno});${3}
snippet ldap_errno
	${1:int }ldap_errno(${2:resource link});${3}
snippet ldap_error
	${1:string }ldap_error(${2:resource link});${3}
snippet ldap_explode_dn
	${1:array }ldap_explode_dn(${2:string dn}, ${3:int with_attrib});${4}
snippet ldap_first_attribute
	${1:string }ldap_first_attribute(${2:resource link}, ${3:resource result_entry}, ${4:int ber});${5}
snippet ldap_first_entry
	${1:resource }ldap_first_entry(${2:resource link}, ${3:resource result});${4}
snippet ldap_first_reference
	${1:resource }ldap_first_reference(${2:resource link}, ${3:resource result});${4}
snippet ldap_free_result
	${1:bool }ldap_free_result(${2:resource result});${3}
snippet ldap_get_attributes
	${1:array }ldap_get_attributes(${2:resource link}, ${3:resource result_entry});${4}
snippet ldap_get_dn
	${1:string }ldap_get_dn(${2:resource link}, ${3:resource result_entry});${4}
snippet ldap_get_entries
	${1:array }ldap_get_entries(${2:resource link}, ${3:resource result});${4}
snippet ldap_get_option
	${1:bool }ldap_get_option(${2:resource link}, ${3:int option}, ${4:mixed retval});${5}
snippet ldap_get_values_len
	${1:array }ldap_get_values_len(${2:resource link}, ${3:resource result_entry}, ${4:string attribute});${5}
snippet ldap_list
	${1:resource }ldap_list(${2:resource link}, ${3:string base_dn}, ${4:string filter [, }${5:array attrs [, }${6:int attrsonly [, }${7:int sizelimit [, }${8:int timelimit [, }${9:int deref]]]]]});${10}
snippet ldap_mod_add
	${1:bool }ldap_mod_add(${2:resource link}, ${3:string dn}, ${4:array entry});${5}
snippet ldap_mod_del
	${1:bool }ldap_mod_del(${2:resource link}, ${3:string dn}, ${4:array entry});${5}
snippet ldap_mod_replace
	${1:bool }ldap_mod_replace(${2:resource link}, ${3:string dn}, ${4:array entry});${5}
snippet ldap_next_attribute
	${1:string }ldap_next_attribute(${2:resource link}, ${3:resource result_entry}, ${4:resource ber});${5}
snippet ldap_next_entry
	${1:resource }ldap_next_entry(${2:resource link}, ${3:resource result_entry});${4}
snippet ldap_next_reference
	${1:resource }ldap_next_reference(${2:resource link}, ${3:resource reference_entry});${4}
snippet ldap_parse_reference
	${1:bool }ldap_parse_reference(${2:resource link}, ${3:resource reference_entry}, ${4:array referrals});${5}
snippet ldap_parse_result
	${1:bool }ldap_parse_result(${2:resource link}, ${3:resource result}, ${4:int errcode}, ${5:string matcheddn}, ${6:string errmsg}, ${7:array referrals});${8}
snippet ldap_read
	${1:resource }ldap_read(${2:resource link}, ${3:string base_dn}, ${4:string filter [, }${5:array attrs [, }${6:int attrsonly [, }${7:int sizelimit [, }${8:int timelimit [, }${9:int deref]]]]]});${10}
snippet ldap_rename
	${1:bool }ldap_rename(${2:resource link}, ${3:string dn}, ${4:string newrdn}, ${5:string newparent}, ${6:bool deleteoldrdn});${7}
snippet ldap_sasl_bind
	${1:bool }ldap_sasl_bind(${2:resource link [, }${3:string binddn, }${4:string password, }${5:string sasl_mech, }${6:string sasl_realm, }${7:string sasl_authz_id, }${8:string props]]});${9}
snippet ldap_search
	${1:resource }ldap_search(${2:resource link}, ${3:string base_dn}, ${4:string filter [, }${5:array attrs [, }${6:int attrsonly [, }${7:int sizelimit [, }${8:int timelimit [, }${9:int deref]]]]]});${10}
snippet ldap_set_option
	${1:bool }ldap_set_option(${2:resource link}, ${3:int option}, ${4:mixed newval});${5}
snippet ldap_set_rebind_proc
	${1:bool }ldap_set_rebind_proc(${2:resource link}, ${3:string callback});${4}
snippet ldap_sort
	${1:bool }ldap_sort(${2:resource link}, ${3:resource result}, ${4:string sortfilter});${5}
snippet ldap_start_tls
	${1:bool }ldap_start_tls(${2:resource link});${3}
snippet ldap_t61_to_8859
	${1:string }ldap_t61_to_8859(${2:string value});${3}
snippet ldap_unbind
	${1:bool }ldap_unbind(${2:resource link});${3}
# php-src/ext/libxml/libxml.c
snippet libxml_clear_errors
	${1:void }libxml_clear_errors();${2}
snippet libxml_get_errors
	${1:object }libxml_get_errors();${2}
snippet libxml_get_last_error
	${1:object }libxml_get_last_error();${2}
snippet libxml_set_streams_context
	${1:void }libxml_set_streams_context(${2:resource streams_context});${3}
snippet libxml_use_internal_errors
	${1:void }libxml_use_internal_errors(${2:[boolean use_errors]});${3}
# php-src/ext/mbstring/mbstring.c
snippet mb_check_encoding
	${1:bool }mb_check_encoding(${2:[string var[, }${3:string encoding]]});${4}
snippet mb_convert_case
	${1:string }mb_convert_case(${2:string sourcestring}, ${3:int mode [, }${4:string encoding]});${5}
snippet mb_convert_encoding
	${1:string }mb_convert_encoding(${2:string str}, ${3:string to-encoding [, }${4:mixed from-encoding]});${5}
snippet mb_convert_kana
	${1:string }mb_convert_kana(${2:string str [, }${3:string option] [, }${4:string encoding]});${5}
snippet mb_convert_variables
	${1:string }mb_convert_variables(${2:string to-encoding}, ${3:mixed from-encoding [, }${4:mixed ...]});${5}
snippet mb_decode_mimeheader
	${1:string }mb_decode_mimeheader(${2:string string});${3}
snippet mb_decode_numericentity
	${1:string }mb_decode_numericentity(${2:string string}, ${3:array convmap [, }${4:string encoding]});${5}
snippet mb_detect_encoding
	${1:string }mb_detect_encoding(${2:string str [, }${3:mixed encoding_list [, }${4:bool strict]]});${5}
snippet mb_detect_order
	${1:bool|array }mb_detect_order(${2:[mixed encoding-list]});${3}
snippet mb_encode_mimeheader
	${1:string }mb_encode_mimeheader(${2:string str [, }${3:string charset [, }${4:string transfer-encoding [, }${5:string linefeed [, }${6:int indent]]]]});${7}
snippet mb_encode_numericentity
	${1:string }mb_encode_numericentity(${2:string string}, ${3:array convmap [, }${4:string encoding]});${5}
snippet mb_get_info
	${1:mixed }mb_get_info(${2:[string type]});${3}
snippet mb_http_input
	${1:mixed }mb_http_input(${2:[string type]});${3}
snippet mb_http_output
	${1:string }mb_http_output(${2:[string encoding]});${3}
snippet mb_internal_encoding
	${1:string }mb_internal_encoding(${2:[string encoding]});${3}
snippet mb_language
	${1:string }mb_language(${2:[string language]});${3}
snippet mb_list_encodings
	${1:mixed }mb_list_encodings(${2:[string alias_encoding]});${3}
snippet mb_list_encodings_alias_names
	${1:array }mb_list_encodings_alias_names(${2:[string encoding]});${3}
snippet mb_list_mime_names
	${1:mixed }mb_list_mime_names(${2:[string encoding]});${3}
snippet mb_output_handler
	${1:string }mb_output_handler(${2:string contents}, ${3:int status});${4}
snippet mb_parse_str
	${1:bool }mb_parse_str(${2:string encoded_string [, }${3:array result]});${4}
snippet mb_preferred_mime_name
	${1:string }mb_preferred_mime_name(${2:string encoding});${3}
snippet mb_send_mail
	${1:int }mb_send_mail(${2:string to}, ${3:string subject}, ${4:string message [, }${5:string additional_headers [, }${6:string additional_parameters]]});${7}
snippet mb_strcut
	${1:string }mb_strcut(${2:string str}, ${3:int start [, }${4:int length [, }${5:string encoding]]});${6}
snippet mb_strimwidth
	${1:string }mb_strimwidth(${2:string str}, ${3:int start}, ${4:int width [, }${5:string trimmarker [, }${6:string encoding]]});${7}
snippet mb_stripos
	${1:int }mb_stripos(${2:string haystack}, ${3:string needle [, }${4:int offset [, }${5:string encoding]]});${6}
snippet mb_stristr
	${1:string }mb_stristr(${2:string haystack}, ${3:string needle[, }${4:bool part[, }${5:string encoding]]});${6}
snippet mb_strlen
	${1:int }mb_strlen(${2:string str [, }${3:string encoding]});${4}
snippet mb_strpos
	${1:int }mb_strpos(${2:string haystack}, ${3:string needle [, }${4:int offset [, }${5:string encoding]]});${6}
snippet mb_strrchr
	${1:string }mb_strrchr(${2:string haystack}, ${3:string needle[, }${4:bool part[, }${5:string encoding]]});${6}
snippet mb_strrichr
	${1:string }mb_strrichr(${2:string haystack}, ${3:string needle[, }${4:bool part[, }${5:string encoding]]});${6}
snippet mb_strripos
	${1:int }mb_strripos(${2:string haystack}, ${3:string needle [, }${4:int offset [, }${5:string encoding]]});${6}
snippet mb_strrpos
	${1:int }mb_strrpos(${2:string haystack}, ${3:string needle [, }${4:int offset [, }${5:string encoding]]});${6}
snippet mb_strstr
	${1:string }mb_strstr(${2:string haystack}, ${3:string needle[, }${4:bool part[, }${5:string encoding]]});${6}
snippet mb_strtolower
	${1:string }mb_strtolower(${2:string sourcestring [, }${3:string encoding]});${4}
snippet mb_strtoupper
	${1:string }mb_strtoupper(${2:string sourcestring [, }${3:string encoding]});${4}
snippet mb_strwidth
	${1:int }mb_strwidth(${2:string str [, }${3:string encoding]});${4}
snippet mb_substitute_character
	${1:mixed }mb_substitute_character(${2:[mixed substchar]});${3}
snippet mb_substr
	${1:string }mb_substr(${2:string str}, ${3:int start [, }${4:int length [, }${5:string encoding]]});${6}
snippet mb_substr_count
	${1:int }mb_substr_count(${2:string haystack}, ${3:string needle [, }${4:string encoding]});${5}
# php-src/ext/mbstring/php_mbregex.c
snippet mb_ereg
	${1:int }mb_ereg(${2:string pattern}, ${3:string string [, }${4:array registers]});${5}
snippet mb_ereg_match
	${1:bool }mb_ereg_match(${2:string pattern}, ${3:string string [,}${4:string option]});${5}
snippet mb_ereg_replace
	${1:string }mb_ereg_replace(${2:string pattern}, ${3:string replacement}, ${4:string string [, }${5:string option]});${6}
snippet mb_ereg_search
	${1:bool }mb_ereg_search(${2:[string pattern[, }${3:string option]]});${4}
snippet mb_ereg_search_getpos
	${1:int }mb_ereg_search_getpos(${2:void});${3}
snippet mb_ereg_search_getregs
	${1:array }mb_ereg_search_getregs(${2:void});${3}
snippet mb_ereg_search_init
	${1:bool }mb_ereg_search_init(${2:string string [, }${3:string pattern[, }${4:string option]]});${5}
snippet mb_ereg_search_pos
	${1:array }mb_ereg_search_pos(${2:[string pattern[, }${3:string option]]});${4}
snippet mb_ereg_search_regs
	${1:array }mb_ereg_search_regs(${2:[string pattern[, }${3:string option]]});${4}
snippet mb_ereg_search_setpos
	${1:bool }mb_ereg_search_setpos(${2:int position});${3}
snippet mb_eregi
	${1:int }mb_eregi(${2:string pattern}, ${3:string string [, }${4:array registers]});${5}
snippet mb_eregi_replace
	${1:string }mb_eregi_replace(${2:string pattern}, ${3:string replacement}, ${4:string string});${5}
snippet mb_regex_encoding
	${1:string }mb_regex_encoding(${2:[string encoding]});${3}
snippet mb_regex_set_options
	${1:string }mb_regex_set_options(${2:[string options]});${3}
snippet mb_split
	${1:array }mb_split(${2:string pattern}, ${3:string string [, }${4:int limit]});${5}
# php-src/ext/mcrypt/mcrypt.c
snippet mcrypt_cbc
	${1:string }mcrypt_cbc(${2:int cipher}, ${3:string key}, ${4:string data}, ${5:int mode}, ${6:string iv});${7}
snippet mcrypt_cfb
	${1:string }mcrypt_cfb(${2:int cipher}, ${3:string key}, ${4:string data}, ${5:int mode}, ${6:string iv});${7}
snippet mcrypt_create_iv
	${1:binary }mcrypt_create_iv(${2:int size}, ${3:int source});${4}
snippet mcrypt_decrypt
	${1:string }mcrypt_decrypt(${2:string cipher}, ${3:string key}, ${4:string data}, ${5:string mode}, ${6:string iv});${7}
snippet mcrypt_ecb
	${1:string }mcrypt_ecb(${2:int cipher}, ${3:string key}, ${4:string data}, ${5:int mode}, ${6:string iv});${7}
snippet mcrypt_enc_get_algorithms_name
	${1:string }mcrypt_enc_get_algorithms_name(${2:resource td});${3}
snippet mcrypt_enc_get_block_size
	${1:int }mcrypt_enc_get_block_size(${2:resource td});${3}
snippet mcrypt_enc_get_iv_size
	${1:int }mcrypt_enc_get_iv_size(${2:resource td});${3}
snippet mcrypt_enc_get_key_size
	${1:int }mcrypt_enc_get_key_size(${2:resource td});${3}
snippet mcrypt_enc_get_modes_name
	${1:string }mcrypt_enc_get_modes_name(${2:resource td});${3}
snippet mcrypt_enc_get_supported_key_sizes
	${1:array }mcrypt_enc_get_supported_key_sizes(${2:resource td});${3}
snippet mcrypt_enc_is_block_algorithm
	${1:bool }mcrypt_enc_is_block_algorithm(${2:resource td});${3}
snippet mcrypt_enc_is_block_algorithm_mode
	${1:bool }mcrypt_enc_is_block_algorithm_mode(${2:resource td});${3}
snippet mcrypt_enc_is_block_mode
	${1:bool }mcrypt_enc_is_block_mode(${2:resource td});${3}
snippet mcrypt_enc_self_test
	${1:int }mcrypt_enc_self_test(${2:resource td});${3}
snippet mcrypt_encrypt
	${1:string }mcrypt_encrypt(${2:string cipher}, ${3:string key}, ${4:string data}, ${5:string mode}, ${6:string iv});${7}
snippet mcrypt_generic
	${1:binary }mcrypt_generic(${2:resource td}, ${3:binary data});${4}
snippet mcrypt_generic_deinit
	${1:bool }mcrypt_generic_deinit(${2:resource td});${3}
snippet mcrypt_generic_init
	${1:int }mcrypt_generic_init(${2:resource td}, ${3:binary key}, ${4:binary iv});${5}
snippet mcrypt_get_block_size
	${1:int }mcrypt_get_block_size(${2:string cipher}, ${3:string module});${4}
snippet mcrypt_get_cipher_name
	${1:string }mcrypt_get_cipher_name(${2:string cipher});${3}
snippet mcrypt_get_iv_size
	${1:int }mcrypt_get_iv_size(${2:string cipher}, ${3:string module});${4}
snippet mcrypt_get_key_size
	${1:int }mcrypt_get_key_size(${2:string cipher}, ${3:string module});${4}
snippet mcrypt_list_algorithms
	${1:array }mcrypt_list_algorithms(${2:[string lib_dir]});${3}
snippet mcrypt_list_modes
	${1:array }mcrypt_list_modes(${2:[string lib_dir]});${3}
snippet mcrypt_module_close
	${1:bool }mcrypt_module_close(${2:resource td});${3}
snippet mcrypt_module_get_algo_block_size
	${1:int }mcrypt_module_get_algo_block_size(${2:string algorithm [, }${3:string lib_dir]});${4}
snippet mcrypt_module_get_algo_key_size
	${1:int }mcrypt_module_get_algo_key_size(${2:string algorithm [, }${3:string lib_dir]});${4}
snippet mcrypt_module_get_supported_key_sizes
	${1:array }mcrypt_module_get_supported_key_sizes(${2:string algorithm [, }${3:string lib_dir]});${4}
snippet mcrypt_module_is_block_algorithm
	${1:bool }mcrypt_module_is_block_algorithm(${2:string algorithm [, }${3:string lib_dir]});${4}
snippet mcrypt_module_is_block_algorithm_mode
	${1:bool }mcrypt_module_is_block_algorithm_mode(${2:string mode [, }${3:string lib_dir]});${4}
snippet mcrypt_module_is_block_mode
	${1:bool }mcrypt_module_is_block_mode(${2:string mode [, }${3:string lib_dir]});${4}
snippet mcrypt_module_open
	${1:resource }mcrypt_module_open(${2:string cipher}, ${3:string cipher_directory}, ${4:string mode}, ${5:string mode_directory});${6}
snippet mcrypt_module_self_test
	${1:bool }mcrypt_module_self_test(${2:string algorithm [, }${3:string lib_dir]});${4}
snippet mcrypt_ofb
	${1:string }mcrypt_ofb(${2:int cipher}, ${3:string key}, ${4:string data}, ${5:int mode}, ${6:string iv});${7}
snippet mdecrypt_generic
	${1:binary }mdecrypt_generic(${2:resource td}, ${3:binary data});${4}
# php-src/ext/mhash/mhash.c
snippet mhash
	${1:binary }mhash(${2:int hash}, ${3:binary data [, }${4:binary key]});${5}
snippet mhash_count
	${1:int }mhash_count(${2:void});${3}
snippet mhash_get_block_size
	${1:int }mhash_get_block_size(${2:int hash});${3}
snippet mhash_get_hash_name
	${1:string }mhash_get_hash_name(${2:int hash});${3}
snippet mhash_get_keygen_name
	${1:string }mhash_get_keygen_name(${2:int keygen});${3}
snippet mhash_get_keygen_salt_size
	${1:bool }mhash_get_keygen_salt_size(${2:int keygen});${3}
snippet mhash_keygen
	${1:binary }mhash_keygen(${2:int type}, ${3:int hash1}, ${4:int hash2}, ${5:binary password[, }${6:binary salt[, }${7:int max_key_size = 128[, }${8:int bytes_count = 0]]});${9}
snippet mhash_keygen_count
	${1:int }mhash_keygen_count();${2}
snippet mhash_keygen_s2k
	${1:binary }mhash_keygen_s2k(${2:int hash}, ${3:binary input_password}, ${4:binary salt}, ${5:int bytes});${6}
snippet mhash_keygen_uses_count
	${1:bool }mhash_keygen_uses_count(${2:int keygen});${3}
snippet mhash_keygen_uses_hash
	${1:bool }mhash_keygen_uses_hash(${2:int keygen});${3}
snippet mhash_keygen_uses_salt
	${1:bool }mhash_keygen_uses_salt(${2:int keygen});${3}
# php-src/ext/mime_magic/mime_magic.c
snippet mime_content_type
	${1:string }mime_content_type(${2:string filename|resource stream});${3}
# php-src/ext/ming/ming.c
snippet ming_keypress
	${1:int }ming_keypress(${2:string str});${3}
snippet ming_setcubicthreshold
	${1:void }ming_setcubicthreshold(${2:int threshold});${3}
snippet ming_setscale
	${1:void }ming_setscale(${2:int scale});${3}
snippet ming_useconstants
	${1:void }ming_useconstants(${2:int use});${3}
snippet ming_useswfversion
	${1:void }ming_useswfversion(${2:int version});${3}
snippet swfaction::__construct
	${1:void }swfaction::__construct(${2:string});${3}
snippet swfbitmap::__construct
	${1:void }swfbitmap::__construct(${2:mixed file [, }${3:mixed maskfile]});${4}
snippet swfbitmap::getHeight
	${1:float }swfbitmap::getHeight();${2}
snippet swfbitmap::getWidth
	${1:float }swfbitmap::getWidth();${2}
snippet swfbutton::__construct
	${1:void }swfbutton::__construct();${2}
snippet swfbutton::addASound
	${1:SWFSoundInstance }swfbutton::addASound(${2:SWFSound sound}, ${3:int flags});${4}
snippet swfbutton::addAction
	${1:void }swfbutton::addAction(${2:object SWFAction}, ${3:int flags});${4}
snippet swfbutton::addShape
	${1:void }swfbutton::addShape(${2:object SWFCharacter}, ${3:int flags});${4}
snippet swfbutton::setAction
	${1:void }swfbutton::setAction(${2:object SWFAction});${3}
snippet swfbutton::setDown
	${1:void }swfbutton::setDown(${2:object SWFCharacter});${3}
snippet swfbutton::setHit
	${1:void }swfbutton::setHit(${2:object SWFCharacter});${3}
snippet swfbutton::setMenu
	${1:void }swfbutton::setMenu(${2:int flag});${3}
snippet swfbutton::setOver
	${1:void }swfbutton::setOver(${2:object SWFCharacter});${3}
snippet swfbutton::setUp
	${1:void }swfbutton::setUp(${2:object SWFCharacter});${3}
snippet swfdisplayitem::addAction
	${1:void }swfdisplayitem::addAction(${2:object SWFAction}, ${3:int flags});${4}
snippet swfdisplayitem::addColor
	${1:void }swfdisplayitem::addColor(${2:int r}, ${3:int g}, ${4:int b [, }${5:int a]});${6}
snippet swfdisplayitem::endMask
	${1:void }swfdisplayitem::endMask();${2}
snippet swfdisplayitem::move
	${1:void }swfdisplayitem::move(${2:float dx}, ${3:float dy});${4}
snippet swfdisplayitem::moveTo
	${1:void }swfdisplayitem::moveTo(${2:int x}, ${3:int y});${4}
snippet swfdisplayitem::multColor
	${1:void }swfdisplayitem::multColor(${2:float r}, ${3:float g}, ${4:float b [, }${5:float a]});${6}
snippet swfdisplayitem::rotate
	${1:void }swfdisplayitem::rotate(${2:float degrees});${3}
snippet swfdisplayitem::rotateTo
	${1:void }swfdisplayitem::rotateTo(${2:float degrees});${3}
snippet swfdisplayitem::scale
	${1:void }swfdisplayitem::scale(${2:float xScale}, ${3:float yScale});${4}
snippet swfdisplayitem::scaleTo
	${1:void }swfdisplayitem::scaleTo(${2:float xScale [, }${3:float yScale]});${4}
snippet swfdisplayitem::setDepth
	${1:void }swfdisplayitem::setDepth(${2:int depth});${3}
snippet swfdisplayitem::setMaskLevel
	${1:void }swfdisplayitem::setMaskLevel(${2:int level});${3}
snippet swfdisplayitem::setMatrix
	${1:void }swfdisplayitem::setMatrix(${2:float a}, ${3:float b}, ${4:float c}, ${5:float d}, ${6:float x}, ${7:float y});${8}
snippet swfdisplayitem::setName
	${1:void }swfdisplayitem::setName(${2:string name});${3}
snippet swfdisplayitem::setRatio
	${1:void }swfdisplayitem::setRatio(${2:float ratio});${3}
snippet swfdisplayitem::skewX
	${1:void }swfdisplayitem::skewX(${2:float xSkew});${3}
snippet swfdisplayitem::skewXTo
	${1:void }swfdisplayitem::skewXTo(${2:float xSkew});${3}
snippet swfdisplayitem::skewY
	${1:void }swfdisplayitem::skewY(${2:float ySkew});${3}
snippet swfdisplayitem::skewYTo
	${1:void }swfdisplayitem::skewYTo(${2:float ySkew});${3}
snippet swffill::__construct
	${1:void }swffill::__construct();${2}
snippet swffill::moveTo
	${1:void }swffill::moveTo(${2:float x}, ${3:float y});${4}
snippet swffill::rotateTo
	${1:void }swffill::rotateTo(${2:float degrees});${3}
snippet swffill::scaleTo
	${1:void }swffill::scaleTo(${2:float xScale [, }${3:float yScale]});${4}
snippet swffill::skewXTo
	${1:void }swffill::skewXTo(${2:float xSkew});${3}
snippet swffill::skewYTo
	${1:void }swffill::skewYTo(${2:float ySkew});${3}
snippet swffont::__construct
	${1:void }swffont::__construct(${2:string filename});${3}
snippet swffont::addChars
	${1:void }swffont::addChars(${2:string});${3}
snippet swffont::getAscent
	${1:float }swffont::getAscent();${2}
snippet swffont::getDescent
	${1:float }swffont::getDescent();${2}
snippet swffont::getLeading
	${1:float }swffont::getLeading();${2}
snippet swffont::getShape
	${1:string }swffont::getShape(${2:code});${3}
snippet swffont::getUTF8Width
	${1:int }swffont::getUTF8Width(${2:string});${3}
snippet swffont::getWideWidth
	${1:int }swffont::getWideWidth(${2:string});${3}
snippet swffont::getWidth
	${1:float }swffont::getWidth(${2:string str});${3}
snippet swffontcha::raddChars
	${1:void }swffontcha::raddChars(${2:string});${3}
snippet swffontchar::addChars
	${1:void }swffontchar::addChars(${2:string});${3}
snippet swfgradient::__construct
	${1:void }swfgradient::__construct();${2}
snippet swfgradient::addEntry
	${1:void }swfgradient::addEntry(${2:float ratio}, ${3:int r}, ${4:int g}, ${5:int b [, }${6:int a]});${7}
snippet swfmorph::__construct
	${1:void }swfmorph::__construct();${2}
snippet swfmorph::getShape1
	${1:object }swfmorph::getShape1();${2}
snippet swfmorph::getShape2
	${1:object }swfmorph::getShape2();${2}
snippet swfmovie::__construct
	${1:void }swfmovie::__construct(${2:int version});${3}
snippet swfmovie::add
	${1:object }swfmovie::add(${2:object SWFBlock});${3}
snippet swfmovie::labelframe
	${1:void }swfmovie::labelframe(${2:string label});${3}
snippet swfmovie::namedanchor
	${1:void }swfmovie::namedanchor(${2:string name});${3}
snippet swfmovie::nextframe
	${1:void }swfmovie::nextframe();${2}
snippet swfmovie::output
	${1:int }swfmovie::output(${2:[int compression]});${3}
snippet swfmovie::protect
	${1:void }swfmovie::protect(${2:[ string pasword]});${3}
snippet swfmovie::remove
	${1:void }swfmovie::remove(${2:object SWFBlock});${3}
snippet swfmovie::save
	${1:int }swfmovie::save(${2:mixed where [, }${3:int compression]});${4}
snippet swfmovie::saveToFile
	${1:int }swfmovie::saveToFile(${2:stream x [, }${3:int compression]});${4}
snippet swfmovie::setBackground
	${1:void }swfmovie::setBackground(${2:int r}, ${3:int g}, ${4:int b});${5}
snippet swfmovie::setDimension
	${1:void }swfmovie::setDimension(${2:float x}, ${3:float y});${4}
snippet swfmovie::setFrames
	${1:void }swfmovie::setFrames(${2:int frames});${3}
snippet swfmovie::setRate
	${1:void }swfmovie::setRate(${2:float rate});${3}
snippet swfmovie::streamMP3
	${1:int }swfmovie::streamMP3(${2:mixed file [, }${3:float skip]});${4}
snippet swfprebuiltclip_init
	${1:void }swfprebuiltclip_init(${2:[file]});${3}
snippet swfshape::__construct
	${1:void }swfshape::__construct();${2}
snippet swfshape::addfill
	${1:object }swfshape::addfill(${2:mixed arg1}, ${3:int arg2}, ${4:[int b [, }${5:int a]]});${6}
snippet swfshape::drawarc
	${1:void }swfshape::drawarc(${2:float r}, ${3:float startAngle}, ${4:float endAngle});${5}
snippet swfshape::drawcircle
	${1:void }swfshape::drawcircle(${2:float r});${3}
snippet swfshape::drawcubic
	${1:void }swfshape::drawcubic(${2:float bx}, ${3:float by}, ${4:float cx}, ${5:float cy}, ${6:float dx}, ${7:float dy});${8}
snippet swfshape::drawcurve
	${1:void }swfshape::drawcurve(${2:float adx}, ${3:float ady}, ${4:float bdx}, ${5:float bdy [, }${6:float cdx, }${7:float cdy]});${8}
snippet swfshape::drawcurveto
	${1:void }swfshape::drawcurveto(${2:float ax}, ${3:float ay}, ${4:float bx}, ${5:float by [, }${6:float dx, }${7:float dy]});${8}
snippet swfshape::drawglyph
	${1:void }swfshape::drawglyph(${2:SWFFont font}, ${3:string character [, }${4:int size]});${5}
snippet swfshape::drawline
	${1:void }swfshape::drawline(${2:float dx}, ${3:float dy});${4}
snippet swfshape::drawlineto
	${1:void }swfshape::drawlineto(${2:float x}, ${3:float y});${4}
snippet swfshape::movepen
	${1:void }swfshape::movepen(${2:float x}, ${3:float y});${4}
snippet swfshape::movepento
	${1:void }swfshape::movepento(${2:float x}, ${3:float y});${4}
snippet swfshape::setleftfill
	${1:void }swfshape::setleftfill(${2:int arg1 [, }${3:int g ,}${4:int b [,}${5:int a]]});${6}
snippet swfshape::setline
	${1:void }swfshape::setline(${2:int width}, ${3:int r}, ${4:int g}, ${5:int b [, }${6:int a]});${7}
snippet swfsound::__construct
	${1:void }swfsound::__construct(${2:string filename}, ${3:int flags});${4}
snippet swfsprite::__construct
	${1:void }swfsprite::__construct();${2}
snippet swfsprite::add
	${1:object }swfsprite::add(${2:object SWFCharacter});${3}
snippet swfsprite::labelFrame
	${1:void }swfsprite::labelFrame(${2:string label});${3}
snippet swfsprite::nextFrame
	${1:void }swfsprite::nextFrame();${2}
snippet swfsprite::remove
	${1:void }swfsprite::remove(${2:object SWFDisplayItem});${3}
snippet swfsprite::setFrames
	${1:void }swfsprite::setFrames(${2:int frames});${3}
snippet swftext::__construct
	${1:void }swftext::__construct();${2}
snippet swftext::addString
	${1:void }swftext::addString(${2:string text});${3}
snippet swftext::addUTF8String
	${1:void }swftext::addUTF8String(${2:string text});${3}
snippet swftext::addWideString
	${1:void }swftext::addWideString(${2:string text});${3}
snippet swftext::getAscent
	${1:float }swftext::getAscent();${2}
snippet swftext::getDescent
	${1:float }swftext::getDescent();${2}
snippet swftext::getLeading
	${1:float }swftext::getLeading();${2}
snippet swftext::getUTF8Width
	${1:double }swftext::getUTF8Width(${2:string});${3}
snippet swftext::getWideWidth
	${1:double }swftext::getWideWidth(${2:string});${3}
snippet swftext::getWidth
	${1:float }swftext::getWidth(${2:string str});${3}
snippet swftext::moveTo
	${1:void }swftext::moveTo(${2:float x}, ${3:float y});${4}
snippet swftext::setColor
	${1:void }swftext::setColor(${2:int r}, ${3:int g}, ${4:int b [, }${5:int a]});${6}
snippet swftext::setFont
	${1:void }swftext::setFont(${2:object font});${3}
snippet swftext::setHeight
	${1:void }swftext::setHeight(${2:float height});${3}
snippet swftext::setSpacing
	${1:void }swftext::setSpacing(${2:float spacing});${3}
snippet swftextfield::__construct
	${1:void }swftextfield::__construct(${2:[int flags]});${3}
snippet swftextfield::addChars
	${1:void }swftextfield::addChars(${2:string});${3}
snippet swftextfield::addString
	${1:void }swftextfield::addString(${2:string str});${3}
snippet swftextfield::align
	${1:void }swftextfield::align(${2:int alignment});${3}
snippet swftextfield::setBounds
	${1:void }swftextfield::setBounds(${2:float width}, ${3:float height});${4}
snippet swftextfield::setColor
	${1:void }swftextfield::setColor(${2:int r}, ${3:int g}, ${4:int b [, }${5:int a]});${6}
snippet swftextfield::setFont
	${1:void }swftextfield::setFont(${2:object font});${3}
snippet swftextfield::setHeight
	${1:void }swftextfield::setHeight(${2:float height});${3}
snippet swftextfield::setIndentation
	${1:void }swftextfield::setIndentation(${2:float indentation});${3}
snippet swftextfield::setLeftMargin
	${1:void }swftextfield::setLeftMargin(${2:float margin});${3}
snippet swftextfield::setLineSpacing
	${1:void }swftextfield::setLineSpacing(${2:float space});${3}
snippet swftextfield::setMargins
	${1:void }swftextfield::setMargins(${2:float left}, ${3:float right});${4}
snippet swftextfield::setName
	${1:void }swftextfield::setName(${2:string var_name});${3}
snippet swftextfield::setPadding
	${1:void }swftextfield::setPadding(${2:float padding});${3}
snippet swftextfield::setRightMargin
	${1:void }swftextfield::setRightMargin(${2:float margin});${3}
snippet swfvideostream_init
	${1:void }swfvideostream_init(${2:[file]});${3}
# php-src/ext/msql/php_msql.c
snippet msql_affected_rows
	${1:int }msql_affected_rows(${2:resource query});${3}
snippet msql_close
	${1:bool }msql_close(${2:[resource link_identifier]});${3}
snippet msql_connect
	${1:int }msql_connect(${2:[string hostname[:}${3:port]] [, }${4:string username] [, }${5:string password]});${6}
snippet msql_create_db
	${1:bool }msql_create_db(${2:string database_name [, }${3:resource link_identifier]});${4}
snippet msql_data_seek
	${1:bool }msql_data_seek(${2:resource query}, ${3:int row_number});${4}
snippet msql_db_query
	${1:resource }msql_db_query(${2:string database_name}, ${3:string query [, }${4:resource link_identifier]});${5}
snippet msql_drop_db
	${1:bool }msql_drop_db(${2:string database_name [, }${3:resource link_identifier]});${4}
snippet msql_error
	${1:string }msql_error(${2:void});${3}
snippet msql_fetch_array
	${1:array }msql_fetch_array(${2:resource query [, }${3:int result_type]});${4}
snippet msql_fetch_field
	${1:object }msql_fetch_field(${2:resource query [, }${3:int field_offset]});${4}
snippet msql_fetch_object
	${1:object }msql_fetch_object(${2:resource query [, }${3:resource result_type]});${4}
snippet msql_fetch_row
	${1:array }msql_fetch_row(${2:resource query});${3}
snippet msql_field_flags
	${1:string }msql_field_flags(${2:resource query}, ${3:int field_offset});${4}
snippet msql_field_len
	${1:int }msql_field_len(${2:int query}, ${3:int field_offet});${4}
snippet msql_field_name
	${1:string }msql_field_name(${2:resource query}, ${3:int field_index});${4}
snippet msql_field_seek
	${1:bool }msql_field_seek(${2:resource query}, ${3:int field_offset});${4}
snippet msql_field_table
	${1:string }msql_field_table(${2:resource query}, ${3:int field_offset});${4}
snippet msql_field_type
	${1:string }msql_field_type(${2:resource query}, ${3:int field_offset});${4}
snippet msql_free_result
	${1:bool }msql_free_result(${2:resource query});${3}
snippet msql_list_dbs
	${1:resource }msql_list_dbs(${2:[resource link_identifier]});${3}
snippet msql_list_fields
	${1:resource }msql_list_fields(${2:string database_name}, ${3:string table_name [, }${4:resource link_identifier]});${5}
snippet msql_list_tables
	${1:resource }msql_list_tables(${2:string database_name [, }${3:resource link_identifier]});${4}
snippet msql_num_fields
	${1:int }msql_num_fields(${2:resource query});${3}
snippet msql_num_rows
	${1:int }msql_num_rows(${2:resource query});${3}
snippet msql_pconnect
	${1:int }msql_pconnect(${2:[string hostname[:}${3:port]] [, }${4:string username] [, }${5:string password]});${6}
snippet msql_query
	${1:resource }msql_query(${2:string query [, }${3:resource link_identifier]});${4}
snippet msql_result
	${1:string }msql_result(${2:int query}, ${3:int row [, }${4:mixed field]});${5}
snippet msql_select_db
	${1:bool }msql_select_db(${2:string database_name [, }${3:resource link_identifier]});${4}
# php-src/ext/mssql/php_mssql.c
snippet mssql_bind
	${1:bool }mssql_bind(${2:resource stmt}, ${3:string param_name}, ${4:mixed var}, ${5:int type [, }${6:int is_output [, }${7:int is_null [, }${8:int maxlen]]]});${9}
snippet mssql_close
	${1:bool }mssql_close(${2:[resource conn_id]});${3}
snippet mssql_connect
	${1:int }mssql_connect(${2:[string servername [, }${3:string username [, }${4:string password [, }${5:bool new_link]]]]});${6}
snippet mssql_data_seek
	${1:bool }mssql_data_seek(${2:resource result_id}, ${3:int offset});${4}
snippet mssql_execute
	${1:mixed }mssql_execute(${2:resource stmt [, }${3:bool skip_results = false]});${4}
snippet mssql_fetch_array
	${1:array }mssql_fetch_array(${2:resource result_id [, }${3:int result_type]});${4}
snippet mssql_fetch_assoc
	${1:array }mssql_fetch_assoc(${2:resource result_id});${3}
snippet mssql_fetch_batch
	${1:int }mssql_fetch_batch(${2:resource result_index});${3}
snippet mssql_fetch_field
	${1:object }mssql_fetch_field(${2:resource result_id [, }${3:int offset]});${4}
snippet mssql_fetch_object
	${1:object }mssql_fetch_object(${2:resource result_id [, }${3:int result_type]});${4}
snippet mssql_fetch_row
	${1:array }mssql_fetch_row(${2:resource result_id});${3}
snippet mssql_field_length
	${1:int }mssql_field_length(${2:resource result_id [, }${3:int offset]});${4}
snippet mssql_field_name
	${1:string }mssql_field_name(${2:resource result_id [, }${3:int offset]});${4}
snippet mssql_field_seek
	${1:bool }mssql_field_seek(${2:int result_id}, ${3:int offset});${4}
snippet mssql_field_type
	${1:string }mssql_field_type(${2:resource result_id [, }${3:int offset]});${4}
snippet mssql_free_result
	${1:bool }mssql_free_result(${2:resource result_index});${3}
snippet mssql_free_statement
	${1:bool }mssql_free_statement(${2:resource result_index});${3}
snippet mssql_get_last_message
	${1:string }mssql_get_last_message(${2:void});${3}
snippet mssql_guid_string
	${1:string }mssql_guid_string(${2:string binary [,}${3:int short_format]});${4}
snippet mssql_init
	${1:int }mssql_init(${2:string sp_name [, }${3:resource conn_id]});${4}
snippet mssql_min_error_severity
	${1:void }mssql_min_error_severity(${2:int severity});${3}
snippet mssql_min_message_severity
	${1:void }mssql_min_message_severity(${2:int severity});${3}
snippet mssql_next_result
	${1:bool }mssql_next_result(${2:resource result_id});${3}
snippet mssql_num_fields
	${1:int }mssql_num_fields(${2:resource mssql_result_index});${3}
snippet mssql_num_rows
	${1:int }mssql_num_rows(${2:resource mssql_result_index});${3}
snippet mssql_pconnect
	${1:int }mssql_pconnect(${2:[string servername [, }${3:string username [, }${4:string password [, }${5:bool new_link]]]]});${6}
snippet mssql_query
	${1:resource }mssql_query(${2:string query [, }${3:resource conn_id [, }${4:int batch_size]]});${5}
snippet mssql_result
	${1:string }mssql_result(${2:resource result_id}, ${3:int row}, ${4:mixed field});${5}
snippet mssql_rows_affected
	${1:int }mssql_rows_affected(${2:resource conn_id});${3}
snippet mssql_select_db
	${1:bool }mssql_select_db(${2:string database_name [, }${3:resource conn_id]});${4}
# php-src/ext/mysql/php_mysql.c
snippet mysql_affected_rows
	${1:int }mysql_affected_rows(${2:[int link_identifier]});${3}
snippet mysql_client_encoding
	${1:string }mysql_client_encoding(${2:[int link_identifier]});${3}
snippet mysql_close
	${1:bool }mysql_close(${2:[int link_identifier]});${3}
snippet mysql_connect
	${1:resource }mysql_connect(${2:[string hostname[:}${3:port][:}${4:/path/to/socket] [, }${5:string username [, }${6:string password [, }${7:bool new [, }${8:int flags]]]]]});${9}
snippet mysql_create_db
	${1:bool }mysql_create_db(${2:string database_name [, }${3:int link_identifier]});${4}
snippet mysql_data_seek
	${1:bool }mysql_data_seek(${2:resource result}, ${3:int row_number});${4}
snippet mysql_db_query
	${1:resource }mysql_db_query(${2:string database_name}, ${3:string query [, }${4:int link_identifier]});${5}
snippet mysql_drop_db
	${1:bool }mysql_drop_db(${2:string database_name [, }${3:int link_identifier]});${4}
snippet mysql_errno
	${1:int }mysql_errno(${2:[int link_identifier]});${3}
snippet mysql_error
	${1:string }mysql_error(${2:[int link_identifier]});${3}
snippet mysql_escape_string
	${1:string }mysql_escape_string(${2:string to_be_escaped});${3}
snippet mysql_fetch_array
	${1:array }mysql_fetch_array(${2:resource result [, }${3:int result_type]});${4}
snippet mysql_fetch_assoc
	${1:array }mysql_fetch_assoc(${2:resource result});${3}
snippet mysql_fetch_field
	${1:object }mysql_fetch_field(${2:resource result [, }${3:int field_offset]});${4}
snippet mysql_fetch_lengths
	${1:array }mysql_fetch_lengths(${2:resource result});${3}
snippet mysql_fetch_object
	${1:object }mysql_fetch_object(${2:resource result [, }${3:string class_name [, }${4:NULL|array ctor_params]]});${5}
snippet mysql_fetch_row
	${1:array }mysql_fetch_row(${2:resource result});${3}
snippet mysql_field_flags
	${1:string }mysql_field_flags(${2:resource result}, ${3:int field_offset});${4}
snippet mysql_field_len
	${1:int }mysql_field_len(${2:resource result}, ${3:int field_offset});${4}
snippet mysql_field_name
	${1:string }mysql_field_name(${2:resource result}, ${3:int field_index});${4}
snippet mysql_field_seek
	${1:bool }mysql_field_seek(${2:resource result}, ${3:int field_offset});${4}
snippet mysql_field_table
	${1:string }mysql_field_table(${2:resource result}, ${3:int field_offset});${4}
snippet mysql_field_type
	${1:string }mysql_field_type(${2:resource result}, ${3:int field_offset});${4}
snippet mysql_free_result
	${1:bool }mysql_free_result(${2:resource result});${3}
snippet mysql_get_client_info
	${1:string }mysql_get_client_info(${2:void});${3}
snippet mysql_get_host_info
	${1:string }mysql_get_host_info(${2:[int link_identifier]});${3}
snippet mysql_get_proto_info
	${1:int }mysql_get_proto_info(${2:[int link_identifier]});${3}
snippet mysql_get_server_info
	${1:string }mysql_get_server_info(${2:[int link_identifier]});${3}
snippet mysql_info
	${1:string }mysql_info(${2:[int link_identifier]});${3}
snippet mysql_insert_id
	${1:int }mysql_insert_id(${2:[int link_identifier]});${3}
snippet mysql_list_dbs
	${1:resource }mysql_list_dbs(${2:[int link_identifier]});${3}
snippet mysql_list_fields
	${1:resource }mysql_list_fields(${2:string database_name}, ${3:string table_name [, }${4:int link_identifier]});${5}
snippet mysql_list_processes
	${1:resource }mysql_list_processes(${2:[int link_identifier]});${3}
snippet mysql_list_tables
	${1:resource }mysql_list_tables(${2:string database_name [, }${3:int link_identifier]});${4}
snippet mysql_num_fields
	${1:int }mysql_num_fields(${2:resource result});${3}
snippet mysql_num_rows
	${1:int }mysql_num_rows(${2:resource result});${3}
snippet mysql_pconnect
	${1:resource }mysql_pconnect(${2:[string hostname[:}${3:port][:}${4:/path/to/socket] [, }${5:string username [, }${6:string password [, }${7:int flags]]]]});${8}
snippet mysql_ping
	${1:bool }mysql_ping(${2:[int link_identifier]});${3}
snippet mysql_query
	${1:resource }mysql_query(${2:string query [, }${3:int link_identifier]});${4}
snippet mysql_real_escape_string
	${1:string }mysql_real_escape_string(${2:string to_be_escaped [, }${3:int link_identifier]});${4}
snippet mysql_result
	${1:mixed }mysql_result(${2:resource result}, ${3:int row [, }${4:mixed field]});${5}
snippet mysql_select_db
	${1:bool }mysql_select_db(${2:string database_name [, }${3:int link_identifier]});${4}
snippet mysql_set_charset
	${1:bool }mysql_set_charset(${2:string csname [, }${3:int link_identifier]});${4}
snippet mysql_stat
	${1:string }mysql_stat(${2:[int link_identifier]});${3}
snippet mysql_thread_id
	${1:int }mysql_thread_id(${2:[int link_identifier]});${3}
snippet mysql_unbuffered_query
	${1:resource }mysql_unbuffered_query(${2:string query [, }${3:int link_identifier]});${4}
# php-src/ext/mysqli/mysqli_api.c
snippet mysqli_affected_rows
	${1:mixed }mysqli_affected_rows(${2:object link});${3}
snippet mysqli_autocommit
	${1:bool }mysqli_autocommit(${2:object link}, ${3:bool mode});${4}
snippet mysqli_change_user
	${1:bool }mysqli_change_user(${2:object link}, ${3:string user}, ${4:string password}, ${5:string database});${6}
snippet mysqli_character_set_name
	${1:string }mysqli_character_set_name(${2:object link});${3}
snippet mysqli_close
	${1:bool }mysqli_close(${2:object link});${3}
snippet mysqli_commit
	${1:bool }mysqli_commit(${2:object link});${3}
snippet mysqli_data_seek
	${1:bool }mysqli_data_seek(${2:object result}, ${3:int offset});${4}
snippet mysqli_debug
	${1:void }mysqli_debug(${2:string debug});${3}
snippet mysqli_dump_debug_info
	${1:bool }mysqli_dump_debug_info(${2:object link});${3}
snippet mysqli_errno
	${1:int }mysqli_errno(${2:object link});${3}
snippet mysqli_error
	${1:string }mysqli_error(${2:object link});${3}
snippet mysqli_fetch_field
	${1:mixed }mysqli_fetch_field(${2:object result});${3}
snippet mysqli_fetch_field_direct
	${1:mixed }mysqli_fetch_field_direct(${2:object result}, ${3:int offset});${4}
snippet mysqli_fetch_fields
	${1:mixed }mysqli_fetch_fields(${2:object result});${3}
snippet mysqli_fetch_lengths
	${1:mixed }mysqli_fetch_lengths(${2:object result});${3}
snippet mysqli_fetch_row
	${1:array }mysqli_fetch_row(${2:object result});${3}
snippet mysqli_field_count
	${1:int }mysqli_field_count(${2:object link});${3}
snippet mysqli_field_seek
	${1:int }mysqli_field_seek(${2:object result}, ${3:int fieldnr});${4}
snippet mysqli_field_tell
	${1:int }mysqli_field_tell(${2:object result});${3}
snippet mysqli_free_result
	${1:void }mysqli_free_result(${2:object result});${3}
snippet mysqli_get_client_info
	${1:string }mysqli_get_client_info(${2:void});${3}
snippet mysqli_get_client_version
	${1:int }mysqli_get_client_version(${2:void});${3}
snippet mysqli_get_host_info
	${1:string }mysqli_get_host_info(${2:object link});${3}
snippet mysqli_get_proto_info
	${1:int }mysqli_get_proto_info(${2:object link});${3}
snippet mysqli_get_server_info
	${1:string }mysqli_get_server_info(${2:object link});${3}
snippet mysqli_get_server_version
	${1:int }mysqli_get_server_version(${2:object link});${3}
snippet mysqli_info
	${1:string }mysqli_info(${2:object link});${3}
snippet mysqli_init
	${1:resource }mysqli_init(${2:void});${3}
snippet mysqli_insert_id
	${1:mixed }mysqli_insert_id(${2:object link});${3}
snippet mysqli_kill
	${1:bool }mysqli_kill(${2:object link}, ${3:int processid});${4}
snippet mysqli_more_results
	${1:bool }mysqli_more_results(${2:object link});${3}
snippet mysqli_next_result
	${1:bool }mysqli_next_result(${2:object link});${3}
snippet mysqli_num_fields
	${1:int }mysqli_num_fields(${2:object result});${3}
snippet mysqli_num_rows
	${1:mixed }mysqli_num_rows(${2:object result});${3}
snippet mysqli_options
	${1:bool }mysqli_options(${2:object link}, ${3:int flags}, ${4:mixed values});${5}
snippet mysqli_ping
	${1:bool }mysqli_ping(${2:object link});${3}
snippet mysqli_prepare
	${1:mixed }mysqli_prepare(${2:object link}, ${3:string query});${4}
snippet mysqli_real_connect
	${1:bool }mysqli_real_connect(${2:object link [,}${3:string hostname [,}${4:string username [,}${5:string passwd [,}${6:string dbname [,}${7:int port [,}${8:string socket [,}${9:int flags]]]]]]]});${10}
snippet mysqli_real_escape_string
	${1:string }mysqli_real_escape_string(${2:object link}, ${3:string escapestr});${4}
snippet mysqli_real_query
	${1:bool }mysqli_real_query(${2:object link}, ${3:string query});${4}
snippet mysqli_rollback
	${1:bool }mysqli_rollback(${2:object link});${3}
snippet mysqli_select_db
	${1:bool }mysqli_select_db(${2:object link}, ${3:string dbname});${4}
snippet mysqli_set_local_infile_default
	${1:void }mysqli_set_local_infile_default(${2:object link});${3}
snippet mysqli_set_local_infile_handler
	${1:bool }mysqli_set_local_infile_handler(${2:object link}, ${3:callback read_func});${4}
snippet mysqli_sqlstate
	${1:string }mysqli_sqlstate(${2:object link});${3}
snippet mysqli_ssl_set
	${1:bool }mysqli_ssl_set(${2:object link ,}${3:string key ,}${4:string cert ,}${5:string ca ,}${6:string capath ,}${7:string cipher]});${8}
snippet mysqli_stat
	${1:mixed }mysqli_stat(${2:object link});${3}
snippet mysqli_stmt_affected_rows
	${1:mixed }mysqli_stmt_affected_rows(${2:object stmt});${3}
snippet mysqli_stmt_attr_get
	${1:int }mysqli_stmt_attr_get(${2:object stmt}, ${3:long attr});${4}
snippet mysqli_stmt_attr_set
	${1:int }mysqli_stmt_attr_set(${2:object stmt}, ${3:long attr}, ${4:long mode});${5}
snippet mysqli_stmt_bind_param
	${1:bool }mysqli_stmt_bind_param(${2:object stmt}, ${3:string types}, ${4:mixed variable [,mixed,....]});${5}
snippet mysqli_stmt_bind_result
	${1:bool }mysqli_stmt_bind_result(${2:object stmt}, ${3:mixed var}, ${4:[,mixed, ...]});${5}
snippet mysqli_stmt_close
	${1:bool }mysqli_stmt_close(${2:object stmt});${3}
snippet mysqli_stmt_data_seek
	${1:void }mysqli_stmt_data_seek(${2:object stmt}, ${3:int offset});${4}
snippet mysqli_stmt_errno
	${1:int }mysqli_stmt_errno(${2:object stmt});${3}
snippet mysqli_stmt_error
	${1:string }mysqli_stmt_error(${2:object stmt});${3}
snippet mysqli_stmt_execute
	${1:bool }mysqli_stmt_execute(${2:object stmt});${3}
snippet mysqli_stmt_fetch
	${1:mixed }mysqli_stmt_fetch(${2:object stmt});${3}
snippet mysqli_stmt_field_count
	${1:int }mysqli_stmt_field_count(${2:object stmt});${3}
snippet mysqli_stmt_free_result
	${1:void }mysqli_stmt_free_result(${2:object stmt});${3}
snippet mysqli_stmt_init
	${1:mixed }mysqli_stmt_init(${2:object link});${3}
snippet mysqli_stmt_insert_id
	${1:mixed }mysqli_stmt_insert_id(${2:object stmt});${3}
snippet mysqli_stmt_num_rows
	${1:mixed }mysqli_stmt_num_rows(${2:object stmt});${3}
snippet mysqli_stmt_param_count
	${1:int }mysqli_stmt_param_count(${2:object stmt});${3}
snippet mysqli_stmt_prepare
	${1:bool }mysqli_stmt_prepare(${2:object stmt}, ${3:string query});${4}
snippet mysqli_stmt_reset
	${1:bool }mysqli_stmt_reset(${2:object stmt});${3}
snippet mysqli_stmt_result_metadata
	${1:mixed }mysqli_stmt_result_metadata(${2:object stmt});${3}
snippet mysqli_stmt_send_long_data
	${1:bool }mysqli_stmt_send_long_data(${2:object stmt}, ${3:int param_nr}, ${4:string data});${5}
snippet mysqli_stmt_sqlstate
	${1:string }mysqli_stmt_sqlstate(${2:object stmt});${3}
snippet mysqli_stmt_store_result
	${1:bool }mysqli_stmt_store_result(${2:stmt});${3}
snippet mysqli_store_result
	${1:object }mysqli_store_result(${2:object link});${3}
snippet mysqli_thread_id
	${1:int }mysqli_thread_id(${2:object link});${3}
snippet mysqli_thread_safe
	${1:bool }mysqli_thread_safe(${2:void});${3}
snippet mysqli_use_result
	${1:mixed }mysqli_use_result(${2:object link});${3}
snippet mysqli_warning_count
	${1:int }mysqli_warning_count(${2:object link});${3}
# php-src/ext/mysqli/mysqli_embedded.c
snippet mysqli_embedded_server_end
	${1:void }mysqli_embedded_server_end(${2:void});${3}
snippet mysqli_embedded_server_start
	${1:bool }mysqli_embedded_server_start(${2:bool start}, ${3:array arguments}, ${4:array groups});${5}
# php-src/ext/mysqli/mysqli_nonapi.c
snippet mysqli_connect
	${1:object }mysqli_connect(${2:[string hostname [,}${3:string username [,}${4:string passwd [,}${5:string dbname [,}${6:int port [,}${7:string socket]]]]]]});${8}
snippet mysqli_connect_errno
	${1:int }mysqli_connect_errno(${2:void});${3}
snippet mysqli_connect_error
	${1:string }mysqli_connect_error(${2:void});${3}
snippet mysqli_fetch_array
	${1:mixed }mysqli_fetch_array(${2:object result [,}${3:int resulttype]});${4}
snippet mysqli_fetch_assoc
	${1:mixed }mysqli_fetch_assoc(${2:object result});${3}
snippet mysqli_fetch_object
	${1:mixed }mysqli_fetch_object(${2:object result [, }${3:string class_name [, }${4:NULL|array ctor_params]]});${5}
snippet mysqli_get_charset
	${1:object }mysqli_get_charset(${2:object link});${3}
snippet mysqli_get_warnings
	${1:object }mysqli_get_warnings(${2:object link});${3}
snippet mysqli_multi_query
	${1:bool }mysqli_multi_query(${2:object link}, ${3:string query});${4}
snippet mysqli_query
	${1:mixed }mysqli_query(${2:object link}, ${3:string query [,}${4:int resultmode]});${5}
snippet mysqli_set_charset
	${1:bool }mysqli_set_charset(${2:object link}, ${3:string csname});${4}
snippet mysqli_stmt_get_warnings
	${1:object }mysqli_stmt_get_warnings(${2:object link});${3}
# php-src/ext/mysqli/mysqli_repl.c
snippet mysqli_disable_reads_from_master
	${1:void }mysqli_disable_reads_from_master(${2:object link});${3}
snippet mysqli_disable_rpl_parse
	${1:void }mysqli_disable_rpl_parse(${2:object link});${3}
snippet mysqli_enable_reads_from_master
	${1:void }mysqli_enable_reads_from_master(${2:object link});${3}
snippet mysqli_enable_rpl_parse
	${1:void }mysqli_enable_rpl_parse(${2:object link});${3}
snippet mysqli_master_query
	${1:bool }mysqli_master_query(${2:object link}, ${3:string query});${4}
snippet mysqli_rpl_parse_enabled
	${1:int }mysqli_rpl_parse_enabled(${2:object link});${3}
snippet mysqli_rpl_probe
	${1:bool }mysqli_rpl_probe(${2:object link});${3}
snippet mysqli_rpl_query_type
	${1:int }mysqli_rpl_query_type(${2:string query});${3}
snippet mysqli_send_query
	${1:bool }mysqli_send_query(${2:object link}, ${3:string query});${4}
snippet mysqli_slave_query
	${1:bool }mysqli_slave_query(${2:object link}, ${3:string query});${4}
# php-src/ext/mysqli/mysqli_report.c
snippet mysqli_report
	${1:bool }mysqli_report(${2:int flags});${3}
# php-src/ext/oci8/oci8_interface.c
snippet oci_bind_array_by_name
	${1:bool }oci_bind_array_by_name(${2:resource stmt}, ${3:string name}, ${4:array &var}, ${5:int max_table_length [, }${6:int max_item_length [, }${7:int type ]]});${8}
snippet oci_bind_by_name
	${1:bool }oci_bind_by_name(${2:resource stmt}, ${3:string name}, ${4:mixed &var}, ${5:[, int maxlength [, int type]]});${6}
snippet oci_cancel
	${1:bool }oci_cancel(${2:resource stmt});${3}
snippet oci_close
	${1:bool }oci_close(${2:resource connection});${3}
snippet oci_collection_append
	${1:bool }oci_collection_append(${2:string value});${3}
snippet oci_collection_assign
	${1:bool }oci_collection_assign(${2:object from});${3}
snippet oci_collection_element_assign
	${1:bool }oci_collection_element_assign(${2:int index}, ${3:string val});${4}
snippet oci_collection_element_get
	${1:string }oci_collection_element_get(${2:int ndx});${3}
snippet oci_collection_max
	${1:int }oci_collection_max();${2}
snippet oci_collection_size
	${1:int }oci_collection_size();${2}
snippet oci_collection_trim
	${1:bool }oci_collection_trim(${2:int num});${3}
snippet oci_commit
	${1:bool }oci_commit(${2:resource connection});${3}
snippet oci_connect
	${1:resource }oci_connect(${2:string user}, ${3:string pass [, }${4:string db [, }${5:string charset [, }${6:int session_mode ]]});${7}
snippet oci_define_by_name
	${1:bool }oci_define_by_name(${2:resource stmt}, ${3:string name}, ${4:mixed &var [, }${5:int type]});${6}
snippet oci_error
	${1:array }oci_error(${2:[resource stmt|connection|global]});${3}
snippet oci_execute
	${1:bool }oci_execute(${2:resource stmt [, }${3:int mode]});${4}
snippet oci_fetch
	${1:bool }oci_fetch(${2:resource stmt});${3}
snippet oci_fetch_all
	${1:int }oci_fetch_all(${2:resource stmt}, ${3:array &output[, }${4:int skip[, }${5:int maxrows[, }${6:int flags]]]});${7}
snippet oci_fetch_array
	${1:array }oci_fetch_array(${2: resource stmt [, }${3:int mode ]});${4}
snippet oci_fetch_assoc
	${1:array }oci_fetch_assoc(${2: resource stmt });${3}
snippet oci_fetch_object
	${1:object }oci_fetch_object(${2: resource stmt });${3}
snippet oci_fetch_row
	${1:array }oci_fetch_row(${2: resource stmt });${3}
snippet oci_field_is_null
	${1:bool }oci_field_is_null(${2:resource stmt}, ${3:int col});${4}
snippet oci_field_name
	${1:string }oci_field_name(${2:resource stmt}, ${3:int col});${4}
snippet oci_field_precision
	${1:int }oci_field_precision(${2:resource stmt}, ${3:int col});${4}
snippet oci_field_scale
	${1:int }oci_field_scale(${2:resource stmt}, ${3:int col});${4}
snippet oci_field_size
	${1:int }oci_field_size(${2:resource stmt}, ${3:int col});${4}
snippet oci_field_type
	${1:mixed }oci_field_type(${2:resource stmt}, ${3:int col});${4}
snippet oci_field_type_raw
	${1:int }oci_field_type_raw(${2:resource stmt}, ${3:int col});${4}
snippet oci_free_collection
	${1:bool }oci_free_collection();${2}
snippet oci_free_descriptor
	${1:bool }oci_free_descriptor();${2}
snippet oci_free_statement
	${1:bool }oci_free_statement(${2:resource stmt});${3}
snippet oci_internal_debug
	${1:void }oci_internal_debug(${2:int onoff});${3}
snippet oci_lob_append
	${1:bool }oci_lob_append(${2: object lob });${3}
snippet oci_lob_close
	${1:bool }oci_lob_close();${2}
snippet oci_lob_copy
	${1:bool }oci_lob_copy(${2: object lob_to}, ${3:object lob_from [, }${4:int length ] });${5}
snippet oci_lob_eof
	${1:bool }oci_lob_eof();${2}
snippet oci_lob_erase
	${1:int }oci_lob_erase(${2: [ int offset [, }${3:int length ] ] });${4}
snippet oci_lob_export
	${1:bool }oci_lob_export(${2:[string filename [, }${3:int start [, }${4:int length]]]});${5}
snippet oci_lob_flush
	${1:bool }oci_lob_flush(${2: [ int flag ] });${3}
snippet oci_lob_import
	${1:bool }oci_lob_import(${2: string filename });${3}
snippet oci_lob_is_equal
	${1:bool }oci_lob_is_equal(${2: object lob1}, ${3:object lob2 });${4}
snippet oci_lob_load
	${1:string }oci_lob_load();${2}
snippet oci_lob_read
	${1:string }oci_lob_read(${2: int length });${3}
snippet oci_lob_rewind
	${1:bool }oci_lob_rewind();${2}
snippet oci_lob_save
	${1:bool }oci_lob_save(${2: string data [, }${3:int offset ]});${4}
snippet oci_lob_seek
	${1:bool }oci_lob_seek(${2: int offset [, }${3:int whence ]});${4}
snippet oci_lob_size
	${1:int }oci_lob_size();${2}
snippet oci_lob_tell
	${1:int }oci_lob_tell();${2}
snippet oci_lob_truncate
	${1:bool }oci_lob_truncate(${2: [ int length ]});${3}
snippet oci_lob_write
	${1:int }oci_lob_write(${2: string string [, }${3:int length ]});${4}
snippet oci_lob_write_temporary
	${1:bool }oci_lob_write_temporary(${2:string var [, }${3:int lob_type]});${4}
snippet oci_new_collection
	${1:object }oci_new_collection(${2:resource connection}, ${3:string tdo [, }${4:string schema]});${5}
snippet oci_new_connect
	${1:resource }oci_new_connect(${2:string user}, ${3:string pass [, }${4:string db]});${5}
snippet oci_new_cursor
	${1:resource }oci_new_cursor(${2:resource connection});${3}
snippet oci_new_descriptor
	${1:object }oci_new_descriptor(${2:resource connection [, }${3:int type]});${4}
snippet oci_num_fields
	${1:int }oci_num_fields(${2:resource stmt});${3}
snippet oci_num_rows
	${1:int }oci_num_rows(${2:resource stmt});${3}
snippet oci_parse
	${1:resource }oci_parse(${2:resource connection}, ${3:string query});${4}
snippet oci_password_change
	${1:bool }oci_password_change(${2:resource connection}, ${3:string username}, ${4:string old_password}, ${5:string new_password});${6}
snippet oci_pconnect
	${1:resource }oci_pconnect(${2:string user}, ${3:string pass [, }${4:string db [, }${5:string charset ]]});${6}
snippet oci_result
	${1:string }oci_result(${2:resource stmt}, ${3:mixed column});${4}
snippet oci_rollback
	${1:bool }oci_rollback(${2:resource connection});${3}
snippet oci_server_version
	${1:string }oci_server_version(${2:resource connection});${3}
snippet oci_set_prefetch
	${1:bool }oci_set_prefetch(${2:resource stmt}, ${3:int prefetch_rows});${4}
snippet oci_statement_type
	${1:string }oci_statement_type(${2:resource stmt});${3}
snippet ocifetchinto
	${1:int }ocifetchinto(${2:resource stmt}, ${3:array &output [, }${4:int mode]});${5}
snippet ocigetbufferinglob
	${1:bool }ocigetbufferinglob();${2}
snippet ocisetbufferinglob
	${1:bool }ocisetbufferinglob(${2: boolean flag });${3}
# php-src/ext/odbc/birdstep.c
snippet birdstep_autocommit
	${1:bool }birdstep_autocommit(${2:int index});${3}
snippet birdstep_close
	${1:bool }birdstep_close(${2:int id});${3}
snippet birdstep_commit
	${1:bool }birdstep_commit(${2:int index});${3}
snippet birdstep_connect
	${1:int }birdstep_connect(${2:string server}, ${3:string user}, ${4:string pass});${5}
snippet birdstep_exec
	${1:int }birdstep_exec(${2:int index}, ${3:string exec_str});${4}
snippet birdstep_fetch
	${1:bool }birdstep_fetch(${2:int index});${3}
snippet birdstep_fieldname
	${1:string }birdstep_fieldname(${2:int index}, ${3:int col});${4}
snippet birdstep_fieldnum
	${1:int }birdstep_fieldnum(${2:int index});${3}
snippet birdstep_freeresult
	${1:bool }birdstep_freeresult(${2:int index});${3}
snippet birdstep_off_autocommit
	${1:bool }birdstep_off_autocommit(${2:int index});${3}
snippet birdstep_result
	${1:mixed }birdstep_result(${2:int index}, ${3:int col});${4}
snippet birdstep_rollback
	${1:bool }birdstep_rollback(${2:int index});${3}
# php-src/ext/odbc/php_odbc.c
snippet odbc_autocommit
	${1:mixed }odbc_autocommit(${2:resource connection_id [, }${3:int OnOff]});${4}
snippet odbc_binmode
	${1:bool }odbc_binmode(${2:int result_id}, ${3:int mode});${4}
snippet odbc_close
	${1:void }odbc_close(${2:resource connection_id});${3}
snippet odbc_close_all
	${1:void }odbc_close_all(${2:void});${3}
snippet odbc_columnprivileges
	${1:resource }odbc_columnprivileges(${2:resource connection_id}, ${3:string catalog}, ${4:string schema}, ${5:string table}, ${6:string column});${7}
snippet odbc_columns
	${1:resource }odbc_columns(${2:resource connection_id [, }${3:string qualifier [, }${4:string owner [, }${5:string table_name [, }${6:string column_name]]]]});${7}
snippet odbc_commit
	${1:bool }odbc_commit(${2:resource connection_id});${3}
snippet odbc_connect
	${1:resource }odbc_connect(${2:string DSN}, ${3:string user}, ${4:string password [, }${5:int cursor_option]});${6}
snippet odbc_cursor
	${1:string }odbc_cursor(${2:resource result_id});${3}
snippet odbc_data_source
	${1:array }odbc_data_source(${2:resource connection_id}, ${3:int fetch_type});${4}
snippet odbc_error
	${1:string }odbc_error(${2:[resource connection_id]});${3}
snippet odbc_errormsg
	${1:string }odbc_errormsg(${2:[resource connection_id]});${3}
snippet odbc_exec
	${1:resource }odbc_exec(${2:resource connection_id}, ${3:string query [, }${4:int flags]});${5}
snippet odbc_execute
	${1:bool }odbc_execute(${2:resource result_id [, }${3:array parameters_array]});${4}
snippet odbc_fetch_array
	${1:array }odbc_fetch_array(${2:int result [, }${3:int rownumber]});${4}
snippet odbc_fetch_into
	${1:int }odbc_fetch_into(${2:resource result_id}, ${3:array result_array}, ${4:[, int rownumber]});${5}
snippet odbc_fetch_object
	${1:object }odbc_fetch_object(${2:int result [, }${3:int rownumber]});${4}
snippet odbc_fetch_row
	${1:bool }odbc_fetch_row(${2:resource result_id [, }${3:int row_number]});${4}
snippet odbc_field_len
	${1:int }odbc_field_len(${2:resource result_id}, ${3:int field_number});${4}
snippet odbc_field_name
	${1:string }odbc_field_name(${2:resource result_id}, ${3:int field_number});${4}
snippet odbc_field_num
	${1:int }odbc_field_num(${2:resource result_id}, ${3:string field_name});${4}
snippet odbc_field_scale
	${1:int }odbc_field_scale(${2:resource result_id}, ${3:int field_number});${4}
snippet odbc_field_type
	${1:string }odbc_field_type(${2:resource result_id}, ${3:int field_number});${4}
snippet odbc_foreignkeys
	${1:resource }odbc_foreignkeys(${2:resource connection_id}, ${3:string pk_qualifier}, ${4:string pk_owner}, ${5:string pk_table}, ${6:string fk_qualifier}, ${7:string fk_owner}, ${8:string fk_table});${9}
snippet odbc_free_result
	${1:bool }odbc_free_result(${2:resource result_id});${3}
snippet odbc_gettypeinfo
	${1:resource }odbc_gettypeinfo(${2:resource connection_id [, }${3:int data_type]});${4}
snippet odbc_longreadlen
	${1:bool }odbc_longreadlen(${2:int result_id}, ${3:int length});${4}
snippet odbc_next_result
	${1:bool }odbc_next_result(${2:resource result_id});${3}
snippet odbc_num_fields
	${1:int }odbc_num_fields(${2:resource result_id});${3}
snippet odbc_num_rows
	${1:int }odbc_num_rows(${2:resource result_id});${3}
snippet odbc_pconnect
	${1:resource }odbc_pconnect(${2:string DSN}, ${3:string user}, ${4:string password [, }${5:int cursor_option]});${6}
snippet odbc_prepare
	${1:resource }odbc_prepare(${2:resource connection_id}, ${3:string query});${4}
snippet odbc_primarykeys
	${1:resource }odbc_primarykeys(${2:resource connection_id}, ${3:string qualifier}, ${4:string owner}, ${5:string table});${6}
snippet odbc_procedurecolumns
	${1:resource }odbc_procedurecolumns(${2:resource connection_id [, }${3:string qualifier}, ${4:string owner}, ${5:string proc}, ${6:string column]});${7}
snippet odbc_procedures
	${1:resource }odbc_procedures(${2:resource connection_id [, }${3:string qualifier}, ${4:string owner}, ${5:string name]});${6}
snippet odbc_result
	${1:mixed }odbc_result(${2:resource result_id}, ${3:mixed field});${4}
snippet odbc_result_all
	${1:int }odbc_result_all(${2:resource result_id [, }${3:string format]});${4}
snippet odbc_rollback
	${1:bool }odbc_rollback(${2:resource connection_id});${3}
snippet odbc_setoption
	${1:bool }odbc_setoption(${2:resource conn_id|result_id}, ${3:int which}, ${4:int option}, ${5:int value});${6}
snippet odbc_specialcolumns
	${1:resource }odbc_specialcolumns(${2:resource connection_id}, ${3:int type}, ${4:string qualifier}, ${5:string owner}, ${6:string table}, ${7:int scope}, ${8:int nullable});${9}
snippet odbc_statistics
	${1:resource }odbc_statistics(${2:resource connection_id}, ${3:string qualifier}, ${4:string owner}, ${5:string name}, ${6:int unique}, ${7:int accuracy});${8}
snippet odbc_tableprivileges
	${1:resource }odbc_tableprivileges(${2:resource connection_id}, ${3:string qualifier}, ${4:string owner}, ${5:string name});${6}
snippet odbc_tables
	${1:resource }odbc_tables(${2:resource connection_id [, }${3:string qualifier [, }${4:string owner [, }${5:string name [, }${6:string table_types]]]]});${7}
snippet solid_fetch_prev
	${1:bool }solid_fetch_prev(${2:resource result_id});${3}
# php-src/ext/openssl/openssl.c
snippet openssl_csr_export
	${1:bool }openssl_csr_export(${2:resource csr}, ${3:string &out [, }${4:bool notext=true]});${5}
snippet openssl_csr_export_to_file
	${1:bool }openssl_csr_export_to_file(${2:resource csr}, ${3:string outfilename [, }${4:bool notext=true]});${5}
snippet openssl_csr_get_public_key
	${1:mixed }openssl_csr_get_public_key(${2:mixed csr});${3}
snippet openssl_csr_get_subject
	${1:mixed }openssl_csr_get_subject(${2:mixed csr});${3}
snippet openssl_csr_new
	${1:bool }openssl_csr_new(${2:array dn}, ${3:resource &privkey [, }${4:array configargs}, ${5:array extraattribs]});${6}
snippet openssl_csr_sign
	${1:resource }openssl_csr_sign(${2:mixed csr}, ${3:mixed x509}, ${4:mixed priv_key}, ${5:long days [, }${6:array config_args [, }${7:long serial]]});${8}
snippet openssl_error_string
	${1:mixed }openssl_error_string(${2:void});${3}
snippet openssl_open
	${1:bool }openssl_open(${2:string data}, ${3:&string opendata}, ${4:string ekey}, ${5:mixed privkey});${6}
snippet openssl_pkcs12_export
	${1:bool }openssl_pkcs12_export(${2:mixed x509}, ${3:string &out}, ${4:mixed priv_key}, ${5:string pass[, }${6:array args]});${7}
snippet openssl_pkcs12_export_to_file
	${1:bool }openssl_pkcs12_export_to_file(${2:mixed x509}, ${3:string filename}, ${4:mixed priv_key}, ${5:string pass[, }${6:array args]});${7}
snippet openssl_pkcs12_read
	${1:bool }openssl_pkcs12_read(${2:string PKCS12}, ${3:array &certs}, ${4:string pass});${5}
snippet openssl_pkcs7_decrypt
	${1:bool }openssl_pkcs7_decrypt(${2:string infilename}, ${3:string outfilename}, ${4:mixed recipcert [, }${5:mixed recipkey]});${6}
snippet openssl_pkcs7_encrypt
	${1:bool }openssl_pkcs7_encrypt(${2:string infile}, ${3:string outfile}, ${4:mixed recipcerts}, ${5:array headers [, }${6:long flags [, }${7:long cipher]]});${8}
snippet openssl_pkcs7_sign
	${1:bool }openssl_pkcs7_sign(${2:string infile}, ${3:string outfile}, ${4:mixed signcert}, ${5:mixed signkey}, ${6:array headers [, }${7:long flags [, }${8:string extracertsfilename]]});${9}
snippet openssl_pkcs7_verify
	${1:bool }openssl_pkcs7_verify(${2:string filename}, ${3:long flags [, }${4:string signerscerts [, }${5:array cainfo [, }${6:string extracerts [, }${7:string content]]]]});${8}
snippet openssl_pkey_export
	${1:bool }openssl_pkey_export(${2:mixed key}, ${3:&mixed out [, }${4:string passphrase [, }${5:array config_args]]});${6}
snippet openssl_pkey_export_to_file
	${1:bool }openssl_pkey_export_to_file(${2:mixed key}, ${3:string outfilename [, }${4:string passphrase}, ${5:array config_args});${6}
snippet openssl_pkey_free
	${1:void }openssl_pkey_free(${2:int key});${3}
snippet openssl_pkey_get_details
	${1:resource }openssl_pkey_get_details(${2:resource key});${3}
snippet openssl_pkey_get_private
	${1:int }openssl_pkey_get_private(${2:string key [, }${3:string passphrase]});${4}
snippet openssl_pkey_get_public
	${1:int }openssl_pkey_get_public(${2:mixed cert});${3}
snippet openssl_pkey_new
	${1:resource }openssl_pkey_new(${2:[array configargs]});${3}
snippet openssl_private_decrypt
	${1:bool }openssl_private_decrypt(${2:string data}, ${3:string decrypted}, ${4:mixed key [, }${5:int padding]});${6}
snippet openssl_private_encrypt
	${1:bool }openssl_private_encrypt(${2:string data}, ${3:string crypted}, ${4:mixed key [, }${5:int padding]});${6}
snippet openssl_public_decrypt
	${1:bool }openssl_public_decrypt(${2:string data}, ${3:string crypted}, ${4:resource key [, }${5:int padding]});${6}
snippet openssl_public_encrypt
	${1:bool }openssl_public_encrypt(${2:string data}, ${3:string crypted}, ${4:mixed key [, }${5:int padding]});${6}
snippet openssl_seal
	${1:int }openssl_seal(${2:string data}, ${3:&string sealdata}, ${4:&array ekeys}, ${5:array pubkeys});${6}
snippet openssl_sign
	${1:bool }openssl_sign(${2:string data}, ${3:&string signature}, ${4:mixed key[, }${5:int signature_alg]});${6}
snippet openssl_verify
	${1:int }openssl_verify(${2:string data}, ${3:string signature}, ${4:mixed key [, }${5:int signature_algo]});${6}
snippet openssl_x509_check_private_key
	${1:bool }openssl_x509_check_private_key(${2:mixed cert}, ${3:mixed key});${4}
snippet openssl_x509_checkpurpose
	${1:int }openssl_x509_checkpurpose(${2:mixed x509cert}, ${3:int purpose}, ${4:array cainfo [, }${5:string untrustedfile]});${6}
snippet openssl_x509_export
	${1:bool }openssl_x509_export(${2:mixed x509}, ${3:string &out [, }${4:bool notext = true]});${5}
snippet openssl_x509_export_to_file
	${1:bool }openssl_x509_export_to_file(${2:mixed x509}, ${3:string outfilename [, }${4:bool notext = true]});${5}
snippet openssl_x509_free
	${1:void }openssl_x509_free(${2:resource x509});${3}
snippet openssl_x509_parse
	${1:array }openssl_x509_parse(${2:mixed x509 [, }${3:bool shortnames=true]});${4}
snippet openssl_x509_read
	${1:resource }openssl_x509_read(${2:mixed cert});${3}
# php-src/ext/pcntl/pcntl.c
snippet pcntl_alarm
	${1:int }pcntl_alarm(${2:int seconds});${3}
snippet pcntl_exec
	${1:bool }pcntl_exec(${2:string path [, }${3:array args [, }${4:array envs]]});${5}
snippet pcntl_fork
	${1:int }pcntl_fork(${2:void});${3}
snippet pcntl_getpriority
	${1:int }pcntl_getpriority(${2:[int pid [, }${3:int process_identifier]]});${4}
snippet pcntl_setpriority
	${1:bool }pcntl_setpriority(${2:int priority [, }${3:int pid [, }${4:int process_identifier]]});${5}
snippet pcntl_signal
	${1:bool }pcntl_signal(${2:int signo}, ${3:callback handle [, }${4:bool restart_syscalls]});${5}
snippet pcntl_wait
	${1:int }pcntl_wait(${2:int &status});${3}
snippet pcntl_waitpid
	${1:int }pcntl_waitpid(${2:int pid}, ${3:int &status}, ${4:int options});${5}
snippet pcntl_wexitstatus
	${1:int }pcntl_wexitstatus(${2:int status});${3}
snippet pcntl_wifexited
	${1:bool }pcntl_wifexited(${2:int status});${3}
snippet pcntl_wifsignaled
	${1:bool }pcntl_wifsignaled(${2:int status});${3}
snippet pcntl_wifstopped
	${1:bool }pcntl_wifstopped(${2:int status});${3}
snippet pcntl_wstopsig
	${1:int }pcntl_wstopsig(${2:int status});${3}
snippet pcntl_wtermsig
	${1:int }pcntl_wtermsig(${2:int status});${3}
# php-src/ext/pcre/php_pcre.c
snippet preg_grep
	${1:array }preg_grep(${2:string regex}, ${3:array input [, }${4:int flags]});${5}
snippet preg_last_error
	${1:int }preg_last_error();${2}
snippet preg_match
	${1:int }preg_match(${2:string pattern}, ${3:string subject [, }${4:array subpatterns [, }${5:int flags [, }${6:int offset]]]});${7}
snippet preg_match_all
	${1:int }preg_match_all(${2:string pattern}, ${3:string subject}, ${4:array subpatterns [, }${5:int flags [, }${6:int offset]]});${7}
snippet preg_quote
	${1:string }preg_quote(${2:string str [, }${3:string delim_char]});${4}
snippet preg_replace
	${1:string }preg_replace(${2:mixed regex}, ${3:mixed replace}, ${4:mixed subject [, }${5:int limit [, }${6:count]]});${7}
snippet preg_replace_callback
	${1:string }preg_replace_callback(${2:mixed regex}, ${3:mixed callback}, ${4:mixed subject [, }${5:int limit [, }${6:count]]});${7}
snippet preg_split
	${1:array }preg_split(${2:string pattern}, ${3:string subject [, }${4:int limit [, }${5:int flags]]});${6}
# php-src/ext/pdo/pdo.c
snippet pdo_drivers
	${1:array }pdo_drivers();${2}
# php-src/ext/pdo/pdo_dbh.c
snippet PDO::__construct
	${1:void }PDO::__construct(${2:string dsn}, ${3:string username}, ${4:string passwd [, }${5:array options]});${6}
snippet PDO::__sleep
	${1:int }PDO::__sleep();${2}
snippet PDO::__wakeup
	${1:int }PDO::__wakeup();${2}
snippet PDO::beginTransaction
	${1:bool }PDO::beginTransaction();${2}
snippet PDO::commit
	${1:bool }PDO::commit();${2}
snippet PDO::errorCode
	${1:string }PDO::errorCode();${2}
snippet PDO::errorInfo
	${1:int }PDO::errorInfo();${2}
snippet PDO::exec
	${1:long }PDO::exec(${2:string query});${3}
snippet PDO::getAttribute
	${1:mixed }PDO::getAttribute(${2:long attribute});${3}
snippet PDO::lastInsertId
	${1:string }PDO::lastInsertId(${2:[string seqname]});${3}
snippet PDO::prepare
	${1:object }PDO::prepare(${2:string statment [, }${3:array options]});${4}
snippet PDO::query
	${1:object }PDO::query(string sql [, PDOStatement::setFetchMode();${2}
snippet PDO::quote
	${1:string }PDO::quote(${2:string string [, }${3:int paramtype]});${4}
snippet PDO::rollBack
	${1:bool }PDO::rollBack();${2}
snippet PDO::setAttribute
	${1:bool }PDO::setAttribute(${2:long attribute}, ${3:mixed value});${4}
# php-src/ext/pdo/pdo_stmt.c
snippet PDOStatement::__sleep
	${1:int }PDOStatement::__sleep();${2}
snippet PDOStatement::__wakeup
	${1:int }PDOStatement::__wakeup();${2}
snippet PDOStatement::bindColumn
	${1:bool }PDOStatement::bindColumn(${2:mixed $column}, ${3:mixed &$param [, }${4:int $type [, }${5:int $maxlen [, }${6:mixed $driverdata]]]});${7}
snippet PDOStatement::bindParam
	${1:bool }PDOStatement::bindParam(${2:mixed $paramno}, ${3:mixed &$param [, }${4:int $type [, }${5:int $maxlen [, }${6:mixed $driverdata]]]});${7}
snippet PDOStatement::bindValue
	${1:bool }PDOStatement::bindValue(${2:mixed $paramno}, ${3:mixed $param [, }${4:int $type ]});${5}
snippet PDOStatement::closeCursor
	${1:bool }PDOStatement::closeCursor();${2}
snippet PDOStatement::columnCount
	${1:int }PDOStatement::columnCount();${2}
snippet PDOStatement::debugDumpParams
	${1:void }PDOStatement::debugDumpParams();${2}
snippet PDOStatement::errorCode
	${1:string }PDOStatement::errorCode();${2}
snippet PDOStatement::errorInfo
	${1:array }PDOStatement::errorInfo();${2}
snippet PDOStatement::execute
	${1:bool }PDOStatement::execute(${2:[array $bound_input_params]});${3}
snippet PDOStatement::fetch
	${1:mixed }PDOStatement::fetch(${2:[int $how = PDO_FETCH_BOTH [, }${3:int $orientation [, }${4:int $offset]]]});${5}
snippet PDOStatement::fetchAll
	${1:array }PDOStatement::fetchAll(${2:[int $how = PDO_FETCH_BOTH [, }${3:string class_name [, }${4:NULL|array ctor_args]]]});${5}
snippet PDOStatement::fetchColumn
	${1:string }PDOStatement::fetchColumn(${2:[int column_number]});${3}
snippet PDOStatement::fetchObject
	${1:mixed }PDOStatement::fetchObject(${2:string class_name [, }${3:NULL|array ctor_args]});${4}
snippet PDOStatement::getAttribute
	${1:mixed }PDOStatement::getAttribute(${2:long attribute});${3}
snippet PDOStatement::getColumnMeta
	${1:array }PDOStatement::getColumnMeta(${2:int $column});${3}
snippet PDOStatement::nextRowset
	${1:bool }PDOStatement::nextRowset();${2}
snippet PDOStatement::rowCount
	${1:int }PDOStatement::rowCount();${2}
snippet PDOStatement::setAttribute
	${1:bool }PDOStatement::setAttribute(${2:long attribute}, ${3:mixed value});${4}
snippet PDOStatement::setFetchMode
	${1:bool }PDOStatement::setFetchMode(${2:int mode [mixed* params]});${3}
# php-src/ext/pgsql/pgsql.c
snippet pg_affected_rows
	${1:int }pg_affected_rows(${2:resource result});${3}
snippet pg_cancel_query
	${1:bool }pg_cancel_query(${2:resource connection});${3}
snippet pg_client_encoding
	${1:string }pg_client_encoding(${2:[resource connection]});${3}
snippet pg_close
	${1:bool }pg_close(${2:[resource connection]});${3}
snippet pg_connect
	${1:resource }pg_connect(${2:string connection_string[, }${3:int connect_type] | [string host}, ${4:string port [, }${5:string options [, }${6:string tty,]]]}${7: string database});${8}
snippet pg_connection_busy
	${1:bool }pg_connection_busy(${2:resource connection});${3}
snippet pg_connection_reset
	${1:bool }pg_connection_reset(${2:resource connection});${3}
snippet pg_connection_status
	${1:int }pg_connection_status(${2:resource connnection});${3}
snippet pg_convert
	${1:array }pg_convert(${2:resource db}, ${3:string table}, ${4:array values[, }${5:int options]});${6}
snippet pg_copy_from
	${1:bool }pg_copy_from(${2:resource connection}, ${3:string table_name,} ${4:array rows [, }${5:string delimiter [, }${6:string null_as]]});${7}
snippet pg_copy_to
	${1:array }pg_copy_to(${2:resource connection}, ${3:string table_name [, }${4:string delimiter [, }${5:string null_as]]});${6}
snippet pg_dbname
	${1:string }pg_dbname(${2:[resource connection]});${3}
snippet pg_delete
	${1:mixed }pg_delete(${2:resource db}, ${3:string table}, ${4:array ids[, }${5:int options]});${6}
snippet pg_end_copy
	${1:bool }pg_end_copy(${2:[resource connection]});${3}
snippet pg_escape_bytea
	${1:string }pg_escape_bytea(${2:[resource connection,] }${3:string data});${4}
snippet pg_escape_string
	${1:string }pg_escape_string(${2:[resource connection,] }${3:string data});${4}
snippet pg_execute
	${1:resource }pg_execute(${2:[resource connection,] }${3:string stmtname}, ${4:array params});${5}
snippet pg_fetch_all
	${1:array }pg_fetch_all(${2:resource result});${3}
snippet pg_fetch_all_columns
	${1:array }pg_fetch_all_columns(${2:resource result [, }${3:int column_number]});${4}
snippet pg_fetch_array
	${1:array }pg_fetch_array(${2:resource result [, }${3:int row [, }${4:int result_type]]});${5}
snippet pg_fetch_assoc
	${1:array }pg_fetch_assoc(${2:resource result [, }${3:int row]});${4}
snippet pg_fetch_object
	${1:object }pg_fetch_object(${2:resource result [, }${3:int row [, }${4:string class_name [, NULL|array ctor_params]]]});${5}
snippet pg_fetch_result
	${1:mixed }pg_fetch_result(${2:resource result}, ${3:[int row_number,] }${4:mixed field_name});${5}
snippet pg_fetch_row
	${1:array }pg_fetch_row(${2:resource result [, }${3:int row [, }${4:int result_type]]});${5}
snippet pg_field_is_null
	${1:int }pg_field_is_null(${2:resource result}, ${3:[int row,] }${4:mixed field_name_or_number});${5}
snippet pg_field_name
	${1:string }pg_field_name(${2:resource result}, ${3:int field_number});${4}
snippet pg_field_num
	${1:int }pg_field_num(${2:resource result}, ${3:string field_name});${4}
snippet pg_field_prtlen
	${1:int }pg_field_prtlen(${2:resource result}, ${3:[int row,] }${4:mixed field_name_or_number});${5}
snippet pg_field_size
	${1:int }pg_field_size(${2:resource result}, ${3:int field_number});${4}
snippet pg_field_table
	${1:mixed }pg_field_table(${2:resource result}, ${3:int field_number[, }${4:bool oid_only]});${5}
snippet pg_field_type
	${1:string }pg_field_type(${2:resource result}, ${3:int field_number});${4}
snippet pg_field_type_oid
	${1:string }pg_field_type_oid(${2:resource result}, ${3:int field_number});${4}
snippet pg_free_result
	${1:bool }pg_free_result(${2:resource result});${3}
snippet pg_get_notify
	${1:array }pg_get_notify(${2:[resource connection[, }${3:result_type]]});${4}
snippet pg_get_pid
	${1:int }pg_get_pid(${2:[resource connection});${3}
snippet pg_get_result
	${1:resource }pg_get_result(${2:resource connection});${3}
snippet pg_host
	${1:string }pg_host(${2:[resource connection]});${3}
snippet pg_insert
	${1:mixed }pg_insert(${2:resource db}, ${3:string table}, ${4:array values[, }${5:int options]});${6}
snippet pg_last_error
	${1:string }pg_last_error(${2:[resource connection]});${3}
snippet pg_last_notice
	${1:string }pg_last_notice(${2:resource connection});${3}
snippet pg_last_oid
	${1:string }pg_last_oid(${2:resource result});${3}
snippet pg_lo_close
	${1:bool }pg_lo_close(${2:resource large_object});${3}
snippet pg_lo_create
	${1:int }pg_lo_create(${2:[resource connection]});${3}
snippet pg_lo_export
	${1:bool }pg_lo_export(${2:[resource connection, ] }${3:int objoid}, ${4:string filename});${5}
snippet pg_lo_import
	${1:int }pg_lo_import(${2:[resource connection, ] }${3:string filename});${4}
snippet pg_lo_open
	${1:resource }pg_lo_open(${2:[resource connection,] }${3:int large_object_oid}, ${4:string mode});${5}
snippet pg_lo_read
	${1:string }pg_lo_read(${2:resource large_object [, }${3:int len]});${4}
snippet pg_lo_read_all
	${1:int }pg_lo_read_all(${2:resource large_object});${3}
snippet pg_lo_seek
	${1:bool }pg_lo_seek(${2:resource large_object}, ${3:int offset [, }${4:int whence]});${5}
snippet pg_lo_tell
	${1:int }pg_lo_tell(${2:resource large_object});${3}
snippet pg_lo_unlink
	${1:bool }pg_lo_unlink(${2:[resource connection,] }${3:string large_object_oid});${4}
snippet pg_lo_write
	${1:int }pg_lo_write(${2:resource large_object}, ${3:string buf [, }${4:int len]});${5}
snippet pg_meta_data
	${1:array }pg_meta_data(${2:resource db}, ${3:string table});${4}
snippet pg_num_fields
	${1:int }pg_num_fields(${2:resource result});${3}
snippet pg_num_rows
	${1:int }pg_num_rows(${2:resource result});${3}
snippet pg_options
	${1:string }pg_options(${2:[resource connection]});${3}
snippet pg_parameter_status
	${1:string|false }pg_parameter_status(${2:[resource connection,] }${3:string param_name});${4}
snippet pg_pconnect
	${1:resource }pg_pconnect(${2:string connection_string | [string host}, ${3:string port [, }${4:string options [, }${5:string tty,]]] }${6:string database});${7}
snippet pg_ping
	${1:bool }pg_ping(${2:[resource connection]});${3}
snippet pg_port
	${1:int }pg_port(${2:[resource connection]});${3}
snippet pg_prepare
	${1:resource }pg_prepare(${2:[resource connection,] }${3:string stmtname}, ${4:string query});${5}
snippet pg_put_line
	${1:bool }pg_put_line(${2:[resource connection,] }${3:string query});${4}
snippet pg_query
	${1:resource }pg_query(${2:[resource connection,] }${3:string query});${4}
snippet pg_query_params
	${1:resource }pg_query_params(${2:[resource connection,] }${3:string query}, ${4:array params});${5}
snippet pg_result_error
	${1:string }pg_result_error(${2:resource result});${3}
snippet pg_result_error_field
	${1:string }pg_result_error_field(${2:resource result}, ${3:int fieldcode});${4}
snippet pg_result_seek
	${1:bool }pg_result_seek(${2:resource result}, ${3:int offset});${4}
snippet pg_result_status
	${1:mixed }pg_result_status(${2:resource result[, }${3:long result_type]});${4}
snippet pg_select
	${1:mixed }pg_select(${2:resource db}, ${3:string table}, ${4:array ids[, }${5:int options]});${6}
snippet pg_send_execute
	${1:bool }pg_send_execute(${2:resource connection}, ${3:string stmtname}, ${4:array params});${5}
snippet pg_send_prepare
	${1:bool }pg_send_prepare(${2:resource connection}, ${3:string stmtname}, ${4:string query});${5}
snippet pg_send_query
	${1:bool }pg_send_query(${2:resource connection}, ${3:string query});${4}
snippet pg_send_query_params
	${1:bool }pg_send_query_params(${2:resource connection}, ${3:string query});${4}
snippet pg_set_client_encoding
	${1:int }pg_set_client_encoding(${2:[resource connection,] }${3:string encoding});${4}
snippet pg_set_error_verbosity
	${1:int }pg_set_error_verbosity(${2:[resource connection,] }${3:int verbosity});${4}
snippet pg_trace
	${1:bool }pg_trace(${2:string filename [, }${3:string mode [, }${4:resource connection]]});${5}
snippet pg_transaction_status
	${1:int }pg_transaction_status(${2:resource connnection});${3}
snippet pg_tty
	${1:string }pg_tty(${2:[resource connection]});${3}
snippet pg_unescape_bytea
	${1:string }pg_unescape_bytea(${2:string data});${3}
snippet pg_untrace
	${1:bool }pg_untrace(${2:[resource connection]});${3}
snippet pg_update
	${1:mixed }pg_update(${2:resource db}, ${3:string table}, ${4:array fields}, ${5:array ids[, }${6:int options]});${7}
snippet pg_version
	${1:array }pg_version(${2:[resource connection]});${3}
# php-src/ext/posix/posix.c
snippet posix_access
	${1:bool }posix_access(${2:string file [, }${3:int mode]});${4}
snippet posix_ctermid
	${1:string }posix_ctermid(${2:void});${3}
snippet posix_get_last_error
	${1:int }posix_get_last_error(${2:void});${3}
snippet posix_getcwd
	${1:string }posix_getcwd(${2:void});${3}
snippet posix_getegid
	${1:int }posix_getegid(${2:void});${3}
snippet posix_geteuid
	${1:int }posix_geteuid(${2:void});${3}
snippet posix_getgid
	${1:int }posix_getgid(${2:void});${3}
snippet posix_getgrgid
	${1:array }posix_getgrgid(${2:long gid});${3}
snippet posix_getgrnam
	${1:array }posix_getgrnam(${2:string groupname});${3}
snippet posix_getgroups
	${1:array }posix_getgroups(${2:void});${3}
snippet posix_getlogin
	${1:string }posix_getlogin(${2:void});${3}
snippet posix_getpgid
	${1:int }posix_getpgid(${2:void});${3}
snippet posix_getpgrp
	${1:int }posix_getpgrp(${2:void});${3}
snippet posix_getpid
	${1:int }posix_getpid(${2:void});${3}
snippet posix_getppid
	${1:int }posix_getppid(${2:void});${3}
snippet posix_getpwnam
	${1:array }posix_getpwnam(${2:string groupname});${3}
snippet posix_getpwuid
	${1:array }posix_getpwuid(${2:long uid});${3}
snippet posix_getrlimit
	${1:array }posix_getrlimit(${2:void});${3}
snippet posix_getsid
	${1:int }posix_getsid(${2:void});${3}
snippet posix_getuid
	${1:int }posix_getuid(${2:void});${3}
snippet posix_initgroups
	${1:bool }posix_initgroups(${2:string name}, ${3:int base_group_id});${4}
snippet posix_isatty
	${1:bool }posix_isatty(${2:int fd});${3}
snippet posix_kill
	${1:bool }posix_kill(${2:int pid}, ${3:int sig});${4}
snippet posix_mkfifo
	${1:bool }posix_mkfifo(${2:string pathname}, ${3:int mode});${4}
snippet posix_mknod
	${1:bool }posix_mknod(${2:string pathname}, ${3:int mode [, }${4:int major [, }${5:int minor]]});${6}
snippet posix_setegid
	${1:bool }posix_setegid(${2:int uid});${3}
snippet posix_seteuid
	${1:bool }posix_seteuid(${2:int uid});${3}
snippet posix_setgid
	${1:bool }posix_setgid(${2:int uid});${3}
snippet posix_setpgid
	${1:bool }posix_setpgid(${2:int pid}, ${3:int pgid});${4}
snippet posix_setsid
	${1:int }posix_setsid(${2:void});${3}
snippet posix_setuid
	${1:bool }posix_setuid(${2:int uid});${3}
snippet posix_strerror
	${1:string }posix_strerror(${2:int errno});${3}
snippet posix_times
	${1:array }posix_times(${2:void});${3}
snippet posix_ttyname
	${1:string }posix_ttyname(${2:int fd});${3}
snippet posix_uname
	${1:array }posix_uname(${2:void});${3}
# php-src/ext/pspell/pspell.c
snippet pspell_add_to_personal
	${1:bool }pspell_add_to_personal(${2:int pspell}, ${3:string word});${4}
snippet pspell_add_to_session
	${1:bool }pspell_add_to_session(${2:int pspell}, ${3:string word});${4}
snippet pspell_check
	${1:bool }pspell_check(${2:int pspell}, ${3:string word});${4}
snippet pspell_clear_session
	${1:bool }pspell_clear_session(${2:int pspell});${3}
snippet pspell_config_create
	${1:int }pspell_config_create(${2:string language [,} ${3:string spelling [, }${4:string jargon [, }${5:string encoding]]]});${6}
snippet pspell_config_data_dir
	${1:bool }pspell_config_data_dir(${2:int conf}, ${3:string directory});${4}
snippet pspell_config_dict_dir
	${1:bool }pspell_config_dict_dir(${2:int conf}, ${3:string directory});${4}
snippet pspell_config_ignore
	${1:bool }pspell_config_ignore(${2:int conf}, ${3:int ignore});${4}
snippet pspell_config_mode
	${1:bool }pspell_config_mode(${2:int conf}, ${3:long mode});${4}
snippet pspell_config_personal
	${1:bool }pspell_config_personal(${2:int conf}, ${3:string personal});${4}
snippet pspell_config_repl
	${1:bool }pspell_config_repl(${2:int conf}, ${3:string repl});${4}
snippet pspell_config_runtogether
	${1:bool }pspell_config_runtogether(${2:int conf}, ${3:bool runtogether});${4}
snippet pspell_config_save_repl
	${1:bool }pspell_config_save_repl(${2:int conf}, ${3:bool save});${4}
snippet pspell_new
	${1:int }pspell_new(${2:string language [, }${3:string spelling [, }${4:string jargon [, }${5:string encoding [, }${6:int mode]]]]});${7}
snippet pspell_new_config
	${1:int }pspell_new_config(${2:int config});${3}
snippet pspell_new_personal
	${1:int }pspell_new_personal(${2:string personal}, ${3:string language [, }${4:string spelling [, }${5:string jargon [, }${6:string encoding [, }${7:int mode]]]]});${8}
snippet pspell_save_wordlist
	${1:bool }pspell_save_wordlist(${2:int pspell});${3}
snippet pspell_store_replacement
	${1:bool }pspell_store_replacement(${2:int pspell}, ${3:string misspell}, ${4:string correct});${5}
snippet pspell_suggest
	${1:array }pspell_suggest(${2:int pspell}, ${3:string word});${4}
# php-src/ext/readline/readline.c
snippet readline
	${1:string }readline(${2:[string prompt]});${3}
snippet readline_add_history
	${1:bool }readline_add_history(${2:[string prompt]});${3}
snippet readline_callback_handler_install
	${1:void }readline_callback_handler_install(${2:string prompt}, ${3:mixed callback});${4}
snippet readline_callback_handler_remove
	${1:bool }readline_callback_handler_remove();${2}
snippet readline_callback_read_char
	${1:void }readline_callback_read_char();${2}
snippet readline_clear_history
	${1:bool }readline_clear_history(${2:void});${3}
snippet readline_completion_function
	${1:bool }readline_completion_function(${2:string funcname});${3}
snippet readline_info
	${1:mixed }readline_info(${2:[string varname] [, }${3:string newvalue]});${4}
snippet readline_list_history
	${1:array }readline_list_history(${2:void});${3}
snippet readline_on_new_line
	${1:void }readline_on_new_line(${2:void});${3}
snippet readline_read_history
	${1:bool }readline_read_history(${2:[string filename] [, }${3:int from] [,}${4:int to]});${5}
snippet readline_redisplay
	${1:void }readline_redisplay(${2:void});${3}
snippet readline_write_history
	${1:bool }readline_write_history(${2:[string filename]});${3}
# php-src/ext/recode/recode.c
snippet recode_file
	${1:bool }recode_file(${2:string request}, ${3:resource input}, ${4:resource output});${5}
snippet recode_string
	${1:string }recode_string(${2:string request}, ${3:string str});${4}
# php-src/ext/reflection/php_reflection.c
snippet ReflectionClass::getParentClass
	${1:public ReflectionClass }ReflectionClass::getParentClass();${2}
snippet ReflectionMethod::getDeclaringClass
	${1:public ReflectionClass }ReflectionMethod::getDeclaringClass();${2}
snippet ReflectionMethod::getPrototype
	${1:public ReflectionClass }ReflectionMethod::getPrototype();${2}
snippet ReflectionProperty::getDeclaringClass
	${1:public ReflectionClass }ReflectionProperty::getDeclaringClass();${2}
snippet ReflectionClass::getInterfaces
	${1:public ReflectionClass[] }ReflectionClass::getInterfaces();${2}
snippet ReflectionExtension::getClasses
	${1:public ReflectionClass[] }ReflectionExtension::getClasses();${2}
snippet ReflectionParameter::getClass
	${1:public ReflectionClass|NULL }ReflectionParameter::getClass();${2}
snippet ReflectionParameter::getDeclaringClass
	${1:public ReflectionClass|NULL }ReflectionParameter::getDeclaringClass();${2}
snippet ReflectionClass::getExtension
	${1:public ReflectionExtension|NULL }ReflectionClass::getExtension();${2}
snippet ReflectionFunction::getExtension
	${1:public ReflectionExtension|NULL }ReflectionFunction::getExtension();${2}
snippet ReflectionParameter::getDeclaringFunction
	${1:public ReflectionFunction }ReflectionParameter::getDeclaringFunction();${2}
snippet ReflectionExtension::getFunctions
	${1:public ReflectionFunction[] }ReflectionExtension::getFunctions();${2}
snippet ReflectionClass::getConstructor
	${1:public ReflectionMethod }ReflectionClass::getConstructor();${2}
snippet ReflectionClass::getMethod
	${1:public ReflectionMethod }ReflectionClass::getMethod(${2:string name});${3}
snippet ReflectionMethod
	${1:public ReflectionMethod[] }ReflectionClass::getMethods(${2:[long $filter]});${3}
snippet ReflectionFunction::getParameters
	${1:public ReflectionParameter[] }ReflectionFunction::getParameters();${2}
snippet ReflectionClass::getProperty
	${1:public }ReflectionClass::getProperty(${2:string name});${3}
snippet ReflectionClass::getProperties
	${1:public }ReflectionClass::getProperties(${2:[long $filter]});${3}
snippet ReflectionClass::getInterfaceNames
	${1:public String[] }ReflectionClass::getInterfaceNames();${2}
snippet ReflectionClass::getConstants
	${1:public array }ReflectionClass::getConstants();${2}
snippet ReflectionClass::getDefaultProperties
	${1:public array }ReflectionClass::getDefaultProperties();${2}
snippet ReflectionClass::getStaticProperties
	${1:public array }ReflectionClass::getStaticProperties();${2}
snippet ReflectionExtension::getClassNames
	${1:public array }ReflectionExtension::getClassNames();${2}
snippet ReflectionExtension::getConstants
	${1:public array }ReflectionExtension::getConstants();${2}
snippet ReflectionExtension::getDependencies
	${1:public array }ReflectionExtension::getDependencies();${2}
snippet ReflectionExtension::getINIEntries
	${1:public array }ReflectionExtension::getINIEntries();${2}
snippet ReflectionFunction::getStaticVariables
	${1:public array }ReflectionFunction::getStaticVariables();${2}
snippet ReflectionClass::hasConstant
	${1:public bool }ReflectionClass::hasConstant(${2:string name});${3}
snippet ReflectionClass::hasMethod
	${1:public bool }ReflectionClass::hasMethod(${2:string name});${3}
snippet ReflectionClass::hasProperty
	${1:public bool }ReflectionClass::hasProperty(${2:string name});${3}
snippet ReflectionClass::implementsInterface
	${1:public bool }ReflectionClass::implementsInterface(${2:string|ReflectionClass interface_name});${3}
snippet ReflectionClass::isAbstract
	${1:public bool }ReflectionClass::isAbstract();${2}
snippet ReflectionClass::isFinal
	${1:public bool }ReflectionClass::isFinal();${2}
snippet ReflectionClass::isInstance
	${1:public bool }ReflectionClass::isInstance(${2:stdclass object});${3}
snippet ReflectionClass::isInstantiable
	${1:public bool }ReflectionClass::isInstantiable();${2}
snippet ReflectionClass::isInterface
	${1:public bool }ReflectionClass::isInterface();${2}
snippet ReflectionClass::isInternal
	${1:public bool }ReflectionClass::isInternal();${2}
snippet ReflectionClass::isIterateable
	${1:public bool }ReflectionClass::isIterateable();${2}
snippet ReflectionClass::isSubclassOf
	${1:public bool }ReflectionClass::isSubclassOf(${2:string|ReflectionClass class});${3}
snippet ReflectionClass::isUserDefined
	${1:public bool }ReflectionClass::isUserDefined();${2}
snippet ReflectionFunction::getNumberOfParameters
	${1:public bool }ReflectionFunction::getNumberOfParameters();${2}
snippet ReflectionFunction::getNumberOfRequiredParameters
	${1:public bool }ReflectionFunction::getNumberOfRequiredParameters();${2}
snippet ReflectionFunction::isDeprecated
	${1:public bool }ReflectionFunction::isDeprecated();${2}
snippet ReflectionFunction::isDisabled
	${1:public bool }ReflectionFunction::isDisabled();${2}
snippet ReflectionFunction::isInternal
	${1:public bool }ReflectionFunction::isInternal();${2}
snippet ReflectionFunction::isUserDefined
	${1:public bool }ReflectionFunction::isUserDefined();${2}
snippet ReflectionFunction::returnsReference
	${1:public bool }ReflectionFunction::returnsReference();${2}
snippet ReflectionMethod::isAbstract
	${1:public bool }ReflectionMethod::isAbstract();${2}
snippet ReflectionMethod::isConstructor
	${1:public bool }ReflectionMethod::isConstructor();${2}
snippet ReflectionMethod::isDestructor
	${1:public bool }ReflectionMethod::isDestructor();${2}
snippet ReflectionMethod::isFinal
	${1:public bool }ReflectionMethod::isFinal();${2}
snippet ReflectionMethod::isPrivate
	${1:public bool }ReflectionMethod::isPrivate();${2}
snippet ReflectionMethod::isProtected
	${1:public bool }ReflectionMethod::isProtected();${2}
snippet ReflectionMethod::isPublic
	${1:public bool }ReflectionMethod::isPublic();${2}
snippet ReflectionMethod::isStatic
	${1:public bool }ReflectionMethod::isStatic();${2}
snippet ReflectionParameter::allowsNull
	${1:public bool }ReflectionParameter::allowsNull();${2}
snippet ReflectionParameter::getDefaultValue
	${1:public bool }ReflectionParameter::getDefaultValue();${2}
snippet ReflectionParameter::getPosition
	${1:public bool }ReflectionParameter::getPosition();${2}
snippet ReflectionParameter::isArray
	${1:public bool }ReflectionParameter::isArray();${2}
snippet ReflectionParameter::isDefaultValueAvailable
	${1:public bool }ReflectionParameter::isDefaultValueAvailable();${2}
snippet ReflectionParameter::isOptional
	${1:public bool }ReflectionParameter::isOptional();${2}
snippet ReflectionParameter::isPassedByReference
	${1:public bool }ReflectionParameter::isPassedByReference();${2}
snippet ReflectionProperty::isDefault
	${1:public bool }ReflectionProperty::isDefault();${2}
snippet ReflectionProperty::isPrivate
	${1:public bool }ReflectionProperty::isPrivate();${2}
snippet ReflectionProperty::isProtected
	${1:public bool }ReflectionProperty::isProtected();${2}
snippet ReflectionProperty::isPublic
	${1:public bool }ReflectionProperty::isPublic();${2}
snippet ReflectionProperty::isStatic
	${1:public bool }ReflectionProperty::isStatic();${2}
snippet ReflectionClass::getEndLine
	${1:public int }ReflectionClass::getEndLine();${2}
snippet ReflectionClass::getModifiers
	${1:public int }ReflectionClass::getModifiers();${2}
snippet ReflectionClass::getStartLine
	${1:public int }ReflectionClass::getStartLine();${2}
snippet ReflectionFunction::getEndLine
	${1:public int }ReflectionFunction::getEndLine();${2}
snippet ReflectionFunction::getStartLine
	${1:public int }ReflectionFunction::getStartLine();${2}
snippet ReflectionMethod::getModifiers
	${1:public int }ReflectionMethod::getModifiers();${2}
snippet ReflectionProperty::getModifiers
	${1:public int }ReflectionProperty::getModifiers();${2}
snippet ReflectionClass::getConstant
	${1:public mixed }ReflectionClass::getConstant(${2:string name});${3}
snippet ReflectionClass::getStaticPropertyValue
	${1:public mixed }ReflectionClass::getStaticPropertyValue(${2:string name [, }${3:mixed default]});${4}
snippet ReflectionFunction::invoke
	${1:public mixed }ReflectionFunction::invoke(${2:mixed* args]});${3}
snippet ReflectionFunction::invokeArgs
	${1:public mixed }ReflectionFunction::invokeArgs(${2:array args});${3}
snippet ReflectionMethod::invoke
	${1:public mixed }ReflectionMethod::invoke(${2:mixed object}, ${3:mixed* args});${4}
snippet ReflectionMethod::invokeArgs
	${1:public mixed }ReflectionMethod::invokeArgs(${2:mixed object}, ${3:array args});${4}
snippet ReflectionProperty::getDefaultValue
	${1:public mixed }ReflectionProperty::getDefaultValue();${2}
snippet ReflectionProperty::getValue
	${1:public mixed }ReflectionProperty::getValue(${2:[stdclass object]});${3}
snippet Reflection::getModifierNames
	${1:public static array }Reflection::getModifierNames(${2:int modifiers});${3}
snippet Reflection::export
	${1:public static mixed }Reflection::export(${2:Reflector r [, }${3:bool return]});${4}
snippet ReflectionClass::export
	${1:public static mixed }ReflectionClass::export(${2:mixed argument [, }${3:bool return]});${4}
snippet ReflectionExtension::export
	${1:public static mixed }ReflectionExtension::export(${2:string name [, }${3:bool return]});${4}
snippet ReflectionFunction::export
	${1:public static mixed }ReflectionFunction::export(${2:string name [, }${3:bool return]});${4}
snippet ReflectionMethod::export
	${1:public static mixed }ReflectionMethod::export(${2:mixed class}, ${3:string name [, }${4:bool return]});${5}
snippet ReflectionObject::export
	${1:public static mixed }ReflectionObject::export(${2:mixed argument [, }${3:bool return]});${4}
snippet ReflectionParameter::export
	${1:public static mixed }ReflectionParameter::export(${2:mixed function}, ${3:mixed parameter [, }${4:bool return]});${5}
snippet ReflectionProperty::export
	${1:public static mixed }ReflectionProperty::export(${2:mixed class}, ${3:string name [, }${4:bool return]});${5}
snippet ReflectionClass::newInstance
	${1:public stdclass }ReflectionClass::newInstance(${2:mixed* args, ...});${3}
snippet ReflectionClass::newInstanceArgs
	${1:public stdclass }ReflectionClass::newInstanceArgs(${2:[array args]});${3}
snippet ReflectionClass::__toString
	${1:public string }ReflectionClass::__toString();${2}
snippet ReflectionClass::getDocComment
	${1:public string }ReflectionClass::getDocComment();${2}
snippet ReflectionClass::getFileName
	${1:public string }ReflectionClass::getFileName();${2}
snippet ReflectionClass::getName
	${1:public string }ReflectionClass::getName();${2}
snippet ReflectionExtension::__toString
	${1:public string }ReflectionExtension::__toString();${2}
snippet ReflectionExtension::getName
	${1:public string }ReflectionExtension::getName();${2}
snippet ReflectionExtension::getVersion
	${1:public string }ReflectionExtension::getVersion();${2}
snippet ReflectionFunction::__toString
	${1:public string }ReflectionFunction::__toString();${2}
snippet ReflectionFunction::getDocComment
	${1:public string }ReflectionFunction::getDocComment();${2}
snippet ReflectionFunction::getFileName
	${1:public string }ReflectionFunction::getFileName();${2}
snippet ReflectionFunction::getName
	${1:public string }ReflectionFunction::getName();${2}
snippet ReflectionMethod::__toString
	${1:public string }ReflectionMethod::__toString();${2}
snippet ReflectionParameter::__toString
	${1:public string }ReflectionParameter::__toString();${2}
snippet ReflectionParameter::getName
	${1:public string }ReflectionParameter::getName();${2}
snippet ReflectionProperty::__toString
	${1:public string }ReflectionProperty::__toString();${2}
snippet ReflectionProperty::getDocComment
	${1:public string }ReflectionProperty::getDocComment();${2}
snippet ReflectionProperty::getName
	${1:public string }ReflectionProperty::getName();${2}
snippet false ReflectionClass::getExtensionName
	${1:public [string|false]}ReflectionClass::getExtensionName();${2}
snippet false ReflectionFunction::getExtensionName
	${1:public [string|failse]}ReflectionFunction::getExtensionName();${2}
snippet ReflectionClass::__construct
	${1:public void }ReflectionClass::__construct(${2:mixed argument});${3}
snippet ReflectionClass::setStaticPropertyValue
	${1:public void }ReflectionClass::setStaticPropertyValue(${2:$name}, ${3:$value});${4}
snippet ReflectionExtension::__construct
	${1:public void }ReflectionExtension::__construct(${2:string name});${3}
snippet ReflectionFunction::__construct
	${1:public void }ReflectionFunction::__construct(${2:string name});${3}
snippet ReflectionMethod::__construct
	${1:public void }ReflectionMethod::__construct(${2:mixed class_or_method [, }${3:string name]});${4}
snippet ReflectionObject::__construct
	${1:public void }ReflectionObject::__construct(${2:mixed argument});${3}
snippet ReflectionParameter::__construct
	${1:public void }ReflectionParameter::__construct(${2:mixed function}, ${3:mixed parameter});${4}
snippet ReflectionProperty::__construct
	${1:public void }ReflectionProperty::__construct(${2:mixed class}, ${3:string name});${4}
snippet ReflectionProperty::setValue
	${1:public void }ReflectionProperty::setValue(${2:[stdclass object,] }${3:mixed value});${4}
# php-src/ext/session/session.c
snippet session_cache_expire
	${1:int }session_cache_expire(${2:[int new_cache_expire]});${3}
snippet session_cache_limiter
	${1:string }session_cache_limiter(${2:[string new_cache_limiter]});${3}
snippet session_decode
	${1:bool }session_decode(${2:string data});${3}
snippet session_destroy
	${1:bool }session_destroy(${2:void});${3}
snippet session_encode
	${1:string }session_encode(${2:void});${3}
snippet session_get_cookie_params
	${1:array }session_get_cookie_params(${2:void});${3}
snippet session_id
	${1:string }session_id(${2:[string newid]});${3}
snippet session_module_name
	${1:string }session_module_name(${2:[string newname]});${3}
snippet session_name
	${1:string }session_name(${2:[string newname]});${3}
snippet session_regenerate_id
	${1:bool }session_regenerate_id(${2:[bool delete_old_session]});${3}
snippet session_save_path
	${1:string }session_save_path(${2:[string newname]});${3}
snippet session_set_cookie_params
	${1:void }session_set_cookie_params(${2:int lifetime [, }${3:string path [, }${4:string domain [, bool secure[, bool httponly]]]]});${5}
snippet session_set_save_handler
	${1:void }session_set_save_handler(${2:string open}, ${3:string close}, ${4:string read}, ${5:string write}, ${6:string destroy}, ${7:string gc});${8}
snippet session_start
	${1:bool }session_start(${2:void});${3}
snippet session_unset
	${1:void }session_unset(${2:void});${3}
snippet session_write_close
	${1:void }session_write_close(${2:void});${3}
# php-src/ext/shmop/shmop.c
snippet shmop_close
	${1:void }shmop_close(${2:int shmid});${3}
snippet shmop_delete
	${1:bool }shmop_delete(${2:int shmid});${3}
snippet shmop_open
	${1:int }shmop_open(${2:int key}, ${3:string flags}, ${4:int mode}, ${5:int size});${6}
snippet shmop_read
	${1:string }shmop_read(${2:int shmid}, ${3:int start}, ${4:int count});${5}
snippet shmop_size
	${1:int }shmop_size(${2:int shmid});${3}
snippet shmop_write
	${1:int }shmop_write(${2:int shmid}, ${3:string data}, ${4:int offset});${5}
# php-src/ext/simplexml/simplexml.c
snippet SimpleXMLElement::addAttribute
	${1:void }SimpleXMLElement::addAttribute(${2:string qName}, ${3:string value [,}${4:string ns]});${5}
snippet SimpleXMLElement::addChild
	${1:void }SimpleXMLElement::addChild(${2:string qName [, }${3:string value [, }${4:string ns]]});${5}
snippet SimpleXMLElement::asXML
	${1:string }SimpleXMLElement::asXML(${2:[string filename]});${3}
snippet SimpleXMLElement::attributes
	${1:array }SimpleXMLElement::attributes(${2:[string ns [, }${3:bool is_prefix]]});${4}
snippet SimpleXMLElement::children
	${1:object }SimpleXMLElement::children(${2:[string ns [, }${3:bool is_prefix]]});${4}
snippet SimpleXMLElement::getDocNamespaces
	${1:string }SimpleXMLElement::getDocNamespaces(${2:[bool recursive]});${3}
snippet SimpleXMLElement::getName
	${1:object }SimpleXMLElement::getName();${2}
snippet SimpleXMLElement::getNamespaces
	${1:string }SimpleXMLElement::getNamespaces(${2:[bool recursve]});${3}
snippet SimpleXMLElement::registerXPathNamespace
	${1:bool }SimpleXMLElement::registerXPathNamespace(${2:string prefix}, ${3:string ns});${4}
snippet SimpleXMLElement::xpath
	${1:array }SimpleXMLElement::xpath(${2:string path});${3}
snippet SimpleXMLElement::__construct
	SimpleXMLElement::__construct(${1:string data [, }${2:int options [, }${3:bool data_is_url [, }${4:string ns [, }${5:bool is_prefix]]]]});${6}
snippet simplexml_import_dom
	${1:simplemxml_element }simplexml_import_dom(${2:domNode node [, }${3:string class_name]});${4}
snippet simplexml_load_file
	${1:simplemxml_element }simplexml_load_file(${2:string filename [, }${3:string class_name [, }${4:int options [, }${5:string ns [, }${6:bool is_prefix]]]]});${7}
snippet simplexml_load_string
	${1:simplemxml_element }simplexml_load_string(${2:string data [, }${3:string class_name [, }${4:int options [, }${5:string ns [, }${6:bool is_prefix]]]]});${7}
# php-src/ext/skeleton/skeleton.c
snippet confirm_extname_compiled
	${1:string }confirm_extname_compiled(${2:string arg});${3}
# php-src/ext/snmp/snmp.c
snippet php_snmpv3
	${1:void }php_snmpv3(${2:INTERNAL_FUNCTION_PARAMETERS}, ${3:int st});${4}
snippet snmp2_get
	${1:string }snmp2_get(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmp2_getnext
	${1:string }snmp2_getnext(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmp2_real_walk
	${1:array }snmp2_real_walk(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmp2_set
	${1:int }snmp2_set(${2:string host}, ${3:string community}, ${4:string object_id}, ${5:string type}, ${5:mixed value [, }${6:int timeout [, }${7:int retries]]});${8}
snippet snmp2_walk
	${1:array }snmp2_walk(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmp3_get
	${1:int }snmp3_get(${2:string host}, ${3:string sec_name}, ${4:string sec_level}, ${5:string auth_protocol}, ${6:string auth_passphrase}, ${7:string priv_protocol}, ${8:string priv_passphrase}, ${9:string object_id [, }${10:int timeout [, }${11:int retries]]});${12}
snippet snmp3_getnext
	${1:int }snmp3_getnext(${2:string host}, ${3:string sec_name}, ${4:string sec_level}, ${5:string auth_protocol}, ${6:string auth_passphrase}, ${7:string priv_protocol}, ${8:string priv_passphrase}, ${9:string object_id [, }${10:int timeout [, }${11:int retries]]});${12}
snippet snmp3_real_walk
	${1:int }snmp3_real_walk(${2:string host}, ${3:string sec_name}, ${4:string sec_level}, ${5:string auth_protocol}, ${6:string auth_passphrase}, ${7:string priv_protocol}, ${8:string priv_passphrase}, ${9:string object_id [, }${10:int timeout [, }${11:int retries]]});${12}
snippet snmp3_set
	${1:int }snmp3_set(${2:string host}, ${3:string sec_name}, ${4:string sec_level}, ${5:string auth_protocol}, ${6:string auth_passphrase}, ${7:string priv_protocol}, ${8:string priv_passphrase}, ${9:string object_id}, ${10:string type}, ${11:mixed value [, }${12:int timeout [, }${13:int retries]]});${14}
snippet snmp3_walk
	${1:int }snmp3_walk(${2:string host}, ${3:string sec_name}, ${4:string sec_level}, ${5:string auth_protocol}, ${6:string auth_passphrase}, ${7:string priv_protocol}, ${8:string priv_passphrase}, ${9:string object_id [, }${10:int timeout [, }${11:int retries]]});${12}
snippet snmp_get_quick_print
	${1:bool }snmp_get_quick_print(${2:void});${3}
snippet snmp_get_valueretrieval
	${1:int }snmp_get_valueretrieval();${2}
snippet snmp_read_mib
	${1:int }snmp_read_mib(${2:string filename});${3}
snippet snmp_set_enum_print
	${1:void }snmp_set_enum_print(${2:int enum_print});${3}
snippet snmp_set_oid_output_format
	${1:void }snmp_set_oid_output_format(${2:int oid_format});${3}
snippet snmp_set_quick_print
	${1:void }snmp_set_quick_print(${2:int quick_print});${3}
snippet snmp_set_valueretrieval
	${1:int }snmp_set_valueretrieval(${2:int method});${3}
snippet snmpget
	${1:string }snmpget(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmpgetnext
	${1:string }snmpgetnext(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmprealwalk
	${1:array }snmprealwalk(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
snippet snmpset
	${1:int }snmpset(${2:string host}, ${3:string community}, ${4:string object_id}, ${5:string type}, ${6:mixed value [, }${7:int timeout [, }${8:int retries]]});${9}
snippet snmpwalk
	${1:array }snmpwalk(${2:string host}, ${3:string community}, ${4:string object_id [, }${5:int timeout [, }${6:int retries]]});${7}
# php-src/ext/soap/soap.c
snippet SoapServer::addSoapHeader
	SoapServer::addSoapHeader(${1: SoapHeader header });${2}
snippet SoapServer::fault
	SoapServer::fault(${1: staring code}, ${2:string string [, }${3:string actor [, }${4:mixed details [, }${5:string name]]] });${6}
snippet SoapClient::SoapClient
	${1:object }SoapClient::SoapClient(${2: mixed wsdl [, }${3:array options]});${4}
snippet SoapClient::__call
	${1:mixed }SoapClient::__call(${2: string function_name}, ${3:array arguments [, }${4:array options [, }${5:array input_headers [, }${6:array output_headers]]]});${7}
snippet SoapClient::__doRequest
	${1:string }SoapClient::__doRequest();${2}
snippet SoapClient::__getCookies
	${1:array }SoapClient::__getCookies();${2}
snippet SoapClient::__getFunctions
	${1:array }SoapClient::__getFunctions(${2: void });${3}
snippet SoapClient::__getLastRequest
	${1:string }SoapClient::__getLastRequest(${2: void });${3}
snippet SoapClient::__getLastRequestHeaders
	${1:string }SoapClient::__getLastRequestHeaders(${2:void});${3}
snippet SoapClient::__getLastResponse
	${1:object }SoapClient::__getLastResponse(${2: void });${3}
snippet SoapClient::__getLastResponseHeaders
	${1:string }SoapClient::__getLastResponseHeaders(${2:void});${3}
snippet SoapClient::__getTypes
	${1:array }SoapClient::__getTypes(${2: void });${3}
snippet SoapClient::__setCookie
	${1:void }SoapClient::__setCookie(${2:string name [, }${3:strung value]});${4}
snippet SoapClient::__setLocation
	${1:string }SoapClient::__setLocation(${2:[string new_location]});${3}
snippet SoapClient::__setSoapHeaders
	${1:void }SoapClient::__setSoapHeaders(${2:array SoapHeaders});${3}
snippet SoapFault::SoapFault
	${1:object }SoapFault::SoapFault(${2: string faultcode}, ${3:string faultstring [, }${4:string faultactor [, }${5:mixed detail [, }${6:string faultname [, }${7:mixed headerfault]]]]});${8}
snippet SoapFault::__toString
	${1:object }SoapFault::__toString();${2}
snippet SoapHeader::SoapHeader
	${1:object }SoapHeader::SoapHeader(${2: string namespace}, ${3:string name [, }${4:mixed data [, }${5:bool mustUnderstand [, }${6:mixed actor]]]});${7}
snippet SoapParam::SoapParam
	${1:object }SoapParam::SoapParam(${2: mixed data}, ${3:string name});${4}
snippet SoapServer::SoapServer
	${1:object }SoapServer::SoapServer(${2: mixed wsdl [, }${3:array options]});${4}
snippet SoapServer::addFunction
	${1:void }SoapServer::addFunction(${2:mixed functions});${3}
snippet SoapServer::getFunctions
	${1:array }SoapServer::getFunctions(${2:void});${3}
snippet SoapServer::handle
	${1:void }SoapServer::handle(${2: [string soap_request]});${3}
snippet SoapServer::setClass
	${1:void }SoapServer::setClass(${2:string class_name [, }${3:mixed args]});${4}
snippet SoapServer::setObject
	${1:void }SoapServer::setObject(${2:object});${3}
snippet SoapServer::setPersistence
	${1:object }SoapServer::setPersistence(${2: int mode });${3}
snippet SoapVar::SoapVar
	${1:object }SoapVar::SoapVar(${2: mixed data}, ${3:int encoding [, }${4:string type_name [, }${5:string type_namespace [, }${6:string node_name [, }${7:string node_namespace]]]]});${8}
snippet is_soap_fault
	${1:bool }is_soap_fault(${2: mixed object });${3}
snippet use_soap_error_handler
	${1:bool }use_soap_error_handler(${2: [bool on] });${3}
# php-src/ext/sockets/sockets.c
snippet socket_accept
	${1:resource }socket_accept(${2:resource socket});${3}
snippet socket_bind
	${1:bool }socket_bind(${2:resource socket}, ${3:string addr [, }${4:int port]});${5}
snippet socket_clear_error
	${1:void }socket_clear_error(${2:[resource socket]});${3}
snippet socket_close
	${1:void }socket_close(${2:resource socket});${3}
snippet socket_connect
	${1:bool }socket_connect(${2:resource socket}, ${3:string addr [, }${4:int port]});${5}
snippet socket_create
	${1:resource }socket_create(${2:int domain}, ${3:int type}, ${4:int protocol});${5}
snippet socket_create_listen
	${1:resource }socket_create_listen(${2:int port[, }${3:int backlog]});${4}
snippet socket_create_pair
	${1:bool }socket_create_pair(${2:int domain}, ${3:int type}, ${4:int protocol}, ${5:array &fd});${6}
snippet socket_get_option
	${1:mixed }socket_get_option(${2:resource socket}, ${3:int level}, ${4:int optname});${5}
snippet socket_getpeername
	${1:bool }socket_getpeername(${2:resource socket}, ${3:string &addr[, }${4:int &port]});${5}
snippet socket_getsockname
	${1:bool }socket_getsockname(${2:resource socket}, ${3:string &addr[, }${4:int &port]});${5}
snippet socket_last_error
	${1:int }socket_last_error(${2:[resource socket]});${3}
snippet socket_listen
	${1:bool }socket_listen(${2:resource socket[, }${3:int backlog]});${4}
snippet socket_read
	${1:string }socket_read(${2:resource socket}, ${3:int length [, }${4:int type]});${5}
snippet socket_recv
	${1:int }socket_recv(${2:resource socket}, ${3:string &buf}, ${4:int len}, ${5:int flags});${6}
snippet socket_recvfrom
	${1:int }socket_recvfrom(${2:resource socket}, ${3:string &buf}, ${4:int len}, ${5:int flags}, ${6:string &name [, }${7:int &port]});${8}
snippet socket_select
	${1:int }socket_select(${2:array &read_fds}, ${3:array &write_fds}, ${4:&array except_fds}, ${5:int tv_sec[, }${6:int tv_usec]});${7}
snippet socket_send
	${1:int }socket_send(${2:resource socket}, ${3:string buf}, ${4:int len}, ${5:int flags});${6}
snippet socket_sendto
	${1:int }socket_sendto(${2:resource socket}, ${3:string buf}, ${4:int len}, ${5:int flags}, ${6:string addr [, }${7:int port]});${8}
snippet socket_set_block
	${1:bool }socket_set_block(${2:resource socket});${3}
snippet socket_set_nonblock
	${1:bool }socket_set_nonblock(${2:resource socket});${3}
snippet socket_set_option
	${1:bool }socket_set_option(${2:resource socket}, ${3:int level}, ${4:int optname}, ${5:int|array optval});${6}
snippet socket_shutdown
	${1:bool }socket_shutdown(${2:resource socket[, }${3:int how]});${4}
snippet socket_strerror
	${1:string }socket_strerror(${2:int errno});${3}
snippet socket_write
	${1:int }socket_write(${2:resource socket}, ${3:string buf[, }${4:int length]});${5}
# php-src/ext/spl/php_spl.c
snippet class_implements
	${1:array }class_implements(${2:mixed what [, }${3:bool autoload ]});${4}
snippet class_parents
	${1:array }class_parents(${2:object instance});${3}
snippet spl_autoload
	${1:void }spl_autoload(${2:string class_name [, }${3:string file_extensions]});${4}
snippet spl_autoload_call
	${1:void }spl_autoload_call(${2:string class_name});${3}
snippet spl_autoload_extensions
	${1:string }spl_autoload_extensions(${2:[string file_extensions]});${3}
snippet spl_autoload_functions
	${1:false|array }spl_autoload_functions();${2}
snippet spl_autoload_register
	${1:bool }spl_autoload_register(${2:[mixed autoload_function = "spl_autoload" [, }${3:throw = true]]});${4}
snippet spl_autoload_unregister
	${1:bool }spl_autoload_unregister(${2:mixed autoload_function});${3}
snippet spl_classes
	${1:array }spl_classes();${2}
snippet spl_object_hash
	${1:string }spl_object_hash(${2:object obj});${3}
# php-src/ext/spl/spl_array.c
snippet ArrayIterator::current
	${1:mixed|NULL }ArrayIterator::current();${2}
snippet ArrayIterator::key
	${1:mixed|NULL }ArrayIterator::key();${2}
snippet ArrayIterator::next
	${1:void }ArrayIterator::next();${2}
snippet ArrayIterator::rewind
	${1:void }ArrayIterator::rewind();${2}
snippet ArrayIterator::seek
	${1:void }ArrayIterator::seek(${2:int $position});${3}
snippet ArrayIterator::valid
	${1:bool }ArrayIterator::valid();${2}
snippet ArrayObject::__construct
	${1:void }ArrayObject::__construct(array|object ar = array();${2}
snippet ArrayObject::append
	${1:void }ArrayObject::append(${2:mixed $newval});${3}
snippet ArrayObject::asort
	${1:int }ArrayObject::asort();${2}
snippet ArrayObject::count
	${1:int }ArrayObject::count();${2}
snippet ArrayObject::exchangeArray
	${1:Array|Object }ArrayObject::exchangeArray(${2:Array|Object ar = array()});${3}
snippet ArrayObject::getFlags
	${1:int }ArrayObject::getFlags();${2}
snippet ArrayObject::getIterator
	${1:ArrayIterator }ArrayObject::getIterator();${2}
snippet ArrayObject::getIteratorClass
	${1:string }ArrayObject::getIteratorClass();${2}
snippet ArrayObject::ksort
	${1:int }ArrayObject::ksort();${2}
snippet ArrayObject::natcasesort
	${1:int }ArrayObject::natcasesort();${2}
snippet ArrayObject::natsort
	${1:int }ArrayObject::natsort();${2}
snippet ArrayObject::offsetExists
	${1:bool }ArrayObject::offsetExists(${2:mixed $index});${3}
snippet ArrayObject::offsetGet
	${1:mixed }ArrayObject::offsetGet(${2:mixed $index});${3}
snippet ArrayObject::offsetSet
	${1:void }ArrayObject::offsetSet(${2:mixed $index}, ${3:mixed $newval});${4}
snippet ArrayObject::offsetUnset
	${1:void }ArrayObject::offsetUnset(${2:mixed $index});${3}
snippet ArrayObject::setFlags
	${1:void }ArrayObject::setFlags(${2:int flags});${3}
snippet ArrayObject::setIteratorClass
	${1:void }ArrayObject::setIteratorClass(${2:string iterator_class});${3}
snippet ArrayObject::uasort
	${1:int }ArrayObject::uasort(${2:callback cmp_function});${3}
snippet ArrayObject::uksort
	${1:int }ArrayObject::uksort(${2:callback cmp_function});${3}
snippet RecursiveArrayIterator::getChildren
	${1:object }RecursiveArrayIterator::getChildren();${2}
snippet RecursiveArrayIterator::hasChildren
	${1:bool }RecursiveArrayIterator::hasChildren();${2}
# php-src/ext/spl/spl_directory.c
snippet DirectoryIterator::__construct
	${1:void }DirectoryIterator::__construct(${2:string $path}, ${3:[int $flags = 0]});${4}
snippet DirectoryIterator::count
	${1:string }DirectoryIterator::count();${2}
snippet DirectoryIterator::current
	${1:DirectoryIterator }DirectoryIterator::current();${2}
snippet DirectoryIterator::getBasename
	${1:string }DirectoryIterator::getBasename(${2:[string $suffix]});${3}
snippet DirectoryIterator::getChildren
	${1:RecursiveDirectoryIterator }DirectoryIterator::getChildren();${2}
snippet DirectoryIterator::getFilename
	${1:string }DirectoryIterator::getFilename();${2}
snippet DirectoryIterator::isDot
	${1:bool }DirectoryIterator::isDot();${2}
snippet DirectoryIterator::key
	${1:string }DirectoryIterator::key();${2}
snippet DirectoryIterator::next
	${1:void }DirectoryIterator::next();${2}
snippet DirectoryIterator::rewind
	${1:void }DirectoryIterator::rewind();${2}
snippet DirectoryIterator::valid
	${1:string }DirectoryIterator::valid();${2}
snippet RecursiveDirectoryIterator::__construct
	${1:void }RecursiveDirectoryIterator::__construct(${2:string path [, }${3:int flags]});${4}
snippet RecursiveDirectoryIterator::current
	${1:string }RecursiveDirectoryIterator::current();${2}
snippet RecursiveDirectoryIterator::getSubPath
	${1:void }RecursiveDirectoryIterator::getSubPath();${2}
snippet RecursiveDirectoryIterator::getSubPathname
	${1:void }RecursiveDirectoryIterator::getSubPathname();${2}
snippet RecursiveDirectoryIterator::hasChildren
	${1:bool }RecursiveDirectoryIterator::hasChildren(${2:[bool $allow_links = false]});${3}
snippet RecursiveDirectoryIterator::key
	${1:string }RecursiveDirectoryIterator::key();${2}
snippet RecursiveDirectoryIterator::next
	${1:void }RecursiveDirectoryIterator::next();${2}
snippet RecursiveDirectoryIterator::rewind
	${1:void }RecursiveDirectoryIterator::rewind();${2}
snippet SplFileInfo::__construct
	${1:void }SplFileInfo::__construct(${2:string file_name});${3}
snippet SplFileInfo::getATime
	${1:int }SplFileInfo::getATime();${2}
snippet SplFileInfo::getBasename
	${1:string }SplFileInfo::getBasename(${2:[string $suffix]});${3}
snippet SplFileInfo::getCTime
	${1:int }SplFileInfo::getCTime();${2}
snippet SplFileInfo::getFileInfo
	${1:SplFileInfo }SplFileInfo::getFileInfo(${2:[string $class_name]});${3}
snippet SplFileInfo::getFilename
	${1:string }SplFileInfo::getFilename();${2}
snippet SplFileInfo::getGroup
	${1:int }SplFileInfo::getGroup();${2}
snippet SplFileInfo::getInode
	${1:int }SplFileInfo::getInode();${2}
snippet SplFileInfo::getLinkTarget
	${1:string }SplFileInfo::getLinkTarget();${2}
snippet SplFileInfo::getMTime
	${1:int }SplFileInfo::getMTime();${2}
snippet SplFileInfo::getOwner
	${1:int }SplFileInfo::getOwner();${2}
snippet SplFileInfo::getPath
	${1:string }SplFileInfo::getPath();${2}
snippet SplFileInfo::getPathInfo
	${1:SplFileInfo }SplFileInfo::getPathInfo(${2:[string $class_name]});${3}
snippet SplFileInfo::getPathname
	${1:string }SplFileInfo::getPathname();${2}
snippet SplFileInfo::getPerms
	${1:int }SplFileInfo::getPerms();${2}
snippet SplFileInfo::getRealPath
	${1:string }SplFileInfo::getRealPath();${2}
snippet SplFileInfo::getSize
	${1:int }SplFileInfo::getSize();${2}
snippet SplFileInfo::getType
	${1:string }SplFileInfo::getType();${2}
snippet SplFileInfo::isDir
	${1:bool }SplFileInfo::isDir();${2}
snippet SplFileInfo::isExecutable
	${1:bool }SplFileInfo::isExecutable();${2}
snippet SplFileInfo::isFile
	${1:bool }SplFileInfo::isFile();${2}
snippet SplFileInfo::isLink
	${1:bool }SplFileInfo::isLink();${2}
snippet SplFileInfo::isReadable
	${1:bool }SplFileInfo::isReadable();${2}
snippet SplFileInfo::isWritable
	${1:bool }SplFileInfo::isWritable();${2}
snippet SplFileInfo::openFile
	${1:SplFileObject }SplFileInfo::openFile(${2:[string mode = 'r' [, }${3:bool use_include_path  [, }${4:resource context]]]});${5}
snippet SplFileInfo::setFileClass
	${1:void }SplFileInfo::setFileClass(${2:[string class_name]});${3}
snippet SplFileInfo::setInfoClass
	${1:void }SplFileInfo::setInfoClass(${2:[string class_name]});${3}
snippet SplFileObject::__construct
	${1:void }SplFileObject::__construct(${2:string filename [, }${3:string mode = 'r' [, }${4:bool use_include_path  [, }${5:resource context]]]]});${6}
snippet SplFileObject::current
	${1:string }SplFileObject::current();${2}
snippet SplFileObject::eof
	${1:void }SplFileObject::eof();${2}
snippet SplFileObject::fflush
	${1:bool }SplFileObject::fflush();${2}
snippet SplFileObject::fgetc
	${1:int }SplFileObject::fgetc();${2}
snippet SplFileObject::fgetcsv
	${1:array }SplFileObject::fgetcsv(${2:[string delimiter [, }${3:string enclosure]]});${4}
snippet SplFileObject::fgets
	${1:string }SplFileObject::fgets();${2}
snippet SplFileObject::fgetss
	${1:string }SplFileObject::fgetss(${2:[string allowable_tags]});${3}
snippet SplFileObject::flock
	${1:bool }SplFileObject::flock(${2:int operation [, }${3:int &wouldblock]});${4}
snippet SplFileObject::fpassthru
	${1:int }SplFileObject::fpassthru();${2}
snippet SplFileObject::fscanf
	${1:bool }SplFileObject::fscanf(${2:string format [, }${3:string ...]});${4}
snippet SplFileObject::fseek
	${1:int }SplFileObject::fseek(${2:int pos [, }${3:int whence = SEEK_SET]});${4}
snippet SplFileObject::fstat
	${1:bool }SplFileObject::fstat();${2}
snippet SplFileObject::ftell
	${1:int }SplFileObject::ftell();${2}
snippet SplFileObject::ftruncate
	${1:bool }SplFileObject::ftruncate(${2:int size});${3}
snippet SplFileObject::fwrite
	${1:mixed }SplFileObject::fwrite(${2:string str [, }${3:int length]});${4}
snippet SplFileObject::getChildren
	${1:bool }SplFileObject::getChildren();${2}
snippet SplFileObject::getCsvControl
	${1:array }SplFileObject::getCsvControl();${2}
snippet SplFileObject::getFlags
	${1:int }SplFileObject::getFlags();${2}
snippet SplFileObject::getMaxLineLen
	${1:int }SplFileObject::getMaxLineLen();${2}
snippet SplFileObject::hasChildren
	${1:bool }SplFileObject::hasChildren();${2}
snippet SplFileObject::key
	${1:int }SplFileObject::key();${2}
snippet SplFileObject::next
	${1:void }SplFileObject::next();${2}
snippet SplFileObject::rewind
	${1:void }SplFileObject::rewind();${2}
snippet SplFileObject::seek
	${1:void }SplFileObject::seek(${2:int line_pos});${3}
snippet SplFileObject::setCsvControl
	${1:void }SplFileObject::setCsvControl(${2:[string delimiter = ',' [, }${3:string enclosure = '"']]});${4}
snippet SplFileObject::setFlags
	${1:void }SplFileObject::setFlags(${2:int flags});${3}
snippet SplFileObject::setMaxLineLen
	${1:void }SplFileObject::setMaxLineLen(${2:int max_len});${3}
snippet SplFileObject::valid
	${1:void }SplFileObject::valid();${2}
snippet SplTempFileObject::__construct
	${1:void }SplTempFileObject::__construct(${2:[int max_memory]});${3}
# php-src/ext/spl/spl_iterators.c
snippet AppendIterator::__construct
	${1:void }AppendIterator::__construct();${2}
snippet AppendIterator::append
	${1:void }AppendIterator::append(${2:Iterator it});${3}
snippet AppendIterator::getArrayIterator
	${1:ArrayIterator }AppendIterator::getArrayIterator();${2}
snippet AppendIterator::getIteratorIndex
	${1:int }AppendIterator::getIteratorIndex();${2}
snippet AppendIterator::next
	${1:void }AppendIterator::next();${2}
snippet AppendIterator::rewind
	${1:void }AppendIterator::rewind();${2}
snippet AppendIterator::valid
	${1:bool }AppendIterator::valid();${2}
snippet CachingIterator::__construct
	${1:void }CachingIterator::__construct(${2:Iterator it [, }${3:flags = CIT_CALL_TOSTRING]});${4}
snippet CachingIterator::__toString
	${1:string }CachingIterator::__toString();${2}
snippet CachingIterator::count
	${1:void }CachingIterator::count();${2}
snippet CachingIterator::getCache
	${1:bool }CachingIterator::getCache();${2}
snippet CachingIterator::getFlags
	${1:int }CachingIterator::getFlags();${2}
snippet CachingIterator::hasNext
	${1:bool }CachingIterator::hasNext();${2}
snippet CachingIterator::next
	${1:void }CachingIterator::next();${2}
snippet CachingIterator::offsetExists
	${1:bool }CachingIterator::offsetExists(${2:mixed index});${3}
snippet CachingIterator::offsetGet
	${1:string }CachingIterator::offsetGet(${2:mixed index});${3}
snippet CachingIterator::offsetSet
	${1:void }CachingIterator::offsetSet(${2:mixed index}, ${3:mixed newval});${4}
snippet CachingIterator::offsetUnset
	${1:void }CachingIterator::offsetUnset(${2:mixed index});${3}
snippet CachingIterator::rewind
	${1:void }CachingIterator::rewind();${2}
snippet CachingIterator::setFlags
	${1:void }CachingIterator::setFlags(${2:int flags});${3}
snippet CachingIterator::valid
	${1:bool }CachingIterator::valid();${2}
snippet EmptyIterator::current
	${1:void }EmptyIterator::current();${2}
snippet EmptyIterator::key
	${1:void }EmptyIterator::key();${2}
snippet EmptyIterator::next
	${1:void }EmptyIterator::next();${2}
snippet EmptyIterator::rewind
	${1:void }EmptyIterator::rewind();${2}
snippet EmptyIterator::valid
	${1:false }EmptyIterator::valid();${2}
snippet FilterIterator::__construct
	${1:void }FilterIterator::__construct(${2:Iterator it});${3}
snippet FilterIterator::current
	${1:mixed }FilterIterator::current();${2}
snippet FilterIterator::getInnerIterator
	${1:Iterator }FilterIterator::getInnerIterator();${2}
snippet FilterIterator::key
	${1:mixed }FilterIterator::key();${2}
snippet FilterIterator::next
	${1:void }FilterIterator::next();${2}
snippet FilterIterator::rewind
	${1:void }FilterIterator::rewind();${2}
snippet FilterIterator::valid
	${1:bool }FilterIterator::valid();${2}
snippet InfiniteIterator::__construct
	${1:void }InfiniteIterator::__construct(${2:Iterator it});${3}
snippet InfiniteIterator::next
	${1:void }InfiniteIterator::next();${2}
snippet IteratorIterator::__construct
	${1:void }IteratorIterator::__construct(${2:Traversable it});${3}
snippet LimitIterator::getPosition
	${1:int }LimitIterator::getPosition();${2}
snippet LimitIterator::next
	${1:void }LimitIterator::next();${2}
snippet LimitIterator::rewind
	${1:void }LimitIterator::rewind();${2}
snippet LimitIterator::seek
	${1:void }LimitIterator::seek(${2:int position});${3}
snippet LimitIterator::valid
	${1:bool }LimitIterator::valid();${2}
snippet NoRewindIterator::__construct
	${1:void }NoRewindIterator::__construct(${2:Iterator it});${3}
snippet NoRewindIterator::current
	${1:mixed }NoRewindIterator::current();${2}
snippet NoRewindIterator::key
	${1:mixed }NoRewindIterator::key();${2}
snippet NoRewindIterator::next
	${1:void }NoRewindIterator::next();${2}
snippet NoRewindIterator::rewind
	${1:void }NoRewindIterator::rewind();${2}
snippet NoRewindIterator::valid
	${1:bool }NoRewindIterator::valid();${2}
snippet ParentIterator::__construct
	${1:void }ParentIterator::__construct(${2:RecursiveIterator it});${3}
snippet ParentIterator::next
	${1:void }ParentIterator::next();${2}
snippet ParentIterator::rewind
	${1:void }ParentIterator::rewind();${2}
snippet RecursiveCachingIterator::__construct
	${1:void }RecursiveCachingIterator::__construct(${2:RecursiveIterator it [, }${3:flags = CIT_CALL_TOSTRING]});${4}
snippet RecursiveCachingIterator::getChildren
	${1:RecursiveCachingIterator }RecursiveCachingIterator::getChildren();${2}
snippet RecursiveCachingIterator::hasChildren
	${1:bool }RecursiveCachingIterator::hasChildren();${2}
snippet RecursiveFilterIterator::__construct
	${1:void }RecursiveFilterIterator::__construct(${2:RecursiveIterator it});${3}
snippet RecursiveFilterIterator::getChildren
	${1:RecursiveFilterIterator }RecursiveFilterIterator::getChildren();${2}
snippet RecursiveFilterIterator::hasChildren
	${1:bool }RecursiveFilterIterator::hasChildren();${2}
snippet RecursiveIteratorIterator::__construct
	${1:void }RecursiveIteratorIterator::__construct(${2:RecursiveIterator|IteratorAggregate it [, }${3:int mode = RIT_LEAVES_ONLY [, }${4:int flags = 0]]});${5}
snippet RecursiveIteratorIterator::beginChildren
	${1:void }RecursiveIteratorIterator::beginChildren();${2}
snippet RecursiveIteratorIterator::beginIteration
	${1:RecursiveIterator }RecursiveIteratorIterator::beginIteration();${2}
snippet RecursiveIteratorIterator::callGetChildren
	${1:RecursiveIterator }RecursiveIteratorIterator::callGetChildren();${2}
snippet RecursiveIteratorIterator::callHasChildren
	${1:bool }RecursiveIteratorIterator::callHasChildren();${2}
snippet RecursiveIteratorIterator::current
	${1:mixed }RecursiveIteratorIterator::current();${2}
snippet RecursiveIteratorIterator::endChildren
	${1:void }RecursiveIteratorIterator::endChildren();${2}
snippet RecursiveIteratorIterator::endIteration
	${1:RecursiveIterator }RecursiveIteratorIterator::endIteration();${2}
snippet RecursiveIteratorIterator::getDepth
	${1:int }RecursiveIteratorIterator::getDepth();${2}
snippet RecursiveIteratorIterator::getInnerIterator
	${1:RecursiveIterator }RecursiveIteratorIterator::getInnerIterator();${2}
snippet RecursiveIteratorIterator::getMaxDepth
	${1:int|false }RecursiveIteratorIterator::getMaxDepth();${2}
snippet RecursiveIteratorIterator::getSubIterator
	${1:RecursiveIterator }RecursiveIteratorIterator::getSubIterator(${2:[int level]});${3}
snippet RecursiveIteratorIterator::key
	${1:mixed }RecursiveIteratorIterator::key();${2}
snippet RecursiveIteratorIterator::next
	${1:void }RecursiveIteratorIterator::next();${2}
snippet RecursiveIteratorIterator::nextElement
	${1:void }RecursiveIteratorIterator::nextElement();${2}
snippet RecursiveIteratorIterator::rewind
	${1:void }RecursiveIteratorIterator::rewind();${2}
snippet RecursiveIteratorIterator::setMaxDepth
	${1:void }RecursiveIteratorIterator::setMaxDepth(${2:[$max_depth = -1]});${3}
snippet RecursiveIteratorIterator::valid
	${1:bool }RecursiveIteratorIterator::valid();${2}
snippet RecursiveRegexIterator::__construct
	${1:void }RecursiveRegexIterator::__construct(${2:RecursiveIterator it}, ${3:string regex [, }${4:int mode [, }${5:int flags [, }${6:int preg_flags]]]});${7}
snippet RecursiveRegexIterator::getChildren
	${1:RecursiveRegexIterator }RecursiveRegexIterator::getChildren();${2}
snippet RegexIterator::__construct
	${1:void }RegexIterator::__construct(${2:Iterator it}, ${3:string regex [, }${4:int mode [, }${5:int flags [, }${6:int preg_flags]]]});${7}
snippet RegexIterator::accept
	${1:bool }RegexIterator::accept();${2}
snippet RegexIterator::getFlags
	${1:bool }RegexIterator::getFlags();${2}
snippet RegexIterator::getMode
	${1:bool }RegexIterator::getMode();${2}
snippet RegexIterator::setFlags
	${1:bool }RegexIterator::setFlags(${2:int new_flags});${3}
snippet RegexIterator::setMode
	${1:bool }RegexIterator::setMode(${2:int new_mode});${3}
snippet RegexIterator::setPregFlags
	${1:bool }RegexIterator::setPregFlags(${2:int new_flags});${3}
snippet LimitIterator::__construct
	LimitIterator::__construct(${1:Iterator it [, }${2:int offset, }${3:int count]});${4}
snippet iterator_apply
	${1:int }iterator_apply(${2:Traversable it}, ${3:mixed function [, }${4:mixed params]});${5}
snippet iterator_count
	${1:int }iterator_count(${2:Traversable it});${3}
snippet iterator_to_array
	${1:array }iterator_to_array(${2:Traversable it [, }${3:bool use_keys = true]});${4}
# php-src/ext/spl/spl_observer.c
snippet SplObjectStorage::attach
	${1:void }SplObjectStorage::attach(${2:$obj});${3}
snippet SplObjectStorage::contains
	${1:bool }SplObjectStorage::contains(${2:$obj});${3}
snippet SplObjectStorage::count
	${1:int }SplObjectStorage::count();${2}
snippet SplObjectStorage::current
	${1:mixed }SplObjectStorage::current();${2}
snippet SplObjectStorage::detach
	${1:void }SplObjectStorage::detach(${2:$obj});${3}
snippet SplObjectStorage::key
	${1:mixed }SplObjectStorage::key();${2}
snippet SplObjectStorage::next
	${1:void }SplObjectStorage::next();${2}
snippet SplObjectStorage::rewind
	${1:void }SplObjectStorage::rewind();${2}
snippet SplObjectStorage::serialize
	${1:string }SplObjectStorage::serialize();${2}
snippet SplObjectStorage::unserialize
	${1:void }SplObjectStorage::unserialize(${2:string serialized});${3}
snippet SplObjectStorage::valid
	${1:bool }SplObjectStorage::valid();${2}
# php-src/ext/spl/spl_sxe.c
snippet SimpleXMLIterator::count
	${1:int }SimpleXMLIterator::count();${2}
snippet SimpleXMLIterator::current
	${1:SimpleXMLIterator }SimpleXMLIterator::current();${2}
snippet SimpleXMLIterator::getChildren
	${1:SimpleXMLIterator }SimpleXMLIterator::getChildren();${2}
snippet SimpleXMLIterator::hasChildren
	${1:bool }SimpleXMLIterator::hasChildren();${2}
snippet SimpleXMLIterator::key
	${1:string }SimpleXMLIterator::key();${2}
snippet SimpleXMLIterator::next
	${1:void }SimpleXMLIterator::next();${2}
snippet SimpleXMLIterator::rewind
	${1:void }SimpleXMLIterator::rewind();${2}
snippet SimpleXMLIterator::valid
	${1:bool }SimpleXMLIterator::valid();${2}
# php-src/ext/sqlite/sqlite.c
snippet sqlite_array_query
	${1:array }sqlite_array_query(${2:resource db}, ${3:string query [ , }${4:int result_type [, }${5:bool decode_binary]]});${6}
snippet sqlite_busy_timeout
	${1:void }sqlite_busy_timeout(${2:resource db}, ${3:int ms});${4}
snippet sqlite_changes
	${1:int }sqlite_changes(${2:resource db});${3}
snippet sqlite_close
	${1:void }sqlite_close(${2:resource db});${3}
snippet sqlite_column
	${1:mixed }sqlite_column(${2:resource result}, ${3:mixed index_or_name [, }${4:bool decode_binary]});${5}
snippet sqlite_create_aggregate
	${1:bool }sqlite_create_aggregate(${2:resource db}, ${3:string funcname}, ${4:mixed step_func}, ${5:mixed finalize_func[, }${6:long num_args]});${7}
snippet sqlite_create_function
	${1:bool }sqlite_create_function(${2:resource db}, ${3:string funcname}, ${4:mixed callback[, }${5:long num_args]});${6}
snippet sqlite_current
	${1:array }sqlite_current(${2:resource result [, }${3:int result_type [, }${4:bool decode_binary]]});${5}
snippet sqlite_error_string
	${1:string }sqlite_error_string(${2:int error_code});${3}
snippet sqlite_escape_string
	${1:string }sqlite_escape_string(${2:string item});${3}
snippet sqlite_exec
	${1:boolean }sqlite_exec(${2:string query}, ${3:resource db[, }${4:string &error_message]});${5}
snippet sqlite_factory
	${1:object }sqlite_factory(${2:string filename [, }${3:int mode [, }${4:string &error_message]]});${5}
snippet sqlite_fetch_all
	${1:array }sqlite_fetch_all(${2:resource result [, }${3:int result_type [, }${4:bool decode_binary]]});${5}
snippet sqlite_fetch_array
	${1:array }sqlite_fetch_array(${2:resource result [, }${3:int result_type [, }${4:bool decode_binary]]});${5}
snippet sqlite_fetch_column_types
	${1:resource }sqlite_fetch_column_types(${2:string table_name}, ${3:resource db [, }${4:int result_type]});${5}
snippet sqlite_fetch_object
	${1:object }sqlite_fetch_object(${2:resource result [, }${3:string class_name [, }${4:NULL|array ctor_params [, }${5:bool decode_binary]]]});${6}
snippet sqlite_fetch_single
	${1:string }sqlite_fetch_single(${2:resource result [, }${3:bool decode_binary]});${4}
snippet sqlite_field_name
	${1:string }sqlite_field_name(${2:resource result}, ${3:int field_index});${4}
snippet sqlite_has_prev
	${1:bool }sqlite_has_prev(${2:resource result});${3}
snippet sqlite_key
	${1:int }sqlite_key(${2:resource result});${3}
snippet sqlite_last_error
	${1:int }sqlite_last_error(${2:resource db});${3}
snippet sqlite_last_insert_rowid
	${1:int }sqlite_last_insert_rowid(${2:resource db});${3}
snippet sqlite_libencoding
	${1:string }sqlite_libencoding();${2}
snippet sqlite_libversion
	${1:string }sqlite_libversion();${2}
snippet sqlite_next
	${1:bool }sqlite_next(${2:resource result});${3}
snippet sqlite_num_fields
	${1:int }sqlite_num_fields(${2:resource result});${3}
snippet sqlite_num_rows
	${1:int }sqlite_num_rows(${2:resource result});${3}
snippet sqlite_open
	${1:resource }sqlite_open(${2:string filename [, }${3:int mode [, }${4:string &error_message]]});${5}
snippet sqlite_popen
	${1:resource }sqlite_popen(${2:string filename [, }${3:int mode [, }${4:string &error_message]]});${5}
snippet sqlite_prev
	${1:bool }sqlite_prev(${2:resource result});${3}
snippet sqlite_query
	${1:resource }sqlite_query(${2:string query}, ${3:resource db [, }${4:int result_type [, }${5:string &error_message]]});${6}
snippet sqlite_rewind
	${1:bool }sqlite_rewind(${2:resource result});${3}
snippet sqlite_seek
	${1:bool }sqlite_seek(${2:resource result}, ${3:int row});${4}
snippet sqlite_single_query
	${1:array }sqlite_single_query(${2:resource db}, ${3:string query [, }${4:bool first_row_only [, }${5:bool decode_binary]]});${6}
snippet sqlite_udf_decode_binary
	${1:string }sqlite_udf_decode_binary(${2:string data});${3}
snippet sqlite_udf_encode_binary
	${1:string }sqlite_udf_encode_binary(${2:string data});${3}
snippet sqlite_unbuffered_query
	${1:resource }sqlite_unbuffered_query(${2:string query}, ${3:resource db [ , }${4:int result_type [, }${5:string &error_message]]});${6}
snippet sqlite_valid
	${1:bool }sqlite_valid(${2:resource result});${3}
# php-src/ext/standard/array.c
snippet array_change_key_case
	${1:array }array_change_key_case(${2:array input [, }${3:int case=CASE_LOWER]});${4}
snippet array_chunk
	${1:array }array_chunk(${2:array input}, ${3:int size [, }${4:bool preserve_keys]});${5}
snippet array_combine
	${1:array }array_combine(${2:array keys}, ${3:array values});${4}
snippet array_count_values
	${1:array }array_count_values(${2:array input});${3}
snippet array_diff
	${1:array }array_diff(${2:array arr1, }${3:array arr2 [, }${4:array ...]});${5}
snippet array_diff_assoc
	${1:array }array_diff_assoc(${2:array arr1, }${3:array arr2 [, }${4:array ...]});${5}
snippet array_diff_key
	${1:array }array_diff_key(${2:array arr1, }${3:array arr2 [, }${4:array ...]});${5}
snippet array_diff_uassoc
	${1:array }array_diff_uassoc(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback key_comp_func});${6}
snippet array_diff_ukey
	${1:array }array_diff_ukey(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback key_comp_func});${6}
snippet array_fill
	${1:array }array_fill(${2:int start_key}, ${3:int num}, ${4:mixed val});${5}
snippet array_fill_keys
	${1:array }array_fill_keys(${2:array keys}, ${3:mixed val});${4}
snippet array_filter
	${1:array }array_filter(${2:array input [, }${3:mixed callback]});${4}
snippet array_flip
	${1:array }array_flip(${2:array input});${3}
snippet array_intersect
	${1:array }array_intersect(${2:array arr1,} ${3:array arr2 [, }${4:array ...]});${5}
snippet array_intersect_assoc
	${1:array }array_intersect_assoc(${2:array arr1,} ${3:array arr2 [, }${4:array ...]});${5}
snippet array_intersect_key
	${1:array }array_intersect_key(${2:array arr1,} ${3:array arr2 [, }${4:array ...]});${5}
snippet array_intersect_uassoc
	${1:array }array_intersect_uassoc(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback key_compare_func});${6}
snippet array_intersect_ukey
	${1:array }array_intersect_ukey(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback key_compare_func});${6}
snippet array_key_exists
	${1:bool }array_key_exists(${2:mixed key}, ${3:array search});${4}
snippet array_keys
	${1:array }array_keys(${2:array input [, }${3:mixed search_value[, }${4:bool strict]]});${5}
snippet array_map
	${1:array }array_map(${2:mixed callback,} ${3:array input1 [, }${4:array input2 ,...]});${5}
snippet array_merge
	${1:array }array_merge(${2:array arr1,} ${3:array arr2 [, }${4:array ...]});${5}
snippet array_merge_recursive
	${1:array }array_merge_recursive(${2:array arr1,} ${3:array arr2 [, }${4:array ...]});${5}
snippet array_multisort
	${1:bool }array_multisort(${2:array ar1 [, }${3:SORT_ASC|SORT_DESC [, }${4:SORT_REGULAR|SORT_NUMERIC|SORT_STRING]] [, }${5:array ar2 [, }${6:SORT_ASC|SORT_DESC [, }${7:SORT_REGULAR|SORT_NUMERIC|SORT_STRING]], ...]});${8}
snippet array_pad
	${1:array }array_pad(${2:array input}, ${3:int pad_size}, ${4:mixed pad_value});${5}
snippet array_pop
	${1:mixed }array_pop(${2:array stack});${3}
snippet array_product
	${1:mixed }array_product(${2:array input});${3}
snippet array_push
	${1:int }array_push(${2:array stack,} ${3:mixed var [, }${4:mixed ...]});${5}
snippet array_rand
	${1:mixed }array_rand(${2:array input [, }${3:int num_req]});${4}
snippet array_reduce
	${1:mixed }array_reduce(${2:array input}, ${3:mixed callback [, }${4:int initial]});${5}
snippet array_reverse
	${1:array }array_reverse(${2:array input [, }${3:bool preserve keys]});${4}
snippet array_search
	${1:mixed }array_search(${2:mixed needle}, ${3:array haystack [, }${4:bool strict]});${5}
snippet array_shift
	${1:mixed }array_shift(${2:array stack});${3}
snippet array_slice
	${1:array }array_slice(${2:array input}, ${3:int offset [, }${4:int length [, }${5:bool preserve_keys]]});${6}
snippet array_splice
	${1:array }array_splice(${2:array input}, ${3:int offset [, }${4:int length [, }${5:array replacement]]});${6}
snippet array_sum
	${1:mixed }array_sum(${2:array input});${3}
snippet array_udiff
	${1:array }array_udiff(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback data_comp_func});${6}
snippet array_udiff_assoc
	${1:array }array_udiff_assoc(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback data_comp_func});${6}
snippet array_udiff_uassoc
	${1:array }array_udiff_uassoc(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback data_comp_func}, ${6:callback key_comp_func});${7}
snippet array_uintersect
	${1:array }array_uintersect(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback data_compare_func});${6}
snippet array_uintersect_assoc
	${1:array }array_uintersect_assoc(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback data_compare_func});${6}
snippet array_uintersect_uassoc
	${1:array }array_uintersect_uassoc(${2:array arr1}, ${3:array arr2 [, }${4:array ...], }${5:callback data_compare_func}, ${6:callback key_compare_func});${7}
snippet array_unique
	${1:array }array_unique(${2:array input});${3}
snippet array_unshift
	${1:int }array_unshift(${2:array stack}, ${3:mixed var [, }${4:mixed ...]});${5}
snippet array_values
	${1:array }array_values(${2:array input});${3}
snippet array_walk
	${1:bool }array_walk(${2:array input}, ${3:mixed callback [, }${4:mixed userdata]});${5}
snippet array_walk_recursive
	${1:bool }array_walk_recursive(${2:array input}, ${3:mixed callback [, }${4:mixed userdata]});${5}
snippet arsort
	${1:bool }arsort(${2:array &array_arg [, }${3:int sort_flags]});${4}
snippet asort
	${1:bool }asort(${2:array &array_arg [, }${3:int sort_flags]});${4}
snippet compact
	${1:array }compact(${2:mixed var_names [, }${3:mixed ...]});${4}
snippet count
	${1:int }count(${2:mixed var [, }${3:int mode]});${4}
snippet current
	${1:mixed }current(${2:array array_arg});${3}
snippet end
	${1:mixed }end(${2:array array_arg});${3}
snippet extract
	${1:int }extract(${2:array var_array [, }${3:int extract_type [, }${4:string prefix]]});${5}
snippet in_array
	${1:bool }in_array(${2:mixed needle}, ${3:array haystack [, }${4:bool strict]});${5}
snippet key
	${1:mixed }key(${2:array array_arg});${3}
snippet krsort
	${1:bool }krsort(${2:array &array_arg [, }${3:int sort_flags]});${4}
snippet ksort
	${1:bool }ksort(${2:array &array_arg [, }${3:int sort_flags]});${4}
snippet max
	${1:mixed }max(${2:mixed arg1 [, }${3:mixed arg2 [, }${4:mixed ...]]});${5}
snippet min
	${1:mixed }min(${2:mixed arg1 [, }${3:mixed arg2 [, }${4:mixed ...]]});${5}
snippet natcasesort
	${1:void }natcasesort(${2:array &array_arg});${3}
snippet natsort
	${1:void }natsort(${2:array &array_arg});${3}
snippet next
	${1:mixed }next(${2:array array_arg});${3}
snippet prev
	${1:mixed }prev(${2:array array_arg});${3}
snippet range
	${1:array }range(${2:mixed low}, ${3:mixed high[, }${4:int step]});${5}
snippet reset
	${1:mixed }reset(${2:array array_arg});${3}
snippet rsort
	${1:bool }rsort(${2:array &array_arg [, }${3:int sort_flags]});${4}
snippet shuffle
	${1:bool }shuffle(${2:array array_arg});${3}
snippet sort
	${1:bool }sort(${2:array &array_arg [, }${3:int sort_flags]});${4}
snippet uasort
	${1:bool }uasort(${2:array array_arg}, ${3:mixed comparator});${4}
snippet uksort
	${1:bool }uksort(${2:array array_arg}, ${3:mixed comparator});${4}
snippet usort
	${1:bool }usort(${2:array array_arg}, ${3:mixed comparator});${4}
# php-src/ext/standard/assert.c
snippet assert
	${1:int }assert(${2:string|bool assertion});${3}
snippet assert_options
	${1:mixed }assert_options(${2:int what [, }${3:mixed value]});${4}
# php-src/ext/standard/base64.c
snippet base64_decode
	${1:binary }base64_decode(${2:binary str[, }${3:bool strict]});${4}
snippet base64_encode
	${1:binary }base64_encode(${2:binary str});${3}
# php-src/ext/standard/basic_functions.c
snippet call_user_func
	${1:mixed }call_user_func(${2:mixed function_name [, }${3:mixed parmeter] [, }${4:mixed ...]});${5}
snippet call_user_func_array
	${1:mixed }call_user_func_array(${2:string function_name}, ${3:array parameters});${4}
snippet call_user_method
	${1:mixed }call_user_method(${2:string method_name, }${3:mixed object [, }${4:mixed parameter] [,}${5: mixed ...]});${6}
snippet call_user_method_array
	${1:mixed }call_user_method_array(${2:string method_name}, ${3:mixed object}, ${4:array params});${5}
snippet connection_aborted
	${1:int }connection_aborted(${2:void});${3}
snippet connection_status
	${1:int }connection_status(${2:void});${3}
snippet constant
	${1:mixed }constant(${2:string const_name});${3}
snippet error_get_last
	${1:array }error_get_last();${2}
snippet error_log
	${1:bool }error_log(${2:string message [,} ${3:int message_type [, }${4:string destination [, }${5:string extra_headers]]]});${6}
snippet flush
	${1:void }flush(${2:void});${3}
snippet get_cfg_var
	${1:string }get_cfg_var(${2:string option_name});${3}
snippet get_current_user
	${1:string }get_current_user(${2:void});${3}
snippet get_include_path
	${1:string }get_include_path();${2}
snippet getenv
	${1:string }getenv(${2:string varname});${3}
snippet getopt
	${1:array }getopt(${2:string options [, }${3:array longopts]});${4}
snippet getprotobyname
	${1:int }getprotobyname(${2:string name});${3}
snippet getprotobynumber
	${1:string }getprotobynumber(${2:int proto});${3}
snippet getservbyname
	${1:int }getservbyname(${2:string service}, ${3:string protocol});${4}
snippet getservbyport
	${1:string }getservbyport(${2:int port}, ${3:string protocol});${4}
snippet highlight_file
	${1:bool }highlight_file(${2:string file_name [, }${3:bool return] });${4}
snippet highlight_string
	${1:bool }highlight_string(${2:string string [, }${3:bool return] });${4}
snippet ignore_user_abort
	${1:int }ignore_user_abort(${2:[string value]});${3}
snippet import_request_variables
	${1:bool }import_request_variables(${2:string types [, }${3:string prefix]});${4}
snippet inet_ntop
	${1:string }inet_ntop(${2:string in_addr});${3}
snippet inet_pton
	${1:string }inet_pton(${2:string ip_address});${3}
snippet ini_get
	${1:string }ini_get(${2:string varname});${3}
snippet ini_get_all
	${1:array }ini_get_all(${2:[string extension]});${3}
snippet ini_restore
	${1:void }ini_restore(${2:string varname});${3}
snippet ini_set
	${1:string }ini_set(${2:string varname}, ${3:string newvalue});${4}
snippet ip2long
	${1:int }ip2long(${2:string ip_address});${3}
snippet is_uploaded_file
	${1:bool }is_uploaded_file(${2:string path});${3}
snippet long2ip
	${1:string }long2ip(${2:int proper_address});${3}
snippet move_uploaded_file
	${1:bool }move_uploaded_file(${2:string path}, ${3:string new_path});${4}
snippet parse_ini_file
	${1:array }parse_ini_file(${2:string filename [, }${3:bool process_sections]});${4}
snippet php_strip_whitespace
	${1:string }php_strip_whitespace(${2:string file_name});${3}
snippet print_r
	${1:mixed }print_r(${2:mixed var [, }${3:bool return]});${4}
snippet putenv
	${1:bool }putenv(${2:string setting});${3}
snippet register_shutdown_function
	${1:void }register_shutdown_function(${2:string function_name});${3}
snippet register_tick_function
	${1:bool }register_tick_function(${2:string function_name [, }${3:mixed arg [, }${4:mixed ... ]]});${5}
snippet restore_include_path
	${1:void }restore_include_path();${2}
snippet set_include_path
	${1:string }set_include_path(${2:string new_include_path});${3}
snippet sleep
	${1:void }sleep(${2:int seconds});${3}
snippet sys_getloadavg
	${1:array }sys_getloadavg();${2}
snippet time_nanosleep
	${1:mixed }time_nanosleep(${2:long seconds}, ${3:long nanoseconds});${4}
snippet time_sleep_until
	${1:mixed }time_sleep_until(${2:float timestamp});${3}
snippet unregister_tick_function
	${1:void }unregister_tick_function(${2:string function_name});${3}
snippet usleep
	${1:void }usleep(${2:int micro_seconds});${3}
# php-src/ext/standard/browscap.c
snippet get_browser
	${1:mixed }get_browser(${2:[string browser_name [, }${3:bool return_array]]});${4}
# php-src/ext/standard/crc32.c
snippet crc32
	${1:string }crc32(${2:string str});${3}
# php-src/ext/standard/crypt.c
snippet crypt
	${1:string }crypt(${2:string str [, }${3:string salt]});${4}
# php-src/ext/standard/cyr_convert.c
snippet convert_cyr_string
	${1:string }convert_cyr_string(${2:string str}, ${3:string from}, ${4:string to});${5}
# php-src/ext/standard/datetime.c
snippet strptime
	${1:string }strptime(${2:string timestamp}, ${3:string format});${4}
# php-src/ext/standard/dir.c
snippet chdir
	${1:bool }chdir(${2:string directory});${3}
snippet chroot
	${1:bool }chroot(${2:string directory});${3}
snippet closedir
	${1:void }closedir(${2:[resource dir_handle]});${3}
snippet dir
	${1:object }dir(${2:string directory[, }${3:resource context]});${4}
snippet getcwd
	${1:mixed }getcwd(${2:void});${3}
snippet glob
	${1:array }glob(${2:string pattern [, }${3:int flags]});${4}
snippet opendir
	${1:mixed }opendir(${2:string path[, }${3:resource context]});${4}
snippet readdir
	${1:string }readdir(${2:[resource dir_handle]});${3}
snippet rewinddir
	${1:void }rewinddir(${2:[resource dir_handle]});${3}
snippet scandir
	${1:array }scandir(${2:string dir [, }${3:int sorting_order [, }${4:resource context]]});${5}
# php-src/ext/standard/dl.c
snippet dl
	${1:int }dl(${2:string extension_filename});${3}
# php-src/ext/standard/dns.c
snippet dns_check_record
	${1:int }dns_check_record(${2:string host [, }${3:string type]});${4}
snippet dns_get_mx
	${1:bool }dns_get_mx(${2:string hostname}, ${3:array mxhosts [, }${4:array weight]});${5}
snippet dns_get_record
	${1:array|false }dns_get_record(${2:string hostname [, }${3:int type[, }${4:array authns, }${5:array addtl]]});${6}
snippet gethostbyaddr
	${1:string }gethostbyaddr(${2:string ip_address});${3}
snippet gethostbyname
	${1:string }gethostbyname(${2:string hostname});${3}
snippet gethostbynamel
	${1:array }gethostbynamel(${2:string hostname});${3}
# php-src/ext/standard/exec.c
snippet escapeshellarg
	${1:string }escapeshellarg(${2:string arg});${3}
snippet escapeshellcmd
	${1:string }escapeshellcmd(${2:string command});${3}
snippet exec
	${1:string }exec(${2:string command [, }${3:array &output [, }${4:int &return_value]]});${5}
snippet passthru
	${1:void }passthru(${2:string command [, }${3:int &return_value]});${4}
snippet proc_nice
	${1:bool }proc_nice(${2:int priority});${3}
snippet shell_exec
	${1:string }shell_exec(${2:string cmd});${3}
snippet system
	${1:int }system(${2:string command [, }${3:int &return_value]});${4}
# php-src/ext/standard/file.c
snippet copy
	${1:bool }copy(${2:string source_file}, ${3:string destination_file[, }${4:resource context]});${5}
snippet fclose
	${1:bool }fclose(${2:resource fp});${3}
snippet feof
	${1:bool }feof(${2:resource fp});${3}
snippet fflush
	${1:bool }fflush(${2:resource fp});${3}
snippet fgetc
	${1:string }fgetc(${2:resource fp});${3}
snippet fgetcsv
	${1:array }fgetcsv(${2:resource fp [,}${3:int length [, }${4:string delimiter [, }${5:string enclosure[, }${6:string escape]]]]});${7}
snippet fgets
	${1:string }fgets(${2:resource fp[, }${3:int lengthish]});${4}
snippet fgetss
	${1:string }fgetss(${2:resource fp [, }${3:int lengthish, }${4:string allowable_tags]});${5}
snippet file
	${1:array }file(${2:string filename [, }${3:int flags[, }${4:resource context]]});${5}
snippet file_get_contents
	${1:string }file_get_contents(${2:string filename [, }${3:long flags [, }${4:resource context [, }${5:long offset [, }${6:long maxlen]]]]});${7}
snippet file_put_contents
	${1:int }file_put_contents(${2:string file}, ${3:mixed data [, }${4:int flags [, }${5:resource context]]});${6}
snippet flock
	${1:bool }flock(${2:resource fp, }${3:int operation [, }${4:int &wouldblock]});${5}
snippet fnmatch
	${1:bool }fnmatch(${2:string pattern}, ${3:string filename [, }${4:int flags]});${5}
snippet fopen
	${1:resource }fopen(${2:string filename}, ${3:string mode [, }${4:bool use_include_path [, }${5:resource context]]});${6}
snippet fpassthru
	${1:int }fpassthru(${2:resource fp});${3}
snippet fputcsv
	${1:int }fputcsv(${2:resource fp}, ${3:array fields [, }${4:string delimiter [, }${5:string enclosure]]});${6}
snippet fread
	${1:string }fread(${2:resource fp}, ${3:int length});${4}
snippet fscanf
	${1:mixed }fscanf(${2:resource stream}, ${3:string format [, }${4:string ...]});${5}
snippet fseek
	${1:int }fseek(${2:resource fp}, ${3:int offset [, }${4:int whence]});${5}
snippet fstat
	${1:array }fstat(${2:resource fp});${3}
snippet ftell
	${1:int }ftell(${2:resource fp});${3}
snippet ftruncate
	${1:bool }ftruncate(${2:resource fp}, ${3:int size});${4}
snippet fwrite
	${1:int }fwrite(${2:resource fp}, ${3:string str [, }${4:int length]});${5}
snippet get_meta_tags
	${1:array }get_meta_tags(${2:string filename [, }${3:bool use_include_path]});${4}
snippet mkdir
	${1:bool }mkdir(${2:string pathname [,} ${3:int mode [, }${4:bool recursive [, }${5:resource context]]]});${6}
snippet pclose
	${1:int }pclose(${2:resource fp});${3}
snippet popen
	${1:resource }popen(${2:string command}, ${3:string mode});${4}
snippet readfile
	${1:int }readfile(${2:string filename [, }${3:int flags[, }${4:resource context]]});${5}
snippet realpath
	${1:string }realpath(${2:string path});${3}
snippet rename
	${1:bool }rename(${2:string old_name}, ${3:string new_name[, }${4:resource context]});${5}
snippet rewind
	${1:bool }rewind(${2:resource fp});${3}
snippet rmdir
	${1:bool }rmdir(${2:string dirname[, }${3:resource context]});${4}
snippet sys_get_temp_dir
	${1:string }sys_get_temp_dir();${2}
snippet tempnam
	${1:string }tempnam(${2:string dir}, ${3:string prefix});${4}
snippet tmpfile
	${1:resource }tmpfile(${2:void});${3}
snippet umask
	${1:int }umask(${2:[int mask]});${3}
snippet unlink
	${1:bool }unlink(${2:string filename[, }${3:context context]});${4}
# php-src/ext/standard/filestat.c
snippet chgrp
	${1:bool }chgrp(${2:string filename}, ${3:mixed group});${4}
snippet chmod
	${1:bool }chmod(${2:string filename}, ${3:int mode});${4}
snippet chown
	${1:bool }chown(${2:string filename}, ${3:mixed user});${4}
snippet clearstatcache
	${1:void }clearstatcache(${2:void});${3}
snippet disk_free_space
	${1:float }disk_free_space(${2:string path});${3}
snippet disk_total_space
	${1:float }disk_total_space(${2:string path});${3}
snippet file_exists
	${1:bool }file_exists(${2:string filename});${3}
snippet fileatime
	${1:int }fileatime(${2:string filename});${3}
snippet filectime
	${1:int }filectime(${2:string filename});${3}
snippet filegroup
	${1:int }filegroup(${2:string filename});${3}
snippet fileinode
	${1:int }fileinode(${2:string filename});${3}
snippet filemtime
	${1:int }filemtime(${2:string filename});${3}
snippet fileowner
	${1:int }fileowner(${2:string filename});${3}
snippet fileperms
	${1:int }fileperms(${2:string filename});${3}
snippet filesize
	${1:int }filesize(${2:string filename});${3}
snippet filetype
	${1:string }filetype(${2:string filename});${3}
snippet is_dir
	${1:bool }is_dir(${2:string filename});${3}
snippet is_executable
	${1:bool }is_executable(${2:string filename});${3}
snippet is_file
	${1:bool }is_file(${2:string filename});${3}
snippet is_link
	${1:bool }is_link(${2:string filename});${3}
snippet is_readable
	${1:bool }is_readable(${2:string filename});${3}
snippet is_writable
	${1:bool }is_writable(${2:string filename});${3}
snippet lchgrp
	${1:bool }lchgrp(${2:string filename}, ${3:mixed group});${4}
snippet lchown
	${1:bool }lchown(${2:string filename}, ${3:mixed user});${4}
snippet lstat
	${1:array }lstat(${2:string filename});${3}
snippet stat
	${1:array }stat(${2:string filename});${3}
snippet touch
	${1:bool }touch(${2:string filename [, }${3:int time [, }${4:int atime]]});${5}
# php-src/ext/standard/formatted_print.c
snippet fprintf
	${1:int }fprintf(${2:resource stream}, ${3:string format [, }${4:mixed arg1 [, }${5:mixed ...]]});${6}
snippet printf
	${1:int }printf(${2:string format [, }${3:mixed arg1 [, }${4:mixed ...]]});${5}
snippet sprintf
	${1:string }sprintf(${2:string format [, }${3:mixed arg1 [, }${4:mixed ...]]});${5}
snippet vfprintf
	${1:int }vfprintf(${2:resource stream}, ${3:string format}, ${4:array args});${5}
snippet vprintf
	${1:int }vprintf(${2:string format}, ${3:array args});${4}
snippet vsprintf
	${1:string }vsprintf(${2:string format}, ${3:array args});${4}
# php-src/ext/standard/fsock.c
snippet fsockopen
	${1:resource }fsockopen(${2:string hostname}, ${3:int port [, }${4:int errno [, }${5:string errstr [, }${6:float timeout]]]});${7}
snippet pfsockopen
	${1:resource }pfsockopen(${2:string hostname}, ${3:int port [, }${4:int errno [, }${5:string errstr [, }${6:float timeout]]]});${7}
# php-src/ext/standard/ftok.c
snippet ftok
	${1:int }ftok(${2:string pathname}, ${3:string proj});${4}
# php-src/ext/standard/head.c
snippet header
	${1:void }header(${2:string header [, }${3:bool replace, }${4:[int http_response_code]]});${5}
snippet headers_list
	${1:array }headers_list(${2:void});${3}
snippet headers_sent
	${1:bool }headers_sent(${2:[string &$file [, }${3:int &$line]]});${4}
snippet setcookie
	${1:bool }setcookie(${2:string name [, }${3:string value [, }${4:int expires [, string path [, string domain [, bool secure[, bool httponly]]]]]]});${5}
snippet setrawcookie
	${1:bool }setrawcookie(${2:string name [, }${3:string value [, }${4:int expires [, string path [, string domain [, bool secure[, bool httponly]]]]]]});${5}
# php-src/ext/standard/html.c
snippet get_html_translation_table
	${1:array }get_html_translation_table(${2:[int table [, }${3:int quote_style]]});${4}
snippet html_entity_decode
	${1:string }html_entity_decode(${2:string string [, }${3:int quote_style][, }${4:string charset]});${5}
snippet htmlentities
	${1:string }htmlentities(${2:string string [, }${3:int quote_style[, }${4:string charset[, }${5:bool double_encode]]]});${6}
snippet htmlspecialchars
	${1:string }htmlspecialchars(${2:string string [, }${3:int quote_style[, }${4:string charset[, }${5:bool double_encode]]]});${6}
snippet htmlspecialchars_decode
	${1:string }htmlspecialchars_decode(${2:string string [, }${3:int quote_style]});${4}
# php-src/ext/standard/http.c
snippet http_build_query
	${1:string }http_build_query(${2:mixed formdata [, }${3:string prefix [, }${4:string arg_separator]]});${5}
# php-src/ext/standard/image.c
snippet getimagesize
	${1:array }getimagesize(${2:string imagefile [, }${3:array info]});${4}
snippet image_type_to_extension
	${1:string }image_type_to_extension(${2:int imagetype [, }${3:bool include_dot]});${4}
snippet image_type_to_mime_type
	${1:string }image_type_to_mime_type(${2:int imagetype});${3}
# php-src/ext/standard/info.c
snippet php_egg_logo_guid
	${1:string }php_egg_logo_guid(${2:void});${3}
snippet php_ini_loaded_file
	${1:string }php_ini_loaded_file(${2:void});${3}
snippet php_ini_scanned_files
	${1:string }php_ini_scanned_files(${2:void});${3}
snippet php_logo_guid
	${1:string }php_logo_guid(${2:void});${3}
snippet php_real_logo_guid
	${1:string }php_real_logo_guid(${2:void});${3}
snippet php_sapi_name
	${1:string }php_sapi_name(${2:void});${3}
snippet php_uname
	${1:string }php_uname(${2:void});${3}
snippet phpcredits
	${1:void }phpcredits(${2:[int flag]});${3}
snippet phpinfo
	${1:void }phpinfo(${2:[int what]});${3}
snippet phpversion
	${1:string }phpversion(${2:[string extension]});${3}
snippet zend_logo_guid
	${1:string }zend_logo_guid(${2:void});${3}
# php-src/ext/standard/iptc.c
snippet iptcembed
	${1:array }iptcembed(${2:string iptcdata}, ${3:string jpeg_file_name [, }${4:int spool]});${5}
snippet iptcparse
	${1:array }iptcparse(${2:string iptcdata});${3}
# php-src/ext/standard/lcg.c
snippet lcg_value
	${1:float }lcg_value();${2}
# php-src/ext/standard/levenshtein.c
snippet levenshtein
	${1:int }levenshtein(${2:string str1}, ${3:string str2[, }${4:int cost_ins, }${5:int cost_rep, }${6:int cost_del]});${7}
# php-src/ext/standard/link.c
snippet link
	${1:int }link(${2:string target}, ${3:string link});${4}
snippet linkinfo
	${1:int }linkinfo(${2:string filename});${3}
snippet readlink
	${1:string }readlink(${2:string filename});${3}
snippet symlink
	${1:int }symlink(${2:string target}, ${3:string link});${4}
# php-src/ext/standard/mail.c
snippet ezmlm_hash
	${1:int }ezmlm_hash(${2:string addr});${3}
snippet mail
	${1:int }mail(${2:string to}, ${3:string subject}, ${4:string message [, }${5:string additional_headers [, }${6:string additional_parameters]]});${7}
# php-src/ext/standard/math.c
snippet abs
	${1:int }abs(${2:int number});${3}
snippet acos
	${1:float }acos(${2:float number});${3}
snippet acosh
	${1:float }acosh(${2:float number});${3}
snippet asin
	${1:float }asin(${2:float number});${3}
snippet asinh
	${1:float }asinh(${2:float number});${3}
snippet atan
	${1:float }atan(${2:float number});${3}
snippet atan2
	${1:float }atan2(${2:float y}, ${3:float x});${4}
snippet atanh
	${1:float }atanh(${2:float number});${3}
snippet base_convert
	${1:string }base_convert(${2:string number}, ${3:int frombase}, ${4:int tobase});${5}
snippet bindec
	${1:int }bindec(${2:string binary_number});${3}
snippet ceil
	${1:float }ceil(${2:float number});${3}
snippet cos
	${1:float }cos(${2:float number});${3}
snippet cosh
	${1:float }cosh(${2:float number});${3}
snippet decbin
	${1:string }decbin(${2:int decimal_number});${3}
snippet dechex
	${1:string }dechex(${2:int decimal_number});${3}
snippet decoct
	${1:string }decoct(${2:int decimal_number});${3}
snippet deg2rad
	${1:float }deg2rad(${2:float number});${3}
snippet exp
	${1:float }exp(${2:float number});${3}
snippet expm1
	${1:float }expm1(${2:float number});${3}
snippet floor
	${1:float }floor(${2:float number});${3}
snippet fmod
	${1:float }fmod(${2:float x}, ${3:float y});${4}
snippet hexdec
	${1:int }hexdec(${2:string hexadecimal_number});${3}
snippet hypot
	${1:float }hypot(${2:float num1}, ${3:float num2});${4}
snippet is_finite
	${1:bool }is_finite(${2:float val});${3}
snippet is_infinite
	${1:bool }is_infinite(${2:float val});${3}
snippet is_nan
	${1:bool }is_nan(${2:float val});${3}
snippet log
	${1:float }log(${2:float number}, ${3:[float base]});${4}
snippet log10
	${1:float }log10(${2:float number});${3}
snippet log1p
	${1:float }log1p(${2:float number});${3}
snippet number_format
	${1:string }number_format(${2:float number [, }${3:int num_decimal_places [, }${4:string dec_seperator, }${5:string thousands_seperator]]});${6}
snippet octdec
	${1:int }octdec(${2:string octal_number});${3}
snippet pi
	${1:float }pi(${2:void});${3}
snippet pow
	${1:number }pow(${2:number base}, ${3:number exponent});${4}
snippet rad2deg
	${1:float }rad2deg(${2:float number});${3}
snippet round
	${1:float }round(${2:float number [, }${3:int precision]});${4}
snippet sin
	${1:float }sin(${2:float number});${3}
snippet sinh
	${1:float }sinh(${2:float number});${3}
snippet sqrt
	${1:float }sqrt(${2:float number});${3}
snippet tan
	${1:float }tan(${2:float number});${3}
snippet tanh
	${1:float }tanh(${2:float number});${3}
# php-src/ext/standard/md5.c
snippet md5
	${1:string }md5(${2:string str}, ${3:[ bool raw_output]});${4}
snippet md5_file
	${1:string }md5_file(${2:string filename [, }${3:bool raw_output]});${4}
# php-src/ext/standard/metaphone.c
snippet metaphone
	${1:string }metaphone(${2:string text[, }${3:int phones]});${4}
# php-src/ext/standard/microtime.c
snippet getrusage
	${1:array }getrusage(${2:[int who]});${3}
snippet gettimeofday
	${1:array }gettimeofday(${2:[bool get_as_float]});${3}
snippet microtime
	${1:mixed }microtime(${2:[bool get_as_float]});${3}
# php-src/ext/standard/pack.c
snippet pack
	${1:string }pack(${2:string format}, ${3:mixed arg1 [, }${4:mixed arg2 [, }${5:mixed ...]]});${6}
snippet unpack
	${1:array }unpack(${2:string format}, ${3:string input});${4}
# php-src/ext/standard/pageinfo.c
snippet getlastmod
	${1:int }getlastmod(${2:void});${3}
snippet getmygid
	${1:int }getmygid(${2:void});${3}
snippet getmyinode
	${1:int }getmyinode(${2:void});${3}
snippet getmypid
	${1:int }getmypid(${2:void});${3}
snippet getmyuid
	${1:int }getmyuid(${2:void});${3}
# php-src/ext/standard/proc_open.c
snippet proc_close
	${1:int }proc_close(${2:resource process});${3}
snippet proc_get_status
	${1:array }proc_get_status(${2:resource process});${3}
snippet proc_open
	${1:resource }proc_open(${2:string command}, ${3:array descriptorspec}, ${4:array &pipes [, }${5:string cwd [, }${6:array env [, }${7:array other_options]]]});${8}
snippet proc_terminate
	${1:bool }proc_terminate(${2:resource process [, }${3:long signal]});${4}
# php-src/ext/standard/quot_print.c
snippet quoted_printable_decode
	${1:binary }quoted_printable_decode(${2:string str});${3}
# php-src/ext/standard/rand.c
snippet getrandmax
	${1:int }getrandmax(${2:void});${3}
snippet mt_getrandmax
	${1:int }mt_getrandmax(${2:void});${3}
snippet mt_rand
	${1:int }mt_rand(${2:[int min}, ${3:int max]});${4}
snippet mt_srand
	${1:void }mt_srand(${2:[int seed]});${3}
snippet rand
	${1:int }rand(${2:[int min}, ${3:int max]});${4}
snippet srand
	${1:void }srand(${2:[int seed]});${3}
# php-src/ext/standard/reg.c
snippet ereg
	${1:int }ereg(${2:string pattern}, ${3:string string [, }${4:array registers]});${5}
snippet ereg_replace
	${1:string }ereg_replace(${2:string pattern}, ${3:string replacement}, ${4:string string});${5}
snippet eregi
	${1:int }eregi(${2:string pattern}, ${3:string string [, }${4:array registers]});${5}
snippet eregi_replace
	${1:string }eregi_replace(${2:string pattern}, ${3:string replacement}, ${4:string string});${5}
snippet split
	${1:array }split(${2:string pattern}, ${3:string string [, }${4:int limit]});${5}
snippet spliti
	${1:array }spliti(${2:string pattern}, ${3:string string [, }${4:int limit]});${5}
snippet sql_regcase
	${1:string }sql_regcase(${2:string string});${3}
# php-src/ext/standard/sha1.c
snippet sha1
	${1:string }sha1(${2:string str [, }${3:bool raw_output]});${4}
snippet sha1_file
	${1:string }sha1_file(${2:string filename [, }${3:bool raw_output]});${4}
# php-src/ext/standard/soundex.c
snippet soundex
	${1:string }soundex(${2:string str});${3}
# php-src/ext/standard/streamsfuncs.c
snippet stream_context_create
	${1:resource }stream_context_create(${2:[array options[, }${3:array params]]});${4}
snippet stream_context_get_default
	${1:resource }stream_context_get_default(${2:[array options]});${3}
snippet stream_context_get_options
	${1:array }stream_context_get_options(${2:resource context|resource stream});${3}
snippet stream_context_set_option
	${1:bool }stream_context_set_option(${2:resource context|resource stream}, ${3:string wrappername}, ${4:string optionname}, ${5:mixed value});${6}
snippet stream_context_set_params
	${1:bool }stream_context_set_params(${2:resource context|resource stream}, ${3:array options});${4}
snippet stream_copy_to_stream
	${1:long }stream_copy_to_stream(${2:resource source}, ${3:resource dest [, }${4:long maxlen [, }${5:long pos]]});${6}
snippet stream_default_encoding
	${1:bool }stream_default_encoding(${2:string encoding});${3}
snippet stream_encoding
	${1:void }stream_encoding(${2:resource stream[, }${3:string encoding]});${4}
snippet stream_filter_append
	${1:resource }stream_filter_append(${2:resource stream}, ${3:string filtername[, }${4:int read_write[, }${5:mixed filterparams]]});${6}
snippet stream_filter_prepend
	${1:resource }stream_filter_prepend(${2:resource stream}, ${3:string filtername[, }${4:int read_write[, }${5:mixed filterparams]]});${6}
snippet stream_filter_remove
	${1:bool }stream_filter_remove(${2:resource stream_filter});${3}
snippet stream_get_contents
	${1:string }stream_get_contents(${2:resource source [, }${3:long maxlen [, }${4:long offset]]});${5}
snippet stream_get_line
	${1:string }stream_get_line(${2:resource stream}, ${3:int maxlen [, }${4:string ending]});${5}
snippet stream_get_meta_data
	${1:array }stream_get_meta_data(${2:resource fp});${3}
snippet stream_get_transports
	${1:array }stream_get_transports();${2}
snippet stream_get_wrappers
	${1:array }stream_get_wrappers();${2}
snippet stream_is_local
	${1:bool }stream_is_local(${2:resource stream|string url});${3}
snippet stream_resolve_include_path
	${1:string }stream_resolve_include_path(${2:string filename[, }${3:resource context]});${4}
snippet stream_select
	${1:int }stream_select(${2:array &read_streams}, ${3:array &write_streams}, ${4:array &except_streams}, ${5:int tv_sec[, }${6:int tv_usec]});${7}
snippet stream_set_blocking
	${1:bool }stream_set_blocking(${2:resource socket}, ${3:int mode});${4}
snippet stream_set_timeout
	${1:bool }stream_set_timeout(${2:resource stream}, ${3:int seconds}, ${4:int microseconds});${5}
snippet stream_set_write_buffer
	${1:int }stream_set_write_buffer(${2:resource fp}, ${3:int buffer});${4}
snippet stream_socket_accept
	${1:resource }stream_socket_accept(${2:resource serverstream}, ${3:[ double timeout, }${4:string &peername ]});${5}
snippet stream_socket_client
	${1:resource }stream_socket_client(${2:string remoteaddress [, }${3:long &errcode, }${4:string &errstring, }${5:double timeout, }${6:long flags, }${7:resource context]});${8}
snippet stream_socket_enable_crypto
	${1:int }stream_socket_enable_crypto(${2:resource stream}, ${3:bool enable [, }${4:int cryptokind, }${5:resource sessionstream]});${6}
snippet stream_socket_get_name
	${1:string }stream_socket_get_name(${2:resource stream}, ${3:bool want_peer});${4}
snippet stream_socket_pair
	${1:array }stream_socket_pair(${2:int domain}, ${3:int type}, ${4:int protocol});${5}
snippet stream_socket_recvfrom
	${1:string }stream_socket_recvfrom(${2:resource stream}, ${3:long amount [, }${4:long flags [, }${5:string &remote_addr]]});${6}
snippet stream_socket_sendto
	${1:long }stream_socket_sendto(${2:resouce stream}, ${3:string data [, }${4:long flags [, }${5:string target_addr]]});${6}
snippet stream_socket_server
	${1:resource }stream_socket_server(${2:string localaddress [, }${3:long &errcode, }${4:string &errstring, }${5:long flags, }${6:resource context]});${7}
snippet stream_socket_shutdown
	${1:int }stream_socket_shutdown(${2:resource stream}, ${3:int how});${4}
# php-src/ext/standard/string.c
snippet addcslashes
	${1:binary }addcslashes(${2:binary str}, ${3:binary charlist});${4}
snippet addslashes
	${1:string }addslashes(${2:string str});${3}
snippet basename
	${1:string }basename(${2:string path [, }${3:string suffix]});${4}
snippet bin2hex
	${1:string }bin2hex(${2:string data});${3}
snippet chr
	${1:string }chr(${2:int codepoint});${3}
snippet chunk_split
	${1:string }chunk_split(${2:string str [, }${3:int chunklen [, }${4:string ending]]});${5}
snippet count_chars
	${1:mixed }count_chars(${2:string input [, }${3:int mode]});${4}
snippet dirname
	${1:string }dirname(${2:string path});${3}
snippet explode
	${1:array }explode(${2:string separator}, ${3:string str [, }${4:int limit]});${5}
snippet hebrev
	${1:string }hebrev(${2:string str [, }${3:int max_chars_per_line]});${4}
snippet hebrevc
	${1:string }hebrevc(${2:string str [, }${3:int max_chars_per_line]});${4}
snippet implode
	${1:string }implode(${2:[string glue,] }${3:array pieces});${4}
snippet join
	${1:string }join(${2:[string glue,] }${3:array pieces});${4}
snippet localeconv
	${1:array }localeconv(${2:void});${3}
snippet ltrim
	${1:string }ltrim(${2:string str [, }${3:string character_mask]});${4}
snippet money_format
	${1:string }money_format(${2:string format}, ${3:float value});${4}
snippet nl2br
	${1:string }nl2br(${2:string str});${3}
snippet nl_langinfo
	${1:string }nl_langinfo(${2:int item});${3}
snippet ord
	${1:int }ord(${2:string character});${3}
snippet parse_str
	${1:void }parse_str(${2:string encoded_string [, }${3:array result]});${4}
snippet pathinfo
	${1:array }pathinfo(${2:string path[, }${3:int options]});${4}
snippet quotemeta
	${1:string }quotemeta(${2:string str});${3}
snippet rtrim
	${1:string }rtrim(${2:string str [, }${3:string character_mask]});${4}
snippet setlocale
	${1:string }setlocale(${2:mixed category}, ${3:string locale [, }${4:string ...]});${5}
snippet similar_text
	${1:int }similar_text(${2:string str1}, ${3:string str2 [, }${4:float percent]});${5}
snippet sscanf
	${1:mixed }sscanf(${2:string str}, ${3:string format [, }${4:string ...]});${5}
snippet str_getcsv
	${1:array }str_getcsv(${2:string input[, }${3:string delimiter[, }${4:string enclosure[, }${5:string escape]]]});${6}
snippet str_ireplace
	${1:mixed }str_ireplace(${2:mixed search}, ${3:mixed replace}, ${4:mixed subject [, }${5:int &replace_count]});${6}
snippet str_pad
	${1:string }str_pad(${2:string input}, ${3:int pad_length [, }${4:string pad_string [, }${5:int pad_type]]});${6}
snippet str_repeat
	${1:string }str_repeat(${2:string input}, ${3:int mult});${4}
snippet str_replace
	${1:mixed }str_replace(${2:mixed search}, ${3:mixed replace}, ${4:mixed subject [, }${5:int &replace_count]});${6}
snippet str_rot13
	${1:string }str_rot13(${2:string str});${3}
snippet str_shuffle
	${1:void }str_shuffle(${2:string str});${3}
snippet str_split
	${1:array }str_split(${2:string str [, }${3:int split_length]});${4}
snippet str_word_count
	${1:mixed }str_word_count(${2:string str}, ${3:[int format [, }${4:string charlist]]});${5}
snippet strchr
	${1:string }strchr(${2:string haystack}, ${3:string needle[, }${4:bool part]});${5}
snippet strcoll
	${1:int }strcoll(${2:string str1}, ${3:string str2});${4}
snippet strcspn
	${1:int }strcspn(${2:string str}, ${3:string mask [, }${4:start [, }${5:len]]});${6}
snippet strip_tags
	${1:string }strip_tags(${2:string str [, }${3:string allowable_tags]});${4}
snippet stripcslashes
	${1:binary }stripcslashes(${2:binary str});${3}
snippet stripos
	${1:int }stripos(${2:string haystack}, ${3:string needle [, }${4:int offset]});${5}
snippet stripslashes
	${1:string }stripslashes(${2:string str});${3}
snippet stristr
	${1:string }stristr(${2:string haystack}, ${3:string needle[, }${4:bool part]});${5}
snippet strnatcasecmp
	${1:int }strnatcasecmp(${2:string s1}, ${3:string s2});${4}
snippet strnatcmp
	${1:int }strnatcmp(${2:string s1}, ${3:string s2});${4}
snippet strpbrk
	${1:array }strpbrk(${2:string haystack}, ${3:string char_list});${4}
snippet strpos
	${1:int }strpos(${2:string haystack}, ${3:mixed needle [, }${4:int offset]});${5}
snippet strrchr
	${1:string }strrchr(${2:string haystack}, ${3:string needle});${4}
snippet strrev
	${1:string }strrev(${2:string str});${3}
snippet strripos
	${1:int }strripos(${2:string haystack}, ${3:string needle [, }${4:int offset]});${5}
snippet strrpos
	${1:int }strrpos(${2:string haystack}, ${3:string needle [, }${4:int offset]});${5}
snippet strspn
	${1:int }strspn(${2:string str}, ${3:string mask [, }${4:start [, }${5:len]]});${6}
snippet strstr
	${1:string }strstr(${2:string haystack}, ${3:string needle[, }${4:bool part]});${5}
snippet strtok
	${1:string }strtok(${2:[string str,] }${3:string token});${4}
snippet strtolower
	${1:string }strtolower(${2:string str});${3}
snippet strtotitle
	${1:string }strtotitle(${2:string str});${3}
snippet strtoupper
	${1:string }strtoupper(${2:string str});${3}
snippet strtr
	${1:string }strtr(${2:string str}, ${3:string from[, }${4:string to]});${5}
snippet substr
	${1:string }substr(${2:string str}, ${3:int start [, }${4:int length]});${5}
snippet substr_compare
	${1:int }substr_compare(${2:string main_str}, ${3:string str}, ${4:int offset [, }${5:int length [, }${6:bool case_sensitivity]]});${7}
snippet substr_count
	${1:int }substr_count(${2:string haystack}, ${3:string needle [, }${4:int offset [, }${5:int length]]});${6}
snippet substr_replace
	${1:mixed }substr_replace(${2:mixed str}, ${3:mixed repl}, ${4:mixed start [, }${5:mixed length]});${6}
snippet trim
	${1:string }trim(${2:string str [, }${3:string character_mask]});${4}
snippet ucfirst
	${1:string }ucfirst(${2:string str});${3}
snippet ucwords
	${1:string }ucwords(${2:string str});${3}
snippet wordwrap
	${1:string }wordwrap(${2:string str [,} ${3:int width [, }${4:string break [, }${5:boolean cut]]]});${6}
# php-src/ext/standard/syslog.c
snippet closelog
	${1:bool }closelog(${2:void});${3}
snippet define_syslog_variables
	${1:void }define_syslog_variables(${2:void});${3}
snippet openlog
	${1:bool }openlog(${2:string ident}, ${3:int option}, ${4:int facility});${5}
snippet syslog
	${1:bool }syslog(${2:int priority}, ${3:string message});${4}
# php-src/ext/standard/type.c
snippet floatval
	${1:float }floatval(${2:mixed var});${3}
snippet gettype
	${1:string }gettype(${2:mixed var});${3}
snippet intval
	${1:int }intval(${2:mixed var [, }${3:int base]});${4}
snippet is_array
	${1:bool }is_array(${2:mixed var});${3}
snippet is_binary
	${1:bool }is_binary(${2:mixed var});${3}
snippet is_bool
	${1:bool }is_bool(${2:mixed var});${3}
snippet is_buffer
	${1:bool }is_buffer(${2:mixed var});${3}
snippet is_callable
	${1:bool }is_callable(${2:mixed var [, }${3:bool syntax_only [, }${4:string callable_name]]});${5}
snippet is_float
	${1:bool }is_float(${2:mixed var});${3}
snippet is_long
	${1:bool }is_long(${2:mixed var});${3}
snippet is_null
	${1:bool }is_null(${2:mixed var});${3}
snippet is_numeric
	${1:bool }is_numeric(${2:mixed value});${3}
snippet is_object
	${1:bool }is_object(${2:mixed var});${3}
snippet is_resource
	${1:bool }is_resource(${2:mixed var});${3}
snippet is_scalar
	${1:bool }is_scalar(${2:mixed value});${3}
snippet is_string
	${1:bool }is_string(${2:mixed var});${3}
snippet is_unicode
	${1:bool }is_unicode(${2:mixed var});${3}
snippet settype
	${1:bool }settype(${2:mixed var}, ${3:string type});${4}
snippet strval
	${1:string }strval(${2:mixed var});${3}
# php-src/ext/standard/uniqid.c
snippet uniqid
	${1:string }uniqid(${2:[string prefix}, ${3:bool more_entropy]});${4}
# php-src/ext/standard/url.c
snippet get_headers
	${1:array }get_headers(${2:string url[, }${3:int format]});${4}
snippet parse_url
	${1:mixed }parse_url(${2:string url}, ${3:[int url_component]});${4}
snippet rawurldecode
	${1:binary }rawurldecode(${2:binary str});${3}
snippet rawurlencode
	${1:binary }rawurlencode(${2:binary str});${3}
snippet urldecode
	${1:binary }urldecode(${2:binary str});${3}
snippet urlencode
	${1:string }urlencode(${2:binary str});${3}
# php-src/ext/standard/user_filters.c
snippet stream_bucket_append
	${1:void }stream_bucket_append(${2:resource brigade}, ${3:resource bucket});${4}
snippet stream_bucket_make_writeable
	${1:object }stream_bucket_make_writeable(${2:resource brigade});${3}
snippet stream_bucket_new
	${1:object }stream_bucket_new(${2:resource stream}, ${3:string buffer});${4}
snippet stream_bucket_prepend
	${1:void }stream_bucket_prepend(${2:resource brigade}, ${3:resource bucket});${4}
snippet stream_filter_register
	${1:bool }stream_filter_register(${2:string filtername}, ${3:string classname});${4}
snippet stream_get_filters
	${1:array }stream_get_filters(${2:void});${3}
snippet user_filter_nop
	${1:void }user_filter_nop(${2:void});${3}
# php-src/ext/standard/uuencode.c
snippet convert_uudecode
	${1:string }convert_uudecode(${2:string data});${3}
snippet convert_uuencode
	${1:string }convert_uuencode(${2:string data});${3}
# php-src/ext/standard/var.c
snippet debug_zval_dump
	${1:void }debug_zval_dump(${2:mixed var});${3}
snippet memory_get_peak_usage
	${1:int }memory_get_peak_usage(${2:[real_usage]});${3}
snippet memory_get_usage
	${1:int }memory_get_usage(${2:[real_usage]});${3}
snippet serialize
	${1:string }serialize(${2:mixed variable});${3}
snippet unserialize
	${1:mixed }unserialize(${2:string variable_representation});${3}
snippet var_dump
	${1:void }var_dump(${2:mixed var});${3}
snippet var_export
	${1:mixed }var_export(${2:mixed var [, }${3:bool return]});${4}
snippet var_inspect
	${1:void }var_inspect(${2:mixed var});${3}
# php-src/ext/standard/versioning.c
snippet version_compare
	${1:int }version_compare(${2:string ver1}, ${3:string ver2 [, }${4:string oper]});${5}
# php-src/ext/sybase/php_sybase_db.c
snippet sybase_affected_rows
	${1:int }sybase_affected_rows(${2:[int link_id]});${3}
snippet sybase_min_error_severity
	${1:void }sybase_min_error_severity(${2:int severity});${3}
snippet sybase_min_message_severity
	${1:void }sybase_min_message_severity(${2:int severity});${3}
snippet sybase_select_db
	${1:bool }sybase_select_db(${2:string database [, }${3:int link_id]});${4}
# php-src/ext/sybase_ct/php_sybase_ct.c
snippet sybase_close
	${1:bool }sybase_close(${2:[int link_id]});${3}
snippet sybase_connect
	${1:int }sybase_connect(${2:[string host [, }${3:string user [, }${4:string password [, }${5:string charset [, }${6:string appname]]]]]});${7}
snippet sybase_data_seek
	${1:bool }sybase_data_seek(${2:int result}, ${3:int offset});${4}
snippet sybase_deadlock_retry_count
	${1:void }sybase_deadlock_retry_count(${2:int retry_count});${3}
snippet sybase_fetch_array
	${1:array }sybase_fetch_array(${2:int result});${3}
snippet sybase_fetch_assoc
	${1:array }sybase_fetch_assoc(${2:int result});${3}
snippet sybase_fetch_field
	${1:object }sybase_fetch_field(${2:int result [, }${3:int offset]});${4}
snippet sybase_fetch_object
	${1:object }sybase_fetch_object(${2:int result [, }${3:mixed object]});${4}
snippet sybase_fetch_row
	${1:array }sybase_fetch_row(${2:int result});${3}
snippet sybase_field_seek
	${1:bool }sybase_field_seek(${2:int result}, ${3:int offset});${4}
snippet sybase_free_result
	${1:bool }sybase_free_result(${2:int result});${3}
snippet sybase_get_last_message
	${1:string }sybase_get_last_message(${2:void});${3}
snippet sybase_min_client_severity
	${1:void }sybase_min_client_severity(${2:int severity});${3}
snippet sybase_min_server_severity
	${1:void }sybase_min_server_severity(${2:int severity});${3}
snippet sybase_num_fields
	${1:int }sybase_num_fields(${2:int result});${3}
snippet sybase_num_rows
	${1:int }sybase_num_rows(${2:int result});${3}
snippet sybase_pconnect
	${1:int }sybase_pconnect(${2:[string host [, }${3:string user [, }${4:string password [, }${5:string charset [, }${6:string appname]]]]]});${7}
snippet sybase_query
	${1:int }sybase_query(${2:string query [, }${3:int link_id]});${4}
snippet sybase_result
	${1:string }sybase_result(${2:int result}, ${3:int row}, ${4:mixed field});${5}
snippet sybase_set_message_handler
	${1:bool }sybase_set_message_handler(${2:mixed error_func [, }${3:resource connection]});${4}
snippet sybase_unbuffered_query
	${1:int }sybase_unbuffered_query(${2:string query [, }${3:int link_id]});${4}
# php-src/ext/sysvmsg/sysvmsg.c
snippet msg_get_queue
	${1:resource }msg_get_queue(${2:int key [, }${3:int perms]});${4}
snippet msg_receive
	${1:mixed }msg_receive(${2:resource queue}, ${3:int desiredmsgtype}, ${4:int &msgtype}, ${5:int maxsize}, ${6:mixed message [, }${7:bool unserialize=true [, }${8:int flags=0 [, }${9:int errorcode]]]});${10}
snippet msg_remove_queue
	${1:bool }msg_remove_queue(${2:resource queue});${3}
snippet msg_send
	${1:bool }msg_send(${2:resource queue}, ${3:int msgtype}, ${4:mixed message [, }${5:bool serialize=true [, }${6:bool blocking=true [, }${7:int errorcode]]]});${8}
snippet msg_set_queue
	${1:bool }msg_set_queue(${2:resource queue}, ${3:array data});${4}
snippet msg_stat_queue
	${1:array }msg_stat_queue(${2:resource queue});${3}
# php-src/ext/sysvsem/sysvsem.c
snippet sem_acquire
	${1:bool }sem_acquire(${2:resource id});${3}
snippet sem_get
	${1:resource }sem_get(${2:int key [, }${3:int max_acquire [, }${4:int perm [, }${5:int auto_release]]});${6}
snippet sem_release
	${1:bool }sem_release(${2:resource id});${3}
snippet sem_remove
	${1:bool }sem_remove(${2:resource id});${3}
# php-src/ext/sysvshm/sysvshm.c
snippet shm_attach
	${1:resource }shm_attach(${2:int key [, }${3:int memsize [, }${4:int perm]]});${5}
snippet shm_detach
	${1:bool }shm_detach(${2:resource shm_identifier});${3}
snippet shm_get_var
	${1:mixed }shm_get_var(${2:resource id}, ${3:int variable_key});${4}
snippet shm_has_var
	${1:bool }shm_has_var(${2:resource id}, ${3:int variable_key});${4}
snippet shm_put_var
	${1:bool }shm_put_var(${2:resource shm_identifier}, ${3:int variable_key}, ${4:mixed variable});${5}
snippet shm_remove
	${1:bool }shm_remove(${2:resource shm_identifier});${3}
snippet shm_remove_var
	${1:bool }shm_remove_var(${2:resource id}, ${3:int variable_key});${4}
# php-src/ext/tidy/tidy.c
snippet tidyNode::getParent
	${1:tidyNode }tidyNode::getParent();${2}
snippet tidyNode::hasChildren
	${1:bool }tidyNode::hasChildren();${2}
snippet tidyNode::hasSiblings
	${1:bool }tidyNode::hasSiblings();${2}
snippet tidyNode::isAsp
	${1:bool }tidyNode::isAsp();${2}
snippet tidyNode::isComment
	${1:bool }tidyNode::isComment();${2}
snippet tidyNode::isHtml
	${1:bool }tidyNode::isHtml();${2}
snippet tidyNode::isJste
	${1:bool }tidyNode::isJste();${2}
snippet tidyNode::isPhp
	${1:bool }tidyNode::isPhp();${2}
snippet tidyNode::isText
	${1:bool }tidyNode::isText();${2}
snippet tidy_access_count
	${1:int }tidy_access_count();${2}
snippet tidy_clean_repair
	${1:boolean }tidy_clean_repair();${2}
snippet tidy_config_count
	${1:int }tidy_config_count();${2}
snippet tidy_diagnose
	${1:boolean }tidy_diagnose();${2}
snippet tidy_error_count
	${1:int }tidy_error_count();${2}
snippet tidy_get_body
	${1:TidyNode }tidy_get_body(${2:resource tidy});${3}
snippet tidy_get_config
	${1:array }tidy_get_config();${2}
snippet tidy_get_error_buffer
	${1:string }tidy_get_error_buffer();${2}
snippet tidy_get_head
	${1:TidyNode }tidy_get_head();${2}
snippet tidy_get_html
	${1:TidyNode }tidy_get_html();${2}
snippet tidy_get_html_ver
	${1:int }tidy_get_html_ver();${2}
snippet tidy_get_opt_doc
	${1:string }tidy_get_opt_doc(${2:tidy resource}, ${3:string optname});${4}
snippet tidy_get_output
	${1:string }tidy_get_output();${2}
snippet tidy_get_release
	${1:string }tidy_get_release();${2}
snippet tidy_get_root
	${1:TidyNode }tidy_get_root();${2}
snippet tidy_get_status
	${1:int }tidy_get_status();${2}
snippet tidy_getopt
	${1:mixed }tidy_getopt(${2:string option});${3}
snippet tidy_is_xhtml
	${1:bool }tidy_is_xhtml();${2}
snippet tidy_is_xml
	${1:bool }tidy_is_xml();${2}
snippet tidy_parse_file
	${1:boolean }tidy_parse_file(${2:string file [,} ${3:mixed config_options [, }${4:string encoding [, }${5:bool use_include_path]]]});${6}
snippet tidy_parse_string
	${1:bool }tidy_parse_string(${2:string input [, }${3:mixed config_options [, }${4:string encoding]]});${5}
snippet tidy_repair_file
	${1:boolean }tidy_repair_file(${2:string filename [,} ${3:mixed config_file [, }${4:string encoding [, }${5:bool use_include_path]]]});${6}
snippet tidy_repair_string
	${1:boolean }tidy_repair_string(${2:string data [, }${3:mixed config_file [, }${4:string encoding]]});${5}
snippet tidy_warning_count
	${1:int }tidy_warning_count();${2}
# php-src/ext/tokenizer/tokenizer.c
snippet token_get_all
	${1:array }token_get_all(${2:string source});${3}
snippet token_name
	${1:string }token_name(${2:int type});${3}
# php-src/ext/unicode/collator.c
snippet Collator::compare
	${1:int }Collator::compare(${2:string str1}, ${3:string str2});${4}
snippet Collator::getAttribute
	${1:int }Collator::getAttribute(${2:int attribute});${3}
snippet Collator::getStrength
	${1:int }Collator::getStrength();${2}
snippet Collator::setAttribute
	${1:bool }Collator::setAttribute(${2:int attribute}, ${3:int value});${4}
snippet Collator::setStrength
	${1:void }Collator::setStrength(${2:int strength});${3}
snippet Collator::sort
	${1:array }Collator::sort(${2:array input});${3}
snippet collator_compare
	${1:int }collator_compare(${2:Collator coll}, ${3:string str1}, ${4:string str2});${5}
snippet collator_create
	${1:Collator }collator_create(${2:string locale});${3}
snippet collator_get_attribute
	${1:int }collator_get_attribute(${2:Collator coll}, ${3:int attribute});${4}
snippet collator_get_default
	${1:Collator }collator_get_default(${2:void});${3}
snippet collator_get_strength
	${1:int }collator_get_strength(${2:Collator coll});${3}
snippet collator_set_attribute
	${1:bool }collator_set_attribute(${2:Collator coll}, ${3:int attribute}, ${4:int value});${5}
snippet collator_set_default
	${1:void }collator_set_default(${2:Collator coll});${3}
snippet collator_set_strength
	${1:void }collator_set_strength(${2:Collator coll}, ${3:int strength});${4}
snippet collator_sort
	${1:array }collator_sort(${2:Collator coll}, ${3:array input});${4}
snippet Collator::__construct
	Collator::__construct(${1:string locale});${2}
# php-src/ext/unicode/locale.c
snippet locale_get_default
	${1:string }locale_get_default(${2:void});${3}
snippet locale_set_default
	${1:bool }locale_set_default(${2:string locale});${3}
# php-src/ext/unicode/property.c
snippet char_enum_names
	${1:bool }char_enum_names(${2:callback Callback}, ${3:int start}, ${4:int limit[, }${5:int extended = false]});${6}
snippet char_enum_types
	${1:bool }char_enum_types(${2:callback Callback});${3}
snippet char_from_digit
	${1:char }char_from_digit(${2:int digit[, }${3:int radix = 10]});${4}
snippet char_from_name
	${1:char }char_from_name(${2:string charname[, }${3:bool extended = false]});${4}
snippet char_get_age
	${1:string }char_get_age(${2:char c});${3}
snippet char_get_combining_class
	${1:int }char_get_combining_class(${2:char text});${3}
snippet char_get_digit_value
	${1:int }char_get_digit_value(${2:char text[, }${3:int radix]});${4}
snippet char_get_direction
	${1:int }char_get_direction(${2:char c});${3}
snippet char_get_mirrored
	${1:char }char_get_mirrored(${2:char c});${3}
snippet char_get_name
	${1:string }char_get_name(${2:char c[, }${3:bool extended = false]});${4}
snippet char_get_numeric_value
	${1:float }char_get_numeric_value(${2:char text});${3}
snippet char_get_property_from_name
	${1:int }char_get_property_from_name(${2:string property_name});${3}
snippet char_get_property_max_value
	${1:int }char_get_property_max_value(${2:int property});${3}
snippet char_get_property_min_value
	${1:int }char_get_property_min_value(${2:int property});${3}
snippet char_get_property_name
	${1:string }char_get_property_name(${2:int property});${3}
snippet char_get_property_value
	${1:int }char_get_property_value(${2:char c}, ${3:int property});${4}
snippet char_get_property_value_from_name
	${1:int }char_get_property_value_from_name(${2:int property}, ${3:string value_name});${4}
snippet char_get_property_value_name
	${1:string }char_get_property_value_name(${2:int property}, ${3:int value[, }${4:int name_choice]});${5}
snippet char_get_type
	${1:int }char_get_type(${2:char c});${3}
snippet char_has_binary_property
	${1:bool }char_has_binary_property(${2:string text}, ${3:int property});${4}
snippet char_is_alnum
	${1:bool }char_is_alnum(${2:string text});${3}
snippet char_is_alpha
	${1:bool }char_is_alpha(${2:string text});${3}
snippet char_is_alphabetic
	${1:bool }char_is_alphabetic(${2:string text});${3}
snippet char_is_base
	${1:bool }char_is_base(${2:string text});${3}
snippet char_is_blank
	${1:bool }char_is_blank(${2:string text});${3}
snippet char_is_cntrl
	${1:bool }char_is_cntrl(${2:string text});${3}
snippet char_is_defined
	${1:bool }char_is_defined(${2:string text});${3}
snippet char_is_digit
	${1:bool }char_is_digit(${2:string text});${3}
snippet char_is_graph
	${1:bool }char_is_graph(${2:string text});${3}
snippet char_is_id_ignorable
	${1:bool }char_is_id_ignorable(${2:string text});${3}
snippet char_is_id_part
	${1:bool }char_is_id_part(${2:string text});${3}
snippet char_is_id_start
	${1:bool }char_is_id_start(${2:string text});${3}
snippet char_is_iso_control
	${1:bool }char_is_iso_control(${2:string text});${3}
snippet char_is_lower
	${1:bool }char_is_lower(${2:string text});${3}
snippet char_is_lowercase
	${1:bool }char_is_lowercase(${2:string text});${3}
snippet char_is_mirrored
	${1:bool }char_is_mirrored(${2:string text});${3}
snippet char_is_print
	${1:bool }char_is_print(${2:string text});${3}
snippet char_is_punct
	${1:bool }char_is_punct(${2:string text});${3}
snippet char_is_space
	${1:bool }char_is_space(${2:string text});${3}
snippet char_is_titlecase
	${1:bool }char_is_titlecase(${2:string text});${3}
snippet char_is_upper
	${1:bool }char_is_upper(${2:string text});${3}
snippet char_is_uppercase
	${1:bool }char_is_uppercase(${2:string text});${3}
snippet char_is_valid
	${1:bool }char_is_valid(${2:char c});${3}
snippet char_is_whitespace
	${1:bool }char_is_whitespace(${2:string text});${3}
snippet char_is_xdigit
	${1:bool }char_is_xdigit(${2:string text});${3}
# php-src/ext/unicode/transform.c
snippet str_transliterate
	${1:string }str_transliterate(${2:string str}, ${3:string from_script}, ${4:string to_script[, }${5:string variant]});${6}
# php-src/ext/unicode/unicode.c
snippet unicode_decode
	${1:unicode }unicode_decode(${2:binary input}, ${3:string encoding [, }${4:int flags]});${5}
snippet unicode_encode
	${1:binary }unicode_encode(${2:unicode input}, ${3:string encoding [, }${4:int flags]});${5}
snippet unicode_get_error_mode
	${1:int }unicode_get_error_mode(${2:int direction});${3}
snippet unicode_get_subst_char
	${1:string }unicode_get_subst_char();${2}
snippet unicode_restore_error_handler
	${1:bool }unicode_restore_error_handler(${2:void});${3}
snippet unicode_semantics
	${1:bool }unicode_semantics();${2}
snippet unicode_set_error_handler
	${1:callback }unicode_set_error_handler(${2:callback new_callback});${3}
snippet unicode_set_error_mode
	${1:bool }unicode_set_error_mode(${2:int direction}, ${3:int mode});${4}
snippet unicode_set_subst_char
	${1:bool }unicode_set_subst_char(${2:string character});${3}
# php-src/ext/unicode/unicode_iterators.c
snippet TextIterator::__construct
	${1:void }TextIterator::__construct(${2:unicode text [, }${3:int flags = TextIterator::CODEPOINT [, }${4:string locale ]]});${5}
snippet TextIterator::current
	${1:unicode }TextIterator::current();${2}
snippet TextIterator::first
	${1:int }TextIterator::first();${2}
snippet TextIterator::following
	${1:int }TextIterator::following(${2:int offset});${3}
snippet TextIterator::getAll
	${1:array }TextIterator::getAll();${2}
snippet TextIterator::getAvailableLocales
	${1:array }TextIterator::getAvailableLocales();${2}
snippet TextIterator::getRuleStatus
	${1:int }TextIterator::getRuleStatus();${2}
snippet TextIterator::getRuleStatusArray
	${1:array }TextIterator::getRuleStatusArray();${2}
snippet TextIterator::isBoundary
	${1:bool }TextIterator::isBoundary(${2:int offset});${3}
snippet TextIterator::key
	${1:int }TextIterator::key();${2}
snippet TextIterator::last
	${1:int }TextIterator::last();${2}
snippet TextIterator::next
	${1:int }TextIterator::next(${2:[int n]});${3}
snippet TextIterator::offset
	${1:int }TextIterator::offset();${2}
snippet TextIterator::preceding
	${1:int }TextIterator::preceding(${2:int offset});${3}
snippet TextIterator::previous
	${1:int }TextIterator::previous(${2:[int n]});${3}
snippet TextIterator::valid
	${1:bool }TextIterator::valid();${2}
# php-src/ext/wddx/wddx.c
snippet wddx_add_vars
	${1:int }wddx_add_vars(${2:int packet_id}, ${3:mixed var_names [, }${4:mixed ...]});${5}
snippet wddx_packet_end
	${1:string }wddx_packet_end(${2:int packet_id});${3}
snippet wddx_packet_start
	${1:int }wddx_packet_start(${2:[string comment]});${3}
snippet wddx_serialize_value
	${1:string }wddx_serialize_value(${2:mixed var [, }${3:string comment]});${4}
snippet wddx_serialize_vars
	${1:string }wddx_serialize_vars(${2:mixed var_name [, }${3:mixed ...]});${4}
snippet wddx_unserialize
	${1:mixed }wddx_unserialize(${2:mixed packet});${3}
# php-src/ext/xml/xml.c
snippet utf8_decode
	${1:string }utf8_decode(${2:string data});${3}
snippet utf8_encode
	${1:string }utf8_encode(${2:string data});${3}
snippet xml_error_string
	${1:string }xml_error_string(${2:int code});${3}
snippet xml_get_current_byte_index
	${1:int }xml_get_current_byte_index(${2:resource parser});${3}
snippet xml_get_current_column_number
	${1:int }xml_get_current_column_number(${2:resource parser});${3}
snippet xml_get_current_line_number
	${1:int }xml_get_current_line_number(${2:resource parser});${3}
snippet xml_get_error_code
	${1:int }xml_get_error_code(${2:resource parser});${3}
snippet xml_parse
	${1:int }xml_parse(${2:resource parser}, ${3:string data [, }${4:int isFinal]});${5}
snippet xml_parse_into_struct
	${1:int }xml_parse_into_struct(${2:resource parser}, ${3:string data}, ${4:array &struct}, ${5:array &index});${6}
snippet xml_parser_create
	${1:resource }xml_parser_create(${2:[string encoding]});${3}
snippet xml_parser_create_ns
	${1:resource }xml_parser_create_ns(${2:[string encoding [, }${3:string sep]]});${4}
snippet xml_parser_free
	${1:int }xml_parser_free(${2:resource parser});${3}
snippet xml_parser_get_option
	${1:int }xml_parser_get_option(${2:resource parser}, ${3:int option});${4}
snippet xml_parser_set_option
	${1:int }xml_parser_set_option(${2:resource parser}, ${3:int option}, ${4:mixed value});${5}
snippet xml_set_character_data_handler
	${1:int }xml_set_character_data_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_default_handler
	${1:int }xml_set_default_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_element_handler
	${1:int }xml_set_element_handler(${2:resource parser}, ${3:string shdl}, ${4:string ehdl});${5}
snippet xml_set_end_namespace_decl_handler
	${1:int }xml_set_end_namespace_decl_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_external_entity_ref_handler
	${1:int }xml_set_external_entity_ref_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_notation_decl_handler
	${1:int }xml_set_notation_decl_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_object
	${1:int }xml_set_object(${2:resource parser}, ${3:object &obj});${4}
snippet xml_set_processing_instruction_handler
	${1:int }xml_set_processing_instruction_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_start_namespace_decl_handler
	${1:int }xml_set_start_namespace_decl_handler(${2:resource parser}, ${3:string hdl});${4}
snippet xml_set_unparsed_entity_decl_handler
	${1:int }xml_set_unparsed_entity_decl_handler(${2:resource parser}, ${3:string hdl});${4}
# php-src/ext/xmlreader/php_xmlreader.c
snippet XMLReader::XML
	${1:boolean }XMLReader::XML(${2:string source [, }${3:string encoding [, }${4:int options]]});${5}
snippet XMLReader::close
	${1:boolean }XMLReader::close();${2}
snippet XMLReader::expand
	${1:boolean }XMLReader::expand();${2}
snippet XMLReader::getAttribute
	${1:string }XMLReader::getAttribute(${2:string name});${3}
snippet XMLReader::getAttributeNo
	${1:string }XMLReader::getAttributeNo(${2:int index});${3}
snippet XMLReader::getAttributeNs
	${1:string }XMLReader::getAttributeNs(${2:string name}, ${3:string namespaceURI});${4}
snippet XMLReader::getParserProperty
	${1:boolean }XMLReader::getParserProperty(${2:int property});${3}
snippet XMLReader::isValid
	${1:boolean }XMLReader::isValid();${2}
snippet XMLReader::lookupNamespace
	${1:string }XMLReader::lookupNamespace(${2:string prefix});${3}
snippet XMLReader::moveToAttribute
	${1:boolean }XMLReader::moveToAttribute(${2:string name});${3}
snippet XMLReader::moveToAttributeNo
	${1:boolean }XMLReader::moveToAttributeNo(${2:int index});${3}
snippet XMLReader::moveToAttributeNs
	${1:boolean }XMLReader::moveToAttributeNs(${2:string name}, ${3:string namespaceURI});${4}
snippet XMLReader::moveToElement
	${1:boolean }XMLReader::moveToElement();${2}
snippet XMLReader::moveToFirstAttribute
	${1:boolean }XMLReader::moveToFirstAttribute();${2}
snippet XMLReader::moveToNextAttribute
	${1:boolean }XMLReader::moveToNextAttribute();${2}
snippet XMLReader::next
	${1:boolean }XMLReader::next(${2:[string localname]});${3}
snippet XMLReader::open
	${1:boolean }XMLReader::open(${2:string URI [, }${3:string encoding [, }${4:int options]]});${5}
snippet XMLReader::read
	${1:boolean }XMLReader::read();${2}
snippet XMLReader::readInnerXml
	${1:boolean }XMLReader::readInnerXml();${2}
snippet XMLReader::readOuterXml
	${1:boolean }XMLReader::readOuterXml();${2}
snippet XMLReader::readString
	${1:boolean }XMLReader::readString();${2}
snippet XMLReader::setParserProperty
	${1:boolean }XMLReader::setParserProperty(${2:int property}, ${3:boolean value});${4}
snippet XMLReader::setRelaxNGSchema
	${1:boolean }XMLReader::setRelaxNGSchema(${2:string filename});${3}
snippet XMLReader::setRelaxNGSchemaSource
	${1:boolean }XMLReader::setRelaxNGSchemaSource(${2:string source});${3}
snippet XMLReader::setSchema
	${1:boolean }XMLReader::setSchema(${2:string filename});${3}
# php-src/ext/xmlrpc/xmlrpc-epi-php.c
snippet xmlrpc_decode
	${1:array }xmlrpc_decode(${2:string xml [, }${3:string encoding]});${4}
snippet xmlrpc_decode_request
	${1:array }xmlrpc_decode_request(${2:string xml}, ${3:string& method [, }${4:string encoding]});${5}
snippet xmlrpc_encode
	${1:string }xmlrpc_encode(${2:mixed value});${3}
snippet xmlrpc_encode_request
	${1:string }xmlrpc_encode_request(${2:string method}, ${3:mixed params});${4}
snippet xmlrpc_get_type
	${1:string }xmlrpc_get_type(${2:mixed value});${3}
snippet xmlrpc_is_fault
	${1:bool }xmlrpc_is_fault(${2:array});${3}
snippet xmlrpc_parse_method_descriptions
	${1:array }xmlrpc_parse_method_descriptions(${2:string xml});${3}
snippet xmlrpc_server_add_introspection_data
	${1:int }xmlrpc_server_add_introspection_data(${2:resource server}, ${3:array desc});${4}
snippet xmlrpc_server_call_method
	${1:mixed }xmlrpc_server_call_method(${2:resource server}, ${3:string xml}, ${4:mixed user_data [, }${5:array output_options]});${6}
snippet xmlrpc_server_create
	${1:resource }xmlrpc_server_create(${2:void});${3}
snippet xmlrpc_server_destroy
	${1:int }xmlrpc_server_destroy(${2:resource server});${3}
snippet xmlrpc_server_register_introspection_callback
	${1:bool }xmlrpc_server_register_introspection_callback(${2:resource server}, ${3:string function});${4}
snippet xmlrpc_server_register_method
	${1:bool }xmlrpc_server_register_method(${2:resource server}, ${3:string method_name}, ${4:string function});${5}
snippet xmlrpc_set_type
	${1:bool }xmlrpc_set_type(${2:string value}, ${3:string type});${4}
# php-src/ext/xmlwriter/php_xmlwriter.c
snippet xmlwriter_end_attribute
	${1:bool }xmlwriter_end_attribute(${2:resource xmlwriter});${3}
snippet xmlwriter_end_cdata
	${1:bool }xmlwriter_end_cdata(${2:resource xmlwriter});${3}
snippet xmlwriter_end_comment
	${1:bool }xmlwriter_end_comment(${2:resource xmlwriter});${3}
snippet xmlwriter_end_document
	${1:bool }xmlwriter_end_document(${2:resource xmlwriter});${3}
snippet xmlwriter_end_dtd
	${1:bool }xmlwriter_end_dtd(${2:resource xmlwriter});${3}
snippet xmlwriter_end_dtd_attlist
	${1:bool }xmlwriter_end_dtd_attlist(${2:resource xmlwriter});${3}
snippet xmlwriter_end_dtd_element
	${1:bool }xmlwriter_end_dtd_element(${2:resource xmlwriter});${3}
snippet xmlwriter_end_dtd_entity
	${1:bool }xmlwriter_end_dtd_entity(${2:resource xmlwriter});${3}
snippet xmlwriter_end_element
	${1:bool }xmlwriter_end_element(${2:resource xmlwriter});${3}
snippet xmlwriter_end_pi
	${1:bool }xmlwriter_end_pi(${2:resource xmlwriter});${3}
snippet xmlwriter_flush
	${1:mixed }xmlwriter_flush(${2:resource xmlwriter [,}${3:bool empty]});${4}
snippet xmlwriter_full_end_element
	${1:bool }xmlwriter_full_end_element(${2:resource xmlwriter});${3}
snippet xmlwriter_open_memory
	${1:resource }xmlwriter_open_memory();${2}
snippet xmlwriter_open_uri
	${1:resource }xmlwriter_open_uri(${2:string source});${3}
snippet xmlwriter_output_memory
	${1:string }xmlwriter_output_memory(${2:resource xmlwriter [,}${3:bool flush]});${4}
snippet xmlwriter_set_indent
	${1:bool }xmlwriter_set_indent(${2:resource xmlwriter}, ${3:bool indent});${4}
snippet xmlwriter_set_indent_string
	${1:bool }xmlwriter_set_indent_string(${2:resource xmlwriter}, ${3:string indentString});${4}
snippet xmlwriter_start_attribute
	${1:bool }xmlwriter_start_attribute(${2:resource xmlwriter}, ${3:string name});${4}
snippet xmlwriter_start_attribute_ns
	${1:bool }xmlwriter_start_attribute_ns(${2:resource xmlwriter}, ${3:string prefix}, ${4:string name}, ${5:string uri});${6}
snippet xmlwriter_start_cdata
	${1:bool }xmlwriter_start_cdata(${2:resource xmlwriter});${3}
snippet xmlwriter_start_comment
	${1:bool }xmlwriter_start_comment(${2:resource xmlwriter});${3}
snippet xmlwriter_start_document
	${1:bool }xmlwriter_start_document(${2:resource xmlwriter}, ${3:string version}, ${4:string encoding}, ${5:string standalone});${6}
snippet xmlwriter_start_dtd
	${1:bool }xmlwriter_start_dtd(${2:resource xmlwriter}, ${3:string name}, ${4:string pubid}, ${5:string sysid});${6}
snippet xmlwriter_start_dtd_attlist
	${1:bool }xmlwriter_start_dtd_attlist(${2:resource xmlwriter}, ${3:string name});${4}
snippet xmlwriter_start_dtd_element
	${1:bool }xmlwriter_start_dtd_element(${2:resource xmlwriter}, ${3:string name});${4}
snippet xmlwriter_start_dtd_entity
	${1:bool }xmlwriter_start_dtd_entity(${2:resource xmlwriter}, ${3:string name}, ${4:bool isparam});${5}
snippet xmlwriter_start_element
	${1:bool }xmlwriter_start_element(${2:resource xmlwriter}, ${3:string name});${4}
snippet xmlwriter_start_element_ns
	${1:bool }xmlwriter_start_element_ns(${2:resource xmlwriter}, ${3:string prefix}, ${4:string name}, ${5:string uri});${6}
snippet xmlwriter_start_pi
	${1:bool }xmlwriter_start_pi(${2:resource xmlwriter}, ${3:string target});${4}
snippet xmlwriter_text
	${1:bool }xmlwriter_text(${2:resource xmlwriter}, ${3:string content});${4}
snippet xmlwriter_write_attribute
	${1:bool }xmlwriter_write_attribute(${2:resource xmlwriter}, ${3:string name}, ${4:string content});${5}
snippet xmlwriter_write_attribute_ns
	${1:bool }xmlwriter_write_attribute_ns(${2:resource xmlwriter}, ${3:string prefix}, ${4:string name}, ${5:string uri}, ${6:string content});${7}
snippet xmlwriter_write_cdata
	${1:bool }xmlwriter_write_cdata(${2:resource xmlwriter}, ${3:string content});${4}
snippet xmlwriter_write_comment
	${1:bool }xmlwriter_write_comment(${2:resource xmlwriter}, ${3:string content});${4}
snippet xmlwriter_write_dtd
	${1:bool }xmlwriter_write_dtd(${2:resource xmlwriter}, ${3:string name}, ${4:string pubid}, ${5:string sysid}, ${6:string subset});${7}
snippet xmlwriter_write_dtd_attlist
	${1:bool }xmlwriter_write_dtd_attlist(${2:resource xmlwriter}, ${3:string name}, ${4:string content});${5}
snippet xmlwriter_write_dtd_element
	${1:bool }xmlwriter_write_dtd_element(${2:resource xmlwriter}, ${3:string name}, ${4:string content});${5}
snippet xmlwriter_write_dtd_entity
	${1:bool }xmlwriter_write_dtd_entity(${2:resource xmlwriter}, ${3:string name}, ${4:string content [, }${5:int pe [, }${6:string pubid [, }${7:string sysid [, }${8:string ndataid]]]]});${9}
snippet xmlwriter_write_element
	${1:bool }xmlwriter_write_element(${2:resource xmlwriter}, ${3:string name[, }${4:string content]});${5}
snippet xmlwriter_write_element_ns
	${1:bool }xmlwriter_write_element_ns(${2:resource xmlwriter}, ${3:string prefix}, ${4:string name}, ${5:string uri[, }${6:string content]});${7}
snippet xmlwriter_write_pi
	${1:bool }xmlwriter_write_pi(${2:resource xmlwriter}, ${3:string target}, ${4:string content});${5}
snippet xmlwriter_write_raw
	${1:bool }xmlwriter_write_raw(${2:resource xmlwriter}, ${3:string content});${4}
# php-src/ext/xsl/xsltprocessor.c
snippet xsl_xsltprocessor_get_parameter
	${1:string }xsl_xsltprocessor_get_parameter(${2:string namespace}, ${3:string name});${4}
snippet xsl_xsltprocessor_has_exslt_support
	${1:bool }xsl_xsltprocessor_has_exslt_support();${2}
snippet xsl_xsltprocessor_import_stylesheet
	${1:void }xsl_xsltprocessor_import_stylesheet(${2:domdocument doc});${3}
snippet xsl_xsltprocessor_register_php_functions
	${1:void }xsl_xsltprocessor_register_php_functions();${2}
snippet xsl_xsltprocessor_remove_parameter
	${1:bool }xsl_xsltprocessor_remove_parameter(${2:string namespace}, ${3:string name});${4}
snippet xsl_xsltprocessor_set_parameter
	${1:bool }xsl_xsltprocessor_set_parameter(${2:string namespace}, ${3:mixed name [, }${4:string value]});${5}
snippet xsl_xsltprocessor_transform_to_doc
	${1:domdocument }xsl_xsltprocessor_transform_to_doc(${2:domnode doc});${3}
snippet xsl_xsltprocessor_transform_to_uri
	${1:int }xsl_xsltprocessor_transform_to_uri(${2:domdocument doc}, ${3:string uri});${4}
snippet xsl_xsltprocessor_transform_to_xml
	${1:string }xsl_xsltprocessor_transform_to_xml(${2:domdocument doc});${3}
# php-src/ext/zip/php_zip.c
snippet addFile
	${1:bool }addFile(${2:string filepath[, }${3:string entryname[, }${4:int start [, }${5:int length]]]});${6}
snippet addFromString
	${1:bool }addFromString(${2:string name}, ${3:string content});${4}
snippet close
	${1:bool }close();${2}
snippet createEmptyDir
	${1:bool }createEmptyDir(${2:string dirname});${3}
snippet deleteIndex
	${1:bool }deleteIndex(${2:int index});${3}
snippet deleteName
	${1:bool }deleteName(${2:string name});${3}
snippet getArchiveComment
	${1:string }getArchiveComment();${2}
snippet getCommentIndex
	${1:string }getCommentIndex(${2:int index});${3}
snippet getCommentName
	${1:string }getCommentName(${2:string name});${3}
snippet getFromIndex
	${1:string }getFromIndex(${2:string entryname[, }${3:int len [, }${4:int flags]]});${5}
snippet getFromName
	${1:string }getFromName(${2:string entryname[, }${3:int len [, }${4:int flags]]});${5}
snippet getNameIndex
	${1:string }getNameIndex(${2:int index [, }${3:int flags]});${4}
snippet getStream
	${1:resource }getStream(${2:string entryname});${3}
snippet locateName
	${1:int }locateName(${2:string filename[, }${3:int flags]});${4}
snippet open
	${1:mixed }open(${2:string source [, }${3:int flags]});${4}
snippet renameIndex
	${1:bool }renameIndex(${2:int index}, ${3:string new_name});${4}
snippet renameName
	${1:bool }renameName(${2:string name}, ${3:string new_name});${4}
snippet setArchiveComment
	${1:bool }setArchiveComment(${2:string name}, ${3:string comment});${4}
snippet setCommentIndex
	${1:bool }setCommentIndex(${2:int index}, ${3:string comment});${4}
snippet setCommentName
	${1:bool }setCommentName(${2:string name}, ${3:string comment});${4}
snippet statIndex
	${1:resource }statIndex(${2:int index[, }${3:int flags]});${4}
snippet statName
	${1:array }statName(${2:string filename[, }${3:int flags]});${4}
snippet unchangeAll
	${1:bool }unchangeAll();${2}
snippet unchangeIndex
	${1:bool }unchangeIndex(${2:int index});${3}
snippet unchangeName
	${1:bool }unchangeName(${2:string name});${3}
snippet zip_close
	${1:void }zip_close(${2:resource zip});${3}
snippet zip_entry_close
	${1:void }zip_entry_close(${2:resource zip_ent});${3}
snippet zip_entry_compressedsize
	${1:int }zip_entry_compressedsize(${2:resource zip_entry});${3}
snippet zip_entry_compressionmethod
	${1:string }zip_entry_compressionmethod(${2:resource zip_entry});${3}
snippet zip_entry_filesize
	${1:int }zip_entry_filesize(${2:resource zip_entry});${3}
snippet zip_entry_name
	${1:string }zip_entry_name(${2:resource zip_entry});${3}
snippet zip_entry_open
	${1:bool }zip_entry_open(${2:resource zip_dp}, ${3:resource zip_entry [, }${4:string mode]});${5}
snippet zip_entry_read
	${1:mixed }zip_entry_read(${2:resource zip_entry [, }${3:int len]});${4}
snippet zip_open
	${1:resource }zip_open(${2:string filename});${3}
snippet zip_read
	${1:resource }zip_read(${2:resource zip});${3}
# php-src/ext/zlib/zlib.c
snippet gzcompress
	${1:binary }gzcompress(${2:binary data[, }${3:int level = -1[, }${4:int encoding = ZLIB_ENCODING_DEFLATE]});${5}
snippet gzdecode
	${1:binary }gzdecode(${2:binary data[, }${3:int max_decoded_len]});${4}
snippet gzdeflate
	${1:binary }gzdeflate(${2:binary data[, }${3:int level = -1[, }${4:int encoding = ZLIB_ENCODING_RAW]});${5}
snippet gzencode
	${1:binary }gzencode(${2:binary data[, }${3:int level = -1[, }${4:int encoding = ZLIB_ENCODING_GZIP]});${5}
snippet gzfile
	${1:array }gzfile(${2:string filename [, }${3:int use_include_path]});${4}
snippet gzinflate
	${1:binary }gzinflate(${2:binary data[, }${3:int max_decoded_len]});${4}
snippet gzopen
	${1:resource }gzopen(${2:string filename}, ${3:string mode [, }${4:int use_include_path]});${5}
snippet gzuncompress
	${1:binary }gzuncompress(${2:binary data[, }${3:int max_decoded_len]});${4}
snippet readgzfile
	${1:int }readgzfile(${2:string filename [, }${3:int use_include_path]});${4}
snippet zlib_decode
	${1:binary }zlib_decode(${2:binary data[, }${3:int max_decoded_len]});${4}
snippet zlib_encode
	${1:binary }zlib_encode(${2:binary data}, ${3:int encoding[, }${4:int level = -1]});${5}
snippet zlib_get_coding_type
	${1:string }zlib_get_coding_type(${2:void});${3}
# php-src/main/main.c
snippet set_time_limit
	${1:bool }set_time_limit(${2:int seconds});${3}
# php-src/main/output.c
snippet ob_clean
	${1:bool }ob_clean(${2:void});${3}
snippet ob_end_clean
	${1:bool }ob_end_clean(${2:void});${3}
snippet ob_end_flush
	${1:bool }ob_end_flush(${2:void});${3}
snippet ob_flush
	${1:bool }ob_flush(${2:void});${3}
snippet ob_get_clean
	${1:bool }ob_get_clean(${2:void});${3}
snippet ob_get_contents
	${1:string }ob_get_contents(${2:void});${3}
snippet ob_get_flush
	${1:bool }ob_get_flush(${2:void});${3}
snippet ob_get_length
	${1:int }ob_get_length(${2:void});${3}
snippet ob_get_level
	${1:int }ob_get_level(${2:void});${3}
snippet ob_get_status
	${1:false|array }ob_get_status(${2:[bool full_status]});${3}
snippet ob_implicit_flush
	${1:void }ob_implicit_flush(${2:[int flag]});${3}
snippet ob_list_handlers
	${1:false|array }ob_list_handlers();${2}
snippet ob_start
	${1:bool }ob_start(${2:[string|array user_function [, }${3:int chunk_size [, }${4:int flags]]]});${5}
snippet output_add_rewrite_var
	${1:bool }output_add_rewrite_var(${2:string name}, ${3:string value});${4}
snippet output_reset_rewrite_vars
	${1:bool }output_reset_rewrite_vars(${2:void});${3}
# php-src/main/streams/userspace.c
snippet stream_wrapper_register
	${1:bool }stream_wrapper_register(${2:string protocol}, ${3:string classname});${4}
snippet stream_wrapper_restore
	${1:bool }stream_wrapper_restore(${2:string protocol});${3}
snippet stream_wrapper_unregister
	${1:bool }stream_wrapper_unregister(${2:string protocol});${3}
# php-src/sapi/apache/php_apache.c
snippet apache_child_terminate
	${1:bool }apache_child_terminate(${2:void});${3}
snippet apache_reset_timeout
	${1:bool }apache_reset_timeout(${2:void});${3}
snippet virtual filename
	${1:bool }virtual(${2:string filename});${3}
# php-src/sapi/apache2filter/php_functions.c
snippet virtual uri
	${1:bool }virtual(${2:string uri});${3}
# php-src/sapi/apache2handler/php_functions.c
snippet apache_getenv
	${1:bool }apache_getenv(${2:string variable [, }${3:bool walk_to_top]});${4}
# php-src/sapi/apache_hooks/php_apache.c
snippet apache_request_basic_auth_pw
	apache_request_basic_auth_pw();${2}
snippet ApacheRequest::allowed
	${1:int }ApacheRequest::allowed(${2:[int allowed]});${3}
snippet ApacheRequest::args
	${1:string }ApacheRequest::args(${2:[string new_args]});${3}
snippet ApacheRequest::assbackwards
	${1:int }ApacheRequest::assbackwards();${2}
snippet ApacheRequest::boundary
	${1:string }ApacheRequest::boundary();${2}
snippet ApacheRequest::bytes_sent
	${1:int }ApacheRequest::bytes_sent();${2}
snippet ApacheRequest::chunked
	${1:int }ApacheRequest::chunked();${2}
snippet ApacheRequest::content_encoding
	${1:string }ApacheRequest::content_encoding(${2:[string new_encoding]});${3}
snippet ApacheRequest::content_length
	${1:int }ApacheRequest::content_length(${2:[int new_content_length]});${3}
snippet ApacheRequest::content_type
	${1:string }ApacheRequest::content_type(${2:[string new_type]});${3}
snippet ApacheRequest::filename
	${1:string }ApacheRequest::filename(${2:[string new_filename]});${3}
snippet ApacheRequest::handler
	${1:string }ApacheRequest::handler(${2:[string new_handler]});${3}
snippet ApacheRequest::header_only
	${1:int }ApacheRequest::header_only();${2}
snippet ApacheRequest::hostname
	${1:string }ApacheRequest::hostname();${2}
snippet ApacheRequest::method
	${1:string }ApacheRequest::method();${2}
snippet ApacheRequest::method_number
	${1:int }ApacheRequest::method_number(${2:[int method_number]});${3}
snippet ApacheRequest::mtime
	${1:int }ApacheRequest::mtime();${2}
snippet ApacheRequest::no_cache
	${1:int }ApacheRequest::no_cache();${2}
snippet ApacheRequest::no_local_copy
	${1:int }ApacheRequest::no_local_copy();${2}
snippet ApacheRequest::path_info
	${1:string }ApacheRequest::path_info(${2:[string new_path_info]});${3}
snippet ApacheRequest::proto_num
	${1:int }ApacheRequest::proto_num();${2}
snippet ApacheRequest::protocol
	${1:string }ApacheRequest::protocol();${2}
snippet ApacheRequest::proxyreq
	${1:int }ApacheRequest::proxyreq(${2:[int new_proxyreq]});${3}
snippet ApacheRequest::read_body
	${1:int }ApacheRequest::read_body();${2}
snippet ApacheRequest::remaining
	${1:int }ApacheRequest::remaining();${2}
snippet ApacheRequest::request_time
	${1:int }ApacheRequest::request_time();${2}
snippet ApacheRequest::status
	${1:int }ApacheRequest::status(${2:[int new_status]});${3}
snippet ApacheRequest::status_line
	${1:string }ApacheRequest::status_line(${2:[string new_status_line]});${3}
snippet ApacheRequest::the_request
	${1:string }ApacheRequest::the_request();${2}
snippet ApacheRequest::unparsed_uri
	${1:string }ApacheRequest::unparsed_uri(${2:[string new_unparsed_uri]});${3}
snippet ApacheRequest::uri
	${1:string }ApacheRequest::uri(${2:[string new_uri]});${3}
snippet apache_get_modules
	${1:array }apache_get_modules(${2:void});${3}
snippet apache_get_version
	${1:string }apache_get_version(${2:void});${3}
snippet apache_lookup_uri
	${1:object }apache_lookup_uri(${2:string URI});${3}
snippet apache_note
	${1:string }apache_note(${2:string note_name [, }${3:string note_value]});${4}
snippet apache_request_auth_name
	${1:string }apache_request_auth_name();${2}
snippet apache_request_auth_type
	${1:string }apache_request_auth_type();${2}
snippet apache_request_discard_request_body
	${1:long }apache_request_discard_request_body();${2}
snippet apache_request_err_headers_out
	${1:array }apache_request_err_headers_out(${2:[{string name|array list} [, }${3:string value [, }${4:bool replace = false]]]});${5}
snippet apache_request_headers
	${1:array }apache_request_headers(${2:void});${3}
snippet apache_request_headers_in
	${1:array }apache_request_headers_in();${2}
snippet apache_request_headers_out
	${1:array }apache_request_headers_out(${2:[{string name|array list} [, }${3:string value [, }${4:bool replace = false]]]});${5}
snippet apache_request_is_initial_req
	${1:bool }apache_request_is_initial_req();${2}
snippet apache_request_log_error
	${1:boolean }apache_request_log_error(${2:string message}, ${3:[long facility]});${4}
snippet apache_request_meets_conditions
	${1:long }apache_request_meets_conditions();${2}
snippet apache_request_remote_host
	${1:int }apache_request_remote_host(${2:[int type]});${3}
snippet apache_request_run
	${1:long }apache_request_run();${2}
snippet apache_request_satisfies
	${1:long }apache_request_satisfies();${2}
snippet apache_request_server_port
	${1:int }apache_request_server_port();${2}
snippet apache_request_set_etag
	${1:void }apache_request_set_etag();${2}
snippet apache_request_set_last_modified
	${1:void }apache_request_set_last_modified();${2}
snippet apache_request_some_auth_required
	${1:bool }apache_request_some_auth_required();${2}
snippet apache_request_sub_req_lookup_file
	${1:object }apache_request_sub_req_lookup_file(${2:string file});${3}
snippet apache_request_sub_req_lookup_uri
	${1:object }apache_request_sub_req_lookup_uri(${2:string uri});${3}
snippet apache_request_sub_req_method_uri
	${1:object }apache_request_sub_req_method_uri(${2:string method}, ${3:string uri});${4}
snippet apache_request_update_mtime
	${1:long }apache_request_update_mtime(${2:[int dependency_mtime]});${3}
snippet apache_response_headers
	${1:array }apache_response_headers(${2:void});${3}
snippet apache_setenv
	${1:bool }apache_setenv(${2:string variable}, ${3:string value [, }${4:bool walk_to_top]});${5}
snippet getallheaders
	${1:array }getallheaders(${2:void});${3}
snippet virtual
	${1:bool }virtual(${2:string filename});${3}
# php-src/sapi/milter/php_milter.c
snippet smfi_addheader
	${1:bool }smfi_addheader(${2:string headerf}, ${3:string headerv});${4}
snippet smfi_addrcpt
	${1:bool }smfi_addrcpt(${2:string rcpt});${3}
snippet smfi_chgheader
	${1:bool }smfi_chgheader(${2:string headerf}, ${3:string headerv});${4}
snippet smfi_delrcpt
	${1:bool }smfi_delrcpt(${2:string rcpt});${3}
snippet smfi_getsymval
	${1:string }smfi_getsymval(${2:string macro});${3}
snippet smfi_replacebody
	${1:bool }smfi_replacebody(${2:string body});${3}
snippet smfi_setflags
	${1:void }smfi_setflags(${2:long flags});${3}
snippet smfi_setreply
	${1:bool }smfi_setreply(${2:string rcode}, ${3:string xcode}, ${4:string message});${5}
snippet smfi_settimeout
	${1:void }smfi_settimeout(${2:long timeout});${3}
# php-src/sapi/nsapi/nsapi.c
snippet nsapi_request_headers
	${1:array }nsapi_request_headers(${2:void});${3}
snippet nsapi_response_headers
	${1:array }nsapi_response_headers(${2:void});${3}
snippet nsapi_virtual
	${1:bool }nsapi_virtual(${2:string uri});${3}
# Zend/zend_API.c
snippet display_disabled_function
	${1:void }display_disabled_function(${2:void});${3}
# Zend/zend_builtin_functions.c
snippet class_exists
	${1:bool }class_exists(${2:string classname [, }${3:bool autoload]});${4}
snippet crash
	${1:void }crash(${2:void});${3}
snippet create_function
	${1:string }create_function(${2:string args}, ${3:string code});${4}
snippet debug_backtrace
	${1:array }debug_backtrace(${2:void});${3}
snippet debug_print_backtrace
	${1:void }debug_print_backtrace(${2:void});${3}
snippet define
	${1:bool }define(${2:string constant_name}, ${3:mixed value}, ${4:boolean case_sensitive=true});${5}
snippet defined
	${1:bool }defined(${2:string constant_name});${3}
snippet each
	${1:array }each(${2:array arr});${3}
snippet error_reporting
	${1:int }error_reporting(${2:int new_error_level=null});${3}
snippet extension_loaded
	${1:bool }extension_loaded(${2:string extension_name});${3}
snippet func_get_arg
	${1:mixed }func_get_arg(${2:int arg_num});${3}
snippet func_get_args
	${1:array }func_get_args();${2}
snippet func_num_args
	${1:int }func_num_args(${2:void});${3}
snippet function_exists
	${1:bool }function_exists(${2:string function_name});${3}
snippet get_class
	${1:string }get_class(${2:[object object]});${3}
snippet get_class_methods
	${1:array }get_class_methods(${2:mixed class});${3}
snippet get_class_vars
	${1:array }get_class_vars(${2:string class_name});${3}
snippet get_declared_classes
	${1:array }get_declared_classes();${2}
snippet get_declared_interfaces
	${1:array }get_declared_interfaces();${2}
snippet get_defined_constants
	${1:array }get_defined_constants(${2:[bool categorize]});${3}
snippet get_defined_functions
	${1:array }get_defined_functions(${2:void});${3}
snippet get_defined_vars
	${1:array }get_defined_vars(${2:void});${3}
snippet get_extension_funcs
	${1:array }get_extension_funcs(${2:string extension_name});${3}
snippet get_included_files
	${1:array }get_included_files(${2:void});${3}
snippet get_loaded_extensions
	${1:array }get_loaded_extensions(${2:[bool zend_extensions]});${3}
snippet get_object_vars
	${1:array }get_object_vars(${2:object obj});${3}
snippet get_parent_class
	${1:string }get_parent_class(${2:[mixed object]});${3}
snippet get_resource_type
	${1:string }get_resource_type(${2:resource res});${3}
snippet interface_exists
	${1:bool }interface_exists(${2:string classname [, }${3:bool autoload]});${4}
snippet is_a
	${1:bool }is_a(${2:object object}, ${3:string class_name});${4}
snippet is_subclass_of
	${1:bool }is_subclass_of(${2:object object}, ${3:string class_name});${4}
snippet leak
	${1:void }leak(${2:int num_bytes=3});${3}
snippet method_exists
	${1:bool }method_exists(${2:object object}, ${3:string method});${4}
snippet property_exists
	${1:bool }property_exists(${2:mixed object_or_class}, ${3:string property_name});${4}
snippet restore_error_handler
	${1:void }restore_error_handler(${2:void});${3}
snippet restore_exception_handler
	${1:void }restore_exception_handler(${2:void});${3}
snippet set_error_handler
	${1:string }set_error_handler(${2:string error_handler [, }${3:int error_types]});${4}
snippet set_exception_handler
	${1:string }set_exception_handler(${2:callable exception_handler});${3}
snippet strcasecmp
	${1:int }strcasecmp(${2:string str1}, ${3:string str2});${4}
snippet strcmp
	${1:int }strcmp(${2:string str1}, ${3:string str2});${4}
snippet strlen
	${1:int }strlen(${2:string str});${3}
snippet strncasecmp
	${1:int }strncasecmp(${2:string str1}, ${3:string str2}, ${4:int len});${5}
snippet strncmp
	${1:int }strncmp(${2:string str1}, ${3:string str2}, ${4:int len});${5}
snippet trigger_error
	${1:void }trigger_error(${2:string messsage [, }${3:int error_type]});${4}
snippet zend_test_func
	${1:void }zend_test_func(${2:mixed arg1}, ${3:mixed arg2});${4}
snippet zend_thread_id
	${1:int }zend_thread_id(${2:void});${3}
snippet zend_version
	${1:string }zend_version(${2:void});${3}
# Zend/zend_exceptions.c
snippet ErrorException::getSeverity
	${1:int }ErrorException::getSeverity();${2}
snippet Exception::__clone
	${1:Exception }Exception::__clone();${2}
snippet Exception::__toString
	${1:string }Exception::__toString();${2}
snippet Exception::getCode
	${1:int }Exception::getCode();${2}
snippet Exception::getFile
	${1:string }Exception::getFile();${2}
snippet Exception::getLine
	${1:int }Exception::getLine();${2}
snippet Exception::getMessage
	${1:string }Exception::getMessage();${2}
snippet Exception::getTrace
	${1:array }Exception::getTrace();${2}
snippet Exception::getTraceAsString
	${1:string }Exception::getTraceAsString();${2}
snippet Exception::__construct
	Exception::__construct(${1:string message}, ${2:int code});${3}
snippet ErrorException::__construct
	ErrorException::__construct(${1:string message}, ${2:int code}, ${3:int severity [, }${4:string filename [, }${5:int lineno]]});${6}
######################################################################
#			    Default snippets
######################################################################
snippet <?php
	<?php
	${1}
	?>
snippet echo
	echo "${1:string}"${2};${3}
snippet include simple
	include ("${1:file}");${2}
snippet include once
	include_once ("${1:file}");${2}
snippet require simple
	require ("${1:file}");${2}
snippet require once
	require_once ("${1:file}");${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ Get['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet while
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ifelse
	if (${1:/* condition */}) {
		${2:// code...}
	}
	else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet ter
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach $key
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet foreach $key => $value
	foreach ($${1:variable} as $${2:key} => $${3:value}) {
		${4:// code...}
	}
snippet function
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet	$_SESSION POST
	$_SESSION['${1:value}'] = $_POST['$1'];${2}
snippet	$_SESSION GET
	$_SESSION['${1:value}'] = $_GET['$1'];${2}
